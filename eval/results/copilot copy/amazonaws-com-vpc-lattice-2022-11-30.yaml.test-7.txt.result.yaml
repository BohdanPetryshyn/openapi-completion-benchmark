openapi: 3.0.0
info:
  version: '2022-11-30'
  x-release: v4
  title: Amazon VPC Lattice
  description: 'Amazon VPC Lattice is a fully managed application networking service that you use to connect, secure, and monitor all of your services across multiple accounts and virtual private clouds (VPCs). Amazon VPC Lattice interconnects your microservices and legacy services within a logical boundary, so that you can discover and manage them more efficiently. For more information, see the <a href="https://docs.aws.amazon.com/vpc-lattice/latest/ug/">Amazon VPC Lattice User Guide</a> '
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: vpc-lattice
  x-aws-signingName: vpc-lattice
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/vpc-lattice-2022-11-30.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/vpc-lattice/'
servers:
  - url: 'http://vpc-lattice.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon VPC Lattice multi-region endpoint
  - url: 'https://vpc-lattice.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon VPC Lattice multi-region endpoint
  - url: 'http://vpc-lattice.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon VPC Lattice endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://vpc-lattice.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon VPC Lattice endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/services/{serviceIdentifier}/listeners/{listenerIdentifier}/rules':
    patch:
      operationId: BatchUpdateRule
      description: 'Updates the listener rules in a batch. You can use this operation to change the priority of listener rules. This can be useful when bulk updating or swapping rule priority. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdateRuleResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: listenerIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the listener.
          schema:
            type: string
            pattern: '^((listener-[0-9a-z]{17})|(^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$))$'
            minLength: 20
            maxLength: 2048
        - name: serviceIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the service.
          schema:
            type: string
            pattern: '^((svc-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - rules
              properties:
                rules:
                  description: The rules for the specified listener.
                  type: array
                  items:
                    $ref: '#/components/schemas/RuleUpdate'
                  minItems: 1
                  maxItems: 5
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateRule
      description: 'Creates a listener rule. Each listener has a default rule for checking connection requests, but you can define additional rules. Each rule consists of a priority, one or more actions, and one or more conditions. For more information, see <a href="https://docs.aws.amazon.com/vpc-lattice/latest/ug/listeners.html#listener-rules">Listener rules</a> in the <i>Amazon VPC Lattice User Guide</i>.'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRuleResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: listenerIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the listener.
          schema:
            type: string
            pattern: '^((listener-[0-9a-z]{17})|(^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$))$'
            minLength: 20
            maxLength: 2048
        - name: serviceIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the service.
          schema:
            type: string
            pattern: '^((svc-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - action
                - match
                - name
                - priority
              properties:
                action:
                  description: 'Describes the action for a rule. Each rule must include exactly one of the following types of actions: <code>forward </code>or <code>fixed-response</code>, and it must be the last action to be performed.'
                  type: object
                  properties:
                    fixedResponse:
                      allOf:
                        - $ref: '#/components/schemas/FixedResponseAction'
                        - description: ' Describes the rule action that returns a custom HTTP response. '
                    forward:
                      allOf:
                        - $ref: '#/components/schemas/ForwardAction'
                        - description: The forward action. Traffic that matches the rule is forwarded to the specified target groups.
                clientToken:
                  description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you retry a request that completed successfully using the same client token and parameters, the retry succeeds without performing any actions. If the parameters aren''t identical, the retry fails.'
                  type: string
                  pattern: '[!-~]+'
                  minLength: 1
                  maxLength: 64
                match:
                  description: Describes a rule match.
                  type: object
                  properties:
                    httpMatch:
                      allOf:
                        - $ref: '#/components/schemas/HttpMatch'
                        - description: The HTTP criteria that a rule must match.
                name:
                  description: 'The name of the rule. The name must be unique within the listener. The valid characters are a-z, 0-9, and hyphens (-). You can''t use a hyphen as the first or last character, or immediately after another hyphen.'
                  type: string
                  pattern: '^(?!rule-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$'
                  minLength: 3
                  maxLength: 63
                priority:
                  description: The priority assigned to the rule. Each rule for a specific listener must have a unique priority. The lower the priority number the higher the priority.
                  type: integer
                  minimum: 1
                  maximum: 100
                tags:
                  description: The tags for the rule.
                  type: object
                  minProperties: 0
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    get:
      operationId: ListRules
      description: Lists the rules for the listener.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRulesResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: listenerIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the listener.
          schema:
            type: string
            pattern: '^((listener-[0-9a-z]{17})|(^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$))$'
            minLength: 20
            maxLength: 2048
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: A pagination token for the next page of results.
          schema:
            type: string
            minLength: 1
            maxLength: 2048
        - name: serviceIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the service.
          schema:
            type: string
            pattern: '^((svc-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
  /accesslogsubscriptions:
    post:
      operationId: CreateAccessLogSubscription
      description: 'Enables access logs to be sent to Amazon CloudWatch, Amazon S3, and Amazon Kinesis Data Firehose. The service network owner can use the access logs to audit the services in the network. The service network owner will only see access logs from clients and services that are associated with their service network. Access log entries represent traffic originated from VPCs associated with that network. For more information, see <a href="https://docs.aws.amazon.com/vpc-lattice/latest/ug/monitoring-access-logs.html">Access logs</a> in the <i>Amazon VPC Lattice User Guide</i>.'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccessLogSubscriptionResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - destinationArn
                - resourceIdentifier
              properties:
                clientToken:
                  description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you retry a request that completed successfully using the same client token and parameters, the retry succeeds without performing any actions. If the parameters aren''t identical, the retry fails.'
                  type: string
                  pattern: '[!-~]+'
                  minLength: 1
                  maxLength: 64
                destinationArn:
                  description: 'The Amazon Resource Name (ARN) of the destination. The supported destination types are CloudWatch Log groups, Kinesis Data Firehose delivery streams, and Amazon S3 buckets.'
                  type: string
                  pattern: '^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:([^/].*)?$'
                  minLength: 20
                  maxLength: 2048
                resourceIdentifier:
                  description: The ID or Amazon Resource Name (ARN) of the service network or service.
                  type: string
                  pattern: '^((((sn)|(svc))-[0-9a-z]{17})|(arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:((servicenetwork/sn)|(service/svc))-[0-9a-z]{17}))$'
                  minLength: 17
                  maxLength: 200
                tags:
                  description: The tags for the access log subscription.
                  type: object
                  minProperties: 0
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/services/{serviceIdentifier}/listeners':
    post:
      operationId: CreateListener
      description: 'Creates a listener for a service. Before you start using your Amazon VPC Lattice service, you must add one or more listeners. A listener is a process that checks for connection requests to your services. For more information, see <a href="https://docs.aws.amazon.com/vpc-lattice/latest/ug/listeners.html">Listeners</a> in the <i>Amazon VPC Lattice User Guide</i>.'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateListenerResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: serviceIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the service.
          schema:
            type: string
            pattern: '^((svc-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - defaultAction
                - name
                - protocol
              properties:
                clientToken:
                  description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you retry a request that completed successfully using the same client token and parameters, the retry succeeds without performing any actions. If the parameters aren''t identical, the retry fails.'
                  type: string
                  pattern: '[!-~]+'
                  minLength: 1
                  maxLength: 64
                defaultAction:
                  description: 'Describes the action for a rule. Each rule must include exactly one of the following types of actions: <code>forward </code>or <code>fixed-response</code>, and it must be the last action to be performed.'
                  type: object
                  properties:
                    fixedResponse:
                      allOf:
                        - $ref: '#/components/schemas/FixedResponseAction'
                        - description: ' Describes the rule action that returns a custom HTTP response. '
                    forward:
                      allOf:
                        - $ref: '#/components/schemas/ForwardAction'
                        - description: The forward action. Traffic that matches the rule is forwarded to the specified target groups.
                name:
                  description: 'The name of the listener. A listener name must be unique within a service. The valid characters are a-z, 0-9, and hyphens (-). You can''t use a hyphen as the first or last character, or immediately after another hyphen.'
                  type: string
                  pattern: '^(?!listener-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$'
                  minLength: 3
                  maxLength: 63
                port:
                  description: 'The listener port. You can specify a value from <code>1</code> to <code>65535</code>. For HTTP, the default is <code>80</code>. For HTTPS, the default is <code>443</code>.'
                  type: integer
                  minimum: 1
                  maximum: 65535
                protocol:
                  description: The listener protocol HTTP or HTTPS.
                  type: string
                  enum:
                    - HTTP
                    - HTTPS
                tags:
                  description: The tags for the listener.
                  type: object
                  minProperties: 0
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListListeners
      description: Lists the listeners for the specified service.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListListenersResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: A pagination token for the next page of results.
          schema:
            type: string
            minLength: 1
            maxLength: 2048
        - name: serviceIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the service.
          schema:
            type: string
            pattern: '^((svc-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
  /services:
    post:
      operationId: CreateService
      description: '<p>Creates a service. A service is any software application that can run on instances containers, or serverless functions within an account or virtual private cloud (VPC).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc-lattice/latest/ug/services.html">Services</a> in the <i>Amazon VPC Lattice User Guide</i>.</p>'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                authType:
                  description: '<p>The type of IAM policy.</p> <ul> <li> <p> <code>NONE</code>: The resource does not use an IAM policy. This is the default.</p> </li> <li> <p> <code>AWS_IAM</code>: The resource uses an IAM policy. When this type is used, auth is enabled and an auth policy is required.</p> </li> </ul>'
                  type: string
                  enum:
                    - NONE
                    - AWS_IAM
                certificateArn:
                  description: The Amazon Resource Name (ARN) of the certificate.
                  type: string
                  pattern: '^(arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:certificate/[0-9a-z-]+)?$'
                  minLength: 0
                  maxLength: 2048
                clientToken:
                  description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you retry a request that completed successfully using the same client token and parameters, the retry succeeds without performing any actions. If the parameters aren''t identical, the retry fails.'
                  type: string
                  pattern: '[!-~]+'
                  minLength: 1
                  maxLength: 64
                customDomainName:
                  description: The custom domain name of the service.
                  type: string
                  minLength: 3
                  maxLength: 255
                name:
                  description: 'The name of the service. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can''t use a hyphen as the first or last character, or immediately after another hyphen.'
                  type: string
                  pattern: '^(?!svc-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$'
                  minLength: 3
                  maxLength: 40
                tags:
                  description: The tags for the service.
                  type: object
                  minProperties: 0
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListServices
      description: Lists the services owned by the caller account or shared with the caller account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServicesResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: A pagination token for the next page of results.
          schema:
            type: string
            minLength: 1
            maxLength: 2048
  /servicenetworks:
    post:
      operationId: CreateServiceNetwork
      description: '<p>Creates a service network. A service network is a logical boundary for a collection of services. You can associate services and VPCs with a service network.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc-lattice/latest/ug/service-networks.html">Service networks</a> in the <i>Amazon VPC Lattice User Guide</i>.</p>'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceNetworkResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                authType:
                  description: '<p>The type of IAM policy.</p> <ul> <li> <p> <code>NONE</code>: The resource does not use an IAM policy. This is the default.</p> </li> <li> <p> <code>AWS_IAM</code>: The resource uses an IAM policy. When this type is used, auth is enabled and an auth policy is required.</p> </li> </ul>'
                  type: string
                  enum:
                    - NONE
                    - AWS_IAM
                clientToken:
                  description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you retry a request that completed successfully using the same client token and parameters, the retry succeeds without performing any actions. If the parameters aren''t identical, the retry fails.'
                  type: string
                  pattern: '[!-~]+'
                  minLength: 1
                  maxLength: 64
                name:
                  description: 'The name of the service network. The name must be unique to the account. The valid characters are a-z, 0-9, and hyphens (-). You can''t use a hyphen as the first or last character, or immediately after another hyphen.'
                  type: string
                  pattern: '^(?!servicenetwork-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$'
                  minLength: 3
                  maxLength: 63
                tags:
                  description: The tags for the service network.
                  type: object
                  minProperties: 0
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListServiceNetworks
      description: Lists the service networks owned by the caller account or shared with the caller account. Also includes the account ID in the ARN to show which account owns the service network.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceNetworksResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: A pagination token for the next page of results.
          schema:
            type: string
            minLength: 1
            maxLength: 2048
  /servicenetworkserviceassociations:
    post:
      operationId: CreateServiceNetworkServiceAssociation
      description: '<p>Associates a service with a service network.</p> <p>You can''t use this operation if the service and service network are already associated or if there is a disassociation or deletion in progress. If the association fails, you can retry the operation by deleting the association and recreating it.</p> <p>You cannot associate a service and service network that are shared with a caller. The caller must own either the service or the service network.</p> <p>As a result of this operation, the association is created in the service network account and the association owner account.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceNetworkServiceAssociationResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - serviceIdentifier
                - serviceNetworkIdentifier
              properties:
                clientToken:
                  description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you retry a request that completed successfully using the same client token and parameters, the retry succeeds without performing any actions. If the parameters aren''t identical, the retry fails.'
                  type: string
                  pattern: '[!-~]+'
                  minLength: 1
                  maxLength: 64
                serviceIdentifier:
                  description: The ID or Amazon Resource Name (ARN) of the service.
                  type: string
                  pattern: '^((svc-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}))$'
                  minLength: 17
                  maxLength: 2048
                serviceNetworkIdentifier:
                  description: The ID or Amazon Resource Name (ARN) of the service network. You must use the ARN if the resources specified in the operation are in different accounts.
                  type: string
                  pattern: '^((sn-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetwork/sn-[0-9a-z]{17}))$'
                  minLength: 3
                  maxLength: 2048
                tags:
                  description: The tags for the association.
                  type: object
                  minProperties: 0
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListServiceNetworkServiceAssociations
      description: '<p>Lists the associations between the service network and the service. You can filter the list either by service or service network. You must provide either the service network identifier or the service identifier.</p> <p>Every association in Amazon VPC Lattice is given a unique Amazon Resource Name (ARN), such as when a service network is associated with a VPC or when a service is associated with a service network. If the association is for a resource that is shared with another account, the association will include the local account ID as the prefix in the ARN for each account the resource is shared with.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceNetworkServiceAssociationsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: A pagination token for the next page of results.
          schema:
            type: string
            minLength: 1
            maxLength: 2048
        - name: serviceIdentifier
          in: query
          required: false
          description: The ID or Amazon Resource Name (ARN) of the service.
          schema:
            type: string
            pattern: '^((svc-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
        - name: serviceNetworkIdentifier
          in: query
          required: false
          description: The ID or Amazon Resource Name (ARN) of the service network.
          schema:
            type: string
            pattern: '^((sn-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetwork/sn-[0-9a-z]{17}))$'
            minLength: 3
            maxLength: 2048
  /servicenetworkvpcassociations:
    post:
      operationId: CreateServiceNetworkVpcAssociation
      description: '<p>Associates a VPC with a service network. When you associate a VPC with the service network, it enables all the resources within that VPC to be clients and communicate with other services in the service network. For more information, see <a href="https://docs.aws.amazon.com/vpc-lattice/latest/ug/service-network-associations.html#service-network-vpc-associations">Manage VPC associations</a> in the <i>Amazon VPC Lattice User Guide</i>.</p> <p>You can''t use this operation if there is a disassociation in progress. If the association fails, retry by deleting the association and recreating it.</p> <p>As a result of this operation, the association gets created in the service network account and the VPC owner account.</p> <p>If you add a security group to the service network and VPC association, the association must continue to always have at least one security group. You can add or edit security groups at any time. However, to remove all security groups, you must first delete the association and recreate it without security groups.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceNetworkVpcAssociationResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - serviceNetworkIdentifier
                - vpcIdentifier
              properties:
                clientToken:
                  description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you retry a request that completed successfully using the same client token and parameters, the retry succeeds without performing any actions. If the parameters aren''t identical, the retry fails.'
                  type: string
                  pattern: '[!-~]+'
                  minLength: 1
                  maxLength: 64
                securityGroupIds:
                  description: 'The IDs of the security groups. Security groups aren''t added by default. You can add a security group to apply network level controls to control which resources in a VPC are allowed to access the service network and its services. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html">Control traffic to resources using security groups</a> in the <i>Amazon VPC User Guide</i>.'
                  type: array
                  items:
                    $ref: '#/components/schemas/SecurityGroupId'
                  minItems: 0
                  maxItems: 5
                serviceNetworkIdentifier:
                  description: The ID or Amazon Resource Name (ARN) of the service network. You must use the ARN when the resources specified in the operation are in different accounts.
                  type: string
                  pattern: '^((sn-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetwork/sn-[0-9a-z]{17}))$'
                  minLength: 3
                  maxLength: 2048
                tags:
                  description: The tags for the association.
                  type: object
                  minProperties: 0
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                vpcIdentifier:
                  description: The ID of the VPC.
                  type: string
                  pattern: '^vpc-(([0-9a-z]{8})|([0-9a-z]{17}))$'
                  minLength: 5
                  maxLength: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListServiceNetworkVpcAssociations
      description: Lists the service network and VPC associations. You can filter the list either by VPC or service network. You must provide either the service network identifier or the VPC identifier.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceNetworkVpcAssociationsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: A pagination token for the next page of results.
          schema:
            type: string
            minLength: 1
            maxLength: 2048
        - name: serviceNetworkIdentifier
          in: query
          required: false
          description: The ID or Amazon Resource Name (ARN) of the service network.
          schema:
            type: string
            pattern: '^((sn-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetwork/sn-[0-9a-z]{17}))$'
            minLength: 3
            maxLength: 2048
        - name: vpcIdentifier
          in: query
          required: false
          description: The ID or Amazon Resource Name (ARN) of the VPC.
          schema:
            type: string
            pattern: '^vpc-(([0-9a-z]{8})|([0-9a-z]{17}))$'
            minLength: 5
            maxLength: 50
  /targetgroups:
    post:
      operationId: CreateTargetGroup
      description: '<p>Creates a target group. A target group is a collection of targets, or compute resources, that run your application or service. A target group can only be used by a single service.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc-lattice/latest/ug/target-groups.html">Target groups</a> in the <i>Amazon VPC Lattice User Guide</i>.</p>'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTargetGroupResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - type
              properties:
                clientToken:
                  description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you retry a request that completed successfully using the same client token and parameters, the retry succeeds without performing any actions. If the parameters aren''t identical, the retry fails.'
                  type: string
                  pattern: '[!-~]+'
                  minLength: 1
                  maxLength: 64
                config:
                  description: Describes the configuration of a target group. Lambda functions don't support target group configuration.
                  type: object
                  properties:
                    healthCheck:
                      allOf:
                        - $ref: '#/components/schemas/HealthCheckConfig'
                        - description: The health check configuration.
                    ipAddressType:
                      allOf:
                        - $ref: '#/components/schemas/IpAddressType'
                        - description: 'The type of IP address used for the target group. The possible values are <code>ipv4</code> and <code>ipv6</code>. This is an optional parameter. If not specified, the IP address type defaults to <code>ipv4</code>.'
                    port:
                      allOf:
                        - $ref: '#/components/schemas/Port'
                        - description: 'The port on which the targets are listening. For HTTP, the default is <code>80</code>. For HTTPS, the default is <code>443</code> '
                    protocol:
                      allOf:
                        - $ref: '#/components/schemas/TargetGroupProtocol'
                        - description: The protocol to use for routing traffic to the targets. Default is the protocol of a target group.
                    protocolVersion:
                      allOf:
                        - $ref: '#/components/schemas/TargetGroupProtocolVersion'
                        - description: The protocol version. Default value is <code>HTTP1</code>.
                    vpcIdentifier:
                      allOf:
                        - $ref: '#/components/schemas/VpcId'
                        - description: The ID of the VPC.
                name:
                  description: 'The name of the target group. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can''t use a hyphen as the first or last character, or immediately after another hyphen.'
                  type: string
                  pattern: '^(?!tg-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$'
                  minLength: 3
                  maxLength: 128
                tags:
                  description: The tags for the target group.
                  type: object
                  minProperties: 0
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                type:
                  description: The type of target group.
                  type: string
                  enum:
                    - IP
                    - LAMBDA
                    - INSTANCE
                    - ALB
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListTargetGroups
      description: Lists your target groups. You can narrow your search by using the filters below in your request.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTargetGroupsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: A pagination token for the next page of results.
          schema:
            type: string
            minLength: 1
            maxLength: 2048
        - name: targetGroupType
          in: query
          required: false
          description: The target group type.
          schema:
            type: string
            enum:
              - IP
              - LAMBDA
              - INSTANCE
              - ALB
        - name: vpcIdentifier
          in: query
          required: false
          description: The ID or Amazon Resource Name (ARN) of the service.
          schema:
            type: string
            pattern: '^vpc-(([0-9a-z]{8})|([0-9a-z]{17}))$'
            minLength: 5
            maxLength: 50
  '/accesslogsubscriptions/{accessLogSubscriptionIdentifier}':
    delete:
      operationId: DeleteAccessLogSubscription
      description: Deletes the specified access log subscription.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccessLogSubscriptionResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: accessLogSubscriptionIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the access log subscription.
          schema:
            type: string
            pattern: '^((als-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:accesslogsubscription/als-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetAccessLogSubscription
      description: Retrieves information about the specified access log subscription.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccessLogSubscriptionResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: accessLogSubscriptionIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the access log subscription.
          schema:
            type: string
            pattern: '^((als-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:accesslogsubscription/als-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
    patch:
      operationId: UpdateAccessLogSubscription
      description: Updates the specified access log subscription.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccessLogSubscriptionResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: accessLogSubscriptionIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the access log subscription.
          schema:
            type: string
            pattern: '^((als-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:accesslogsubscription/als-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - destinationArn
              properties:
                destinationArn:
                  description: The Amazon Resource Name (ARN) of the access log destination.
                  type: string
                  pattern: '^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:([^/].*)?$'
                  minLength: 20
                  maxLength: 2048
  '/authpolicy/{resourceIdentifier}':
    delete:
      operationId: DeleteAuthPolicy
      description: 'Deletes the specified auth policy. If an auth is set to <code>AWS_IAM</code> and the auth policy is deleted, all requests will be denied by default. If you are trying to remove the auth policy completely, you must set the auth_type to <code>NONE</code>. If auth is enabled on the resource, but no auth policy is set, all requests will be denied.'
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAuthPolicyResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: resourceIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
            pattern: '^((((sn)|(svc))-[0-9a-z]{17})|(arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:((servicenetwork/sn)|(service/svc))-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetAuthPolicy
      description: Retrieves information about the auth policy for the specified service or service network.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAuthPolicyResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: resourceIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the service network or service.
          schema:
            type: string
            pattern: '^((((sn)|(svc))-[0-9a-z]{17})|(arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:((servicenetwork/sn)|(service/svc))-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 200
    put:
      operationId: PutAuthPolicy
      description: Creates or updates the auth policy. The policy string in JSON must not contain newlines or blank lines.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAuthPolicyResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: resourceIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.
          schema:
            type: string
            pattern: '^((((sn)|(svc))-[0-9a-z]{17})|(arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:((servicenetwork/sn)|(service/svc))-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 200
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - policy
              properties:
                policy:
                  description: The auth policy. The policy string in JSON must not contain newlines or blank lines.
                  type: string
                  pattern: ^.*\S.*$
                  minLength: 0
                  maxLength: 10000
  '/services/{serviceIdentifier}/listeners/{listenerIdentifier}':
    delete:
      operationId: DeleteListener
      description: Deletes the specified listener.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteListenerResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: listenerIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the listener.
          schema:
            type: string
            pattern: '^((listener-[0-9a-z]{17})|(^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$))$'
            minLength: 20
            maxLength: 2048
        - name: serviceIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the service.
          schema:
            type: string
            pattern: '^((svc-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetListener
      description: Retrieves information about the specified listener for the specified service.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetListenerResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: listenerIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the listener.
          schema:
            type: string
            pattern: '^((listener-[0-9a-z]{17})|(^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$))$'
            minLength: 20
            maxLength: 2048
        - name: serviceIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the service.
          schema:
            type: string
            pattern: '^((svc-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
    patch:
      operationId: UpdateListener
      description: Updates the specified listener for the specified service.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateListenerResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: listenerIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the listener.
          schema:
            type: string
            pattern: '^((listener-[0-9a-z]{17})|(^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$))$'
            minLength: 20
            maxLength: 2048
        - name: serviceIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the service.
          schema:
            type: string
            pattern: '^((svc-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - defaultAction
              properties:
                defaultAction:
                  description: 'Describes the action for a rule. Each rule must include exactly one of the following types of actions: <code>forward </code>or <code>fixed-response</code>, and it must be the last action to be performed.'
                  type: object
                  properties:
                    fixedResponse:
                      allOf:
                        - $ref: '#/components/schemas/FixedResponseAction'
                        - description: ' Describes the rule action that returns a custom HTTP response. '
                    forward:
                      allOf:
                        - $ref: '#/components/schemas/ForwardAction'
                        - description: The forward action. Traffic that matches the rule is forwarded to the specified target groups.
  '/resourcepolicy/{resourceArn}':
    delete:
      operationId: DeleteResourcePolicy
      description: Deletes the specified resource policy.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResourcePolicyResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
            pattern: '^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:((servicenetwork/sn)|(service/svc))-[0-9a-z]{17}$'
            minLength: 20
            maxLength: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetResourcePolicy
      description: Retrieves information about the resource policy. The resource policy is an IAM policy created on behalf of the resource owner when they share a resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourcePolicyResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the service network or service.
          schema:
            type: string
            pattern: '^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:((servicenetwork/sn)|(service/svc))-[0-9a-z]{17}$'
            minLength: 20
            maxLength: 200
    put:
      operationId: PutResourcePolicy
      description: Attaches a resource-based permission policy to a service or service network. The policy must contain the same actions and condition statements as the Amazon Web Services Resource Access Manager permission for sharing services and service networks.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutResourcePolicyResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.
          schema:
            type: string
            pattern: '^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:((servicenetwork/sn)|(service/svc))-[0-9a-z]{17}$'
            minLength: 20
            maxLength: 200
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - policy
              properties:
                policy:
                  description: An IAM policy. The policy string in JSON must not contain newlines or blank lines.
                  type: string
                  pattern: ^.*\S.*$
                  minLength: 1
                  maxLength: 10000
  '/services/{serviceIdentifier}/listeners/{listenerIdentifier}/rules/{ruleIdentifier}':
    delete:
      operationId: DeleteRule
      description: '<p>Deletes a listener rule. Each listener has a default rule for checking connection requests, but you can define additional rules. Each rule consists of a priority, one or more actions, and one or more conditions. You can delete additional listener rules, but you cannot delete the default rule.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc-lattice/latest/ug/listeners.html#listener-rules">Listener rules</a> in the <i>Amazon VPC Lattice User Guide</i>.</p>'
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRuleResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: listenerIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the listener.
          schema:
            type: string
            pattern: '^((listener-[0-9a-z]{17})|(^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$))$'
            minLength: 20
            maxLength: 2048
        - name: ruleIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the rule.
          schema:
            type: string
            pattern: '^((rule-[0-9a-z]{17})|(^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}/rule/rule-[0-9a-z]{17}$))$'
            minLength: 20
            maxLength: 2048
        - name: serviceIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the service.
          schema:
            type: string
            pattern: '^((svc-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetRule
      description: 'Retrieves information about listener rules. You can also retrieve information about the default listener rule. For more information, see <a href="https://docs.aws.amazon.com/vpc-lattice/latest/ug/listeners.html#listener-rules">Listener rules</a> in the <i>Amazon VPC Lattice User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRuleResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: listenerIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the listener.
          schema:
            type: string
            pattern: '^((listener-[0-9a-z]{17})|(^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$))$'
            minLength: 20
            maxLength: 2048
        - name: ruleIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the listener rule.
          schema:
            type: string
            pattern: '^((rule-[0-9a-z]{17})|(^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}/rule/rule-[0-9a-z]{17}$))$'
            minLength: 20
            maxLength: 2048
        - name: serviceIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the service.
          schema:
            type: string
            pattern: '^((svc-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
    patch:
      operationId: UpdateRule
      description: 'Updates a rule for the listener. You can''t modify a default listener rule. To modify a default listener rule, use <code>UpdateListener</code>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRuleResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: listenerIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the listener.
          schema:
            type: string
            pattern: '^((listener-[0-9a-z]{17})|(^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$))$'
            minLength: 20
            maxLength: 2048
        - name: ruleIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the rule.
          schema:
            type: string
            pattern: '^((rule-[0-9a-z]{17})|(^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}/rule/rule-[0-9a-z]{17}$))$'
            minLength: 20
            maxLength: 2048
        - name: serviceIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the service.
          schema:
            type: string
            pattern: '^((svc-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  description: 'Describes the action for a rule. Each rule must include exactly one of the following types of actions: <code>forward </code>or <code>fixed-response</code>, and it must be the last action to be performed.'
                  type: object
                  properties:
                    fixedResponse:
                      allOf:
                        - $ref: '#/components/schemas/FixedResponseAction'
                        - description: ' Describes the rule action that returns a custom HTTP response. '
                    forward:
                      allOf:
                        - $ref: '#/components/schemas/ForwardAction'
                        - description: The forward action. Traffic that matches the rule is forwarded to the specified target groups.
                match:
                  description: Describes a rule match.
                  type: object
                  properties:
                    httpMatch:
                      allOf:
                        - $ref: '#/components/schemas/HttpMatch'
                        - description: The HTTP criteria that a rule must match.
                priority:
                  description: The rule priority. A listener can't have multiple rules with the same priority.
                  type: integer
                  minimum: 1
                  maximum: 100
  '/services/{serviceIdentifier}':
    delete:
      operationId: DeleteService
      description: 'Deletes a service. A service can''t be deleted if it''s associated with a service network. If you delete a service, all resources related to the service, such as the resource policy, auth policy, listeners, listener rules, and access log subscriptions, are also deleted. For more information, see <a href="https://docs.aws.amazon.com/vpc-lattice/latest/ug/services.html#delete-service">Delete a service</a> in the <i>Amazon VPC Lattice User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServiceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: serviceIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the service.
          schema:
            type: string
            pattern: '^((svc-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetService
      description: Retrieves information about the specified service.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: serviceIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the service.
          schema:
            type: string
            pattern: '^((svc-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
    patch:
      operationId: UpdateService
      description: Updates the specified service.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: serviceIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the service.
          schema:
            type: string
            pattern: '^((svc-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                authType:
                  description: '<p>The type of IAM policy.</p> <ul> <li> <p> <code>NONE</code>: The resource does not use an IAM policy. This is the default.</p> </li> <li> <p> <code>AWS_IAM</code>: The resource uses an IAM policy. When this type is used, auth is enabled and an auth policy is required.</p> </li> </ul>'
                  type: string
                  enum:
                    - NONE
                    - AWS_IAM
                certificateArn:
                  description: 'The Amazon Resource Name (ARN) of the certificate. '
                  type: string
                  pattern: '^(arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:certificate/[0-9a-z-]+)?$'
                  minLength: 0
                  maxLength: 2048
  '/servicenetworks/{serviceNetworkIdentifier}':
    delete:
      operationId: DeleteServiceNetwork
      description: 'Deletes a service network. You can only delete the service network if there is no service or VPC associated with it. If you delete a service network, all resources related to the service network, such as the resource policy, auth policy, and access log subscriptions, are also deleted. For more information, see <a href="https://docs.aws.amazon.com/vpc-lattice/latest/ug/service-networks.html#delete-service-network">Delete a service network</a> in the <i>Amazon VPC Lattice User Guide</i>.'
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServiceNetworkResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: serviceNetworkIdentifier
          in: path
          required: true
          description: The Amazon Resource Name (ARN) or ID of the service network.
          schema:
            type: string
            pattern: '^((sn-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetwork/sn-[0-9a-z]{17}))$'
            minLength: 3
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetServiceNetwork
      description: Retrieves information about the specified service network.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceNetworkResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: serviceNetworkIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the service network.
          schema:
            type: string
            pattern: '^((sn-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetwork/sn-[0-9a-z]{17}))$'
            minLength: 3
            maxLength: 2048
    patch:
      operationId: UpdateServiceNetwork
      description: Updates the specified service network.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceNetworkResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: serviceNetworkIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the service network.
          schema:
            type: string
            pattern: '^((sn-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetwork/sn-[0-9a-z]{17}))$'
            minLength: 3
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - authType
              properties:
                authType:
                  description: '<p>The type of IAM policy.</p> <ul> <li> <p> <code>NONE</code>: The resource does not use an IAM policy. This is the default.</p> </li> <li> <p> <code>AWS_IAM</code>: The resource uses an IAM policy. When this type is used, auth is enabled and an auth policy is required.</p> </li> </ul>'
                  type: string
                  enum:
                    - NONE
                    - AWS_IAM
  '/servicenetworkserviceassociations/{serviceNetworkServiceAssociationIdentifier}':
    delete:
      operationId: DeleteServiceNetworkServiceAssociation
      description: Deletes the association between a specified service and the specific service network. This request will fail if an association is still in progress.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServiceNetworkServiceAssociationResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: serviceNetworkServiceAssociationIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the association.
          schema:
            type: string
            pattern: '^((snsa-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetworkserviceassociation/snsa-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetServiceNetworkServiceAssociation
      description: Retrieves information about the specified association between a service network and a service.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceNetworkServiceAssociationResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: serviceNetworkServiceAssociationIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the association.
          schema:
            type: string
            pattern: '^((snsa-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetworkserviceassociation/snsa-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
  '/servicenetworkvpcassociations/{serviceNetworkVpcAssociationIdentifier}':
    delete:
      operationId: DeleteServiceNetworkVpcAssociation
      description: Disassociates the VPC from the service network. You can't disassociate the VPC if there is a create or update association in progress.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServiceNetworkVpcAssociationResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: serviceNetworkVpcAssociationIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the association.
          schema:
            type: string
            pattern: '^((snva-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetworkvpcassociation/snva-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetServiceNetworkVpcAssociation
      description: Retrieves information about the association between a service network and a VPC.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceNetworkVpcAssociationResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: serviceNetworkVpcAssociationIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the association.
          schema:
            type: string
            pattern: '^((snva-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetworkvpcassociation/snva-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
    patch:
      operationId: UpdateServiceNetworkVpcAssociation
      description: 'Updates the service network and VPC association. If you add a security group to the service network and VPC association, the association must continue to always have at least one security group. You can add or edit security groups at any time. However, to remove all security groups, you must first delete the association and recreate it without security groups.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceNetworkVpcAssociationResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: serviceNetworkVpcAssociationIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the association.
          schema:
            type: string
            pattern: '^((snva-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetworkvpcassociation/snva-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - securityGroupIds
              properties:
                securityGroupIds:
                  description: 'The IDs of the security groups. '
                  type: array
                  items:
                    $ref: '#/components/schemas/SecurityGroupId'
                  minItems: 1
                  maxItems: 5
  '/targetgroups/{targetGroupIdentifier}':
    delete:
      operationId: DeleteTargetGroup
      description: Deletes a target group. You can't delete a target group if it is used in a listener rule or if the target group creation is in progress.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTargetGroupResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: targetGroupIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the target group.
          schema:
            type: string
            pattern: '^((tg-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:targetgroup/tg-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetTargetGroup
      description: Retrieves information about the specified target group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTargetGroupResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: targetGroupIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the target group.
          schema:
            type: string
            pattern: '^((tg-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:targetgroup/tg-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
    patch:
      operationId: UpdateTargetGroup
      description: Updates the specified target group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTargetGroupResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: targetGroupIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the target group.
          schema:
            type: string
            pattern: '^((tg-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:targetgroup/tg-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - healthCheck
              properties:
                healthCheck:
                  description: The health check configuration of a target group. Health check configurations aren't used for <code>LAMBDA</code> and <code>ALB</code> target groups.
                  type: object
                  properties:
                    enabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Indicates whether health checking is enabled.
                    healthCheckIntervalSeconds:
                      allOf:
                        - $ref: '#/components/schemas/HealthCheckIntervalSeconds'
                        - description: 'The approximate amount of time, in seconds, between health checks of an individual target. The range is 5–300 seconds. The default is 30 seconds.'
                    healthCheckTimeoutSeconds:
                      allOf:
                        - $ref: '#/components/schemas/HealthCheckTimeoutSeconds'
                        - description: 'The amount of time, in seconds, to wait before reporting a target as unhealthy. The range is 1–120 seconds. The default is 5 seconds.'
                    healthyThresholdCount:
                      allOf:
                        - $ref: '#/components/schemas/HealthyThresholdCount'
                        - description: The number of consecutive successful health checks required before considering an unhealthy target healthy. The range is 2–10. The default is 5.
                    matcher:
                      allOf:
                        - $ref: '#/components/schemas/Matcher'
                        - description: The codes to use when checking for a successful response from a target. These are called <i>Success codes</i> in the console.
                    path:
                      allOf:
                        - $ref: '#/components/schemas/HealthCheckPath'
                        - description: 'The destination for health checks on the targets. If the protocol version is <code>HTTP/1.1</code> or <code>HTTP/2</code>, specify a valid URI (for example, <code>/path?query</code>). The default path is <code>/</code>. Health checks are not supported if the protocol version is <code>gRPC</code>, however, you can choose <code>HTTP/1.1</code> or <code>HTTP/2</code> and specify a valid URI.'
                    port:
                      allOf:
                        - $ref: '#/components/schemas/HealthCheckPort'
                        - description: The port used when performing health checks on targets. The default setting is the port that a target receives traffic on.
                    protocol:
                      allOf:
                        - $ref: '#/components/schemas/TargetGroupProtocol'
                        - description: The protocol used when performing health checks on targets. The possible protocols are <code>HTTP</code> and <code>HTTPS</code>. The default is <code>HTTP</code>.
                    protocolVersion:
                      allOf:
                        - $ref: '#/components/schemas/HealthCheckProtocolVersion'
                        - description: The protocol version used when performing health checks on targets. The possible protocol versions are <code>HTTP1</code> and <code>HTTP2</code>.
                    unhealthyThresholdCount:
                      allOf:
                        - $ref: '#/components/schemas/UnhealthyThresholdCount'
                        - description: The number of consecutive failed health checks required before considering a target unhealthy. The range is 2–10. The default is 2.
  '/targetgroups/{targetGroupIdentifier}/deregistertargets':
    post:
      operationId: DeregisterTargets
      description: Deregisters the specified targets from the specified target group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterTargetsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: targetGroupIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the target group.
          schema:
            type: string
            pattern: '^((tg-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:targetgroup/tg-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - targets
              properties:
                targets:
                  description: The targets to deregister.
                  type: array
                  items:
                    $ref: '#/components/schemas/Target'
                  minItems: 1
                  maxItems: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /accesslogsubscriptions#resourceIdentifier:
    get:
      operationId: ListAccessLogSubscriptions
      description: Lists all access log subscriptions for the specified service network or service.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessLogSubscriptionsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: A pagination token for the next page of results.
          schema:
            type: string
            minLength: 1
            maxLength: 2048
        - name: resourceIdentifier
          in: query
          required: true
          description: The ID or Amazon Resource Name (ARN) of the service network or service.
          schema:
            type: string
            pattern: '^((((sn)|(svc))-[0-9a-z]{17})|(arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:((servicenetwork/sn)|(service/svc))-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: Lists the tags for the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
            pattern: '^arn:[a-z0-9][-.a-z0-9]{0,62}:vpc-lattice:([a-z0-9][-.a-z0-9]{0,62})?:\d{12}?:[^/].{0,1023}$'
            minLength: 0
            maxLength: 1224
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: Adds the specified tags to the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
            pattern: '^arn:[a-z0-9][-.a-z0-9]{0,62}:vpc-lattice:([a-z0-9][-.a-z0-9]{0,62})?:\d{12}?:[^/].{0,1023}$'
            minLength: 0
            maxLength: 1224
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: The tags for the resource.
                  type: object
                  minProperties: 0
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
  '/targetgroups/{targetGroupIdentifier}/listtargets':
    post:
      operationId: ListTargets
      description: 'Lists the targets for the target group. By default, all targets are included. You can use this API to check the health status of targets. You can also ﬁlter the results by target. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTargetsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: A pagination token for the next page of results.
          schema:
            type: string
            minLength: 1
            maxLength: 2048
        - name: targetGroupIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the target group.
          schema:
            type: string
            pattern: '^((tg-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:targetgroup/tg-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targets:
                  description: The targets to list.
                  type: array
                  items:
                    $ref: '#/components/schemas/Target'
                  minItems: 0
                  maxItems: 20
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/targetgroups/{targetGroupIdentifier}/registertargets':
    post:
      operationId: RegisterTargets
      description: 'Registers the targets with the target group. If it''s a Lambda target, you can only have one target in a target group.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterTargetsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: targetGroupIdentifier
          in: path
          required: true
          description: The ID or Amazon Resource Name (ARN) of the target group.
          schema:
            type: string
            pattern: '^((tg-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:targetgroup/tg-[0-9a-z]{17}))$'
            minLength: 17
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - targets
              properties:
                targets:
                  description: The targets.
                  type: array
                  items:
                    $ref: '#/components/schemas/Target'
                  minItems: 1
                  maxItems: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: Removes the specified tags from the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
            pattern: '^arn:[a-z0-9][-.a-z0-9]{0,62}:vpc-lattice:([a-z0-9][-.a-z0-9]{0,62})?:\d{12}?:[^/].{0,1023}$'
            minLength: 0
            maxLength: 1224
        - name: tagKeys
          in: query
          required: true
          description: The tag keys of the tags to remove.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
            minItems: 0
            maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    BatchUpdateRuleResponse:
      type: object
      properties:
        successful:
          allOf:
            - $ref: '#/components/schemas/RuleUpdateSuccessList'
            - description: The rules that were successfully updated.
        unsuccessful:
          allOf:
            - $ref: '#/components/schemas/RuleUpdateFailureList'
            - description: The rules that the operation couldn't update.
    RuleUpdate:
      type: object
      required:
        - ruleIdentifier
      properties:
        action:
          allOf:
            - $ref: '#/components/schemas/RuleAction'
            - description: The rule action.
        match:
          allOf:
            - $ref: '#/components/schemas/RuleMatch'
            - description: The rule match.
        priority:
          allOf:
            - $ref: '#/components/schemas/RulePriority'
            - description: The rule priority. A listener can't have multiple rules with the same priority.
        ruleIdentifier:
          allOf:
            - $ref: '#/components/schemas/RuleIdentifier'
            - description: The ID or Amazon Resource Name (ARN) of the rule.
      description: Represents an object when updating a rule.
    ValidationException: {}
    AccessDeniedException: {}
    ThrottlingException: {}
    ResourceNotFoundException: {}
    ConflictException: {}
    InternalServerException: {}
    CreateAccessLogSubscriptionResponse:
      type: object
      required:
        - arn
        - destinationArn
        - id
        - resourceArn
        - resourceId
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/AccessLogSubscriptionArn'
            - description: The Amazon Resource Name (ARN) of the access log subscription.
        destinationArn:
          allOf:
            - $ref: '#/components/schemas/AccessLogDestinationArn'
            - description: The Amazon Resource Name (ARN) of the log destination.
        id:
          allOf:
            - $ref: '#/components/schemas/AccessLogSubscriptionId'
            - description: The ID of the access log subscription.
        resourceArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The Amazon Resource Name (ARN) of the service network or service.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/ResourceId'
            - description: The ID of the service network or service.
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    CreateListenerResponse:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ListenerArn'
            - description: The Amazon Resource Name (ARN) of the listener.
        defaultAction:
          allOf:
            - $ref: '#/components/schemas/RuleAction'
            - description: The action for the default rule.
        id:
          allOf:
            - $ref: '#/components/schemas/ListenerId'
            - description: The ID of the listener.
        name:
          allOf:
            - $ref: '#/components/schemas/ListenerName'
            - description: The name of the listener.
        port:
          allOf:
            - $ref: '#/components/schemas/Port'
            - description: The port number of the listener.
        protocol:
          allOf:
            - $ref: '#/components/schemas/ListenerProtocol'
            - description: The protocol of the listener.
        serviceArn:
          allOf:
            - $ref: '#/components/schemas/ServiceArn'
            - description: The Amazon Resource Name (ARN) of the service.
        serviceId:
          allOf:
            - $ref: '#/components/schemas/ServiceId'
            - description: The ID of the service.
    FixedResponseAction:
      type: object
      required:
        - statusCode
      properties:
        statusCode:
          allOf:
            - $ref: '#/components/schemas/HttpStatusCode'
            - description: The HTTP response code.
      description: 'Information about an action that returns a custom HTTP response. '
    ForwardAction:
      type: object
      required:
        - targetGroups
      properties:
        targetGroups:
          allOf:
            - $ref: '#/components/schemas/WeightedTargetGroupList'
            - description: '<p>The target groups. Traffic matching the rule is forwarded to the specified target groups. With forward actions, you can assign a weight that controls the prioritization and selection of each target group. This means that requests are distributed to individual target groups based on their weights. For example, if two target groups have the same weight, each target group receives half of the traffic.</p> <p>The default value is 1. This means that if only one target group is provided, there is no need to set the weight; 100% of traffic will go to that target group.</p>'
      description: 'Describes a forward action. You can use forward actions to route requests to one or more target groups. '
    ServiceQuotaExceededException: {}
    CreateRuleResponse:
      type: object
      properties:
        action:
          allOf:
            - $ref: '#/components/schemas/RuleAction'
            - description: 'The rule action. Each rule must include exactly one of the following types of actions: <code>forward </code>or <code>fixed-response</code>, and it must be the last action to be performed.'
        arn:
          allOf:
            - $ref: '#/components/schemas/RuleArn'
            - description: The Amazon Resource Name (ARN) of the rule.
        id:
          allOf:
            - $ref: '#/components/schemas/RuleId'
            - description: The ID of the rule.
        match:
          allOf:
            - $ref: '#/components/schemas/RuleMatch'
            - description: 'The rule match. The <code>RuleMatch</code> must be an <code>HttpMatch</code>. This means that the rule should be an exact match on HTTP constraints which are made up of the HTTP method, path, and header.'
        name:
          allOf:
            - $ref: '#/components/schemas/RuleName'
            - description: The name of the rule.
        priority:
          allOf:
            - $ref: '#/components/schemas/RulePriority'
            - description: The priority assigned to the rule. The lower the priority number the higher the priority.
    HttpMatch:
      type: object
      properties:
        headerMatches:
          allOf:
            - $ref: '#/components/schemas/HeaderMatchList'
            - description: The header matches. Matches incoming requests with rule based on request header value before applying rule action.
        method:
          allOf:
            - $ref: '#/components/schemas/HttpMethod'
            - description: The HTTP method type.
        pathMatch:
          allOf:
            - $ref: '#/components/schemas/PathMatch'
            - description: The path match.
      description: Describes criteria that can be applied to incoming requests.
    CreateServiceResponse:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ServiceArn'
            - description: The Amazon Resource Name (ARN) of the service.
        authType:
          allOf:
            - $ref: '#/components/schemas/AuthType'
            - description: The type of IAM policy.
        certificateArn:
          allOf:
            - $ref: '#/components/schemas/CertificateArn'
            - description: The Amazon Resource Name (ARN) of the certificate.
        customDomainName:
          allOf:
            - $ref: '#/components/schemas/ServiceCustomDomainName'
            - description: The custom domain name of the service.
        dnsEntry:
          allOf:
            - $ref: '#/components/schemas/DnsEntry'
            - description: The public DNS name of the service.
        id:
          allOf:
            - $ref: '#/components/schemas/ServiceId'
            - description: The ID of the service.
        name:
          allOf:
            - $ref: '#/components/schemas/ServiceName'
            - description: The name of the service.
        status:
          allOf:
            - $ref: '#/components/schemas/ServiceStatus'
            - description: 'The status. If the status is <code>CREATE_FAILED</code>, you will have to delete and recreate the service.'
    CreateServiceNetworkResponse:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkArn'
            - description: The Amazon Resource Name (ARN) of the service network.
        authType:
          allOf:
            - $ref: '#/components/schemas/AuthType'
            - description: The type of IAM policy.
        id:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkId'
            - description: The ID of the service network.
        name:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkName'
            - description: The name of the service network.
    CreateServiceNetworkServiceAssociationResponse:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkServiceAssociationArn'
            - description: The Amazon Resource Name (ARN) of the association.
        createdBy:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The account that created the association.
        customDomainName:
          allOf:
            - $ref: '#/components/schemas/ServiceCustomDomainName'
            - description: The custom domain name of the service.
        dnsEntry:
          allOf:
            - $ref: '#/components/schemas/DnsEntry'
            - description: The DNS name of the service.
        id:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkServiceAssociationIdentifier'
            - description: The ID of the association.
        status:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkServiceAssociationStatus'
            - description: The operation's status.
    CreateServiceNetworkVpcAssociationResponse:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkVpcAssociationArn'
            - description: The Amazon Resource Name (ARN) of the association.
        createdBy:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The account that created the association.
        id:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkVpcAssociationId'
            - description: The ID of the association.
        securityGroupIds:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupList'
            - description: The IDs of the security groups.
        status:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkVpcAssociationStatus'
            - description: The operation's status.
    SecurityGroupId:
      type: string
      pattern: '^sg-(([0-9a-z]{8})|([0-9a-z]{17}))$'
      minLength: 5
      maxLength: 200
    CreateTargetGroupResponse:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/TargetGroupArn'
            - description: The Amazon Resource Name (ARN) of the target group.
        config:
          allOf:
            - $ref: '#/components/schemas/TargetGroupConfig'
            - description: 'The target group configuration. If <code>type</code> is set to <code>LAMBDA</code>, this parameter doesn''t apply.'
        id:
          allOf:
            - $ref: '#/components/schemas/TargetGroupId'
            - description: The ID of the target group.
        name:
          allOf:
            - $ref: '#/components/schemas/TargetGroupName'
            - description: The name of the target group.
        status:
          allOf:
            - $ref: '#/components/schemas/TargetGroupStatus'
            - description: 'The operation''s status. You can retry the operation if the status is <code>CREATE_FAILED</code>. However, if you retry it while the status is <code>CREATE_IN_PROGRESS</code>, there is no change in the status. '
        type:
          allOf:
            - $ref: '#/components/schemas/TargetGroupType'
            - description: The type of target group.
    HealthCheckConfig:
      type: object
      properties:
        enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether health checking is enabled.
        healthCheckIntervalSeconds:
          allOf:
            - $ref: '#/components/schemas/HealthCheckIntervalSeconds'
            - description: 'The approximate amount of time, in seconds, between health checks of an individual target. The range is 5–300 seconds. The default is 30 seconds.'
        healthCheckTimeoutSeconds:
          allOf:
            - $ref: '#/components/schemas/HealthCheckTimeoutSeconds'
            - description: 'The amount of time, in seconds, to wait before reporting a target as unhealthy. The range is 1–120 seconds. The default is 5 seconds.'
        healthyThresholdCount:
          allOf:
            - $ref: '#/components/schemas/HealthyThresholdCount'
            - description: The number of consecutive successful health checks required before considering an unhealthy target healthy. The range is 2–10. The default is 5.
        matcher:
          allOf:
            - $ref: '#/components/schemas/Matcher'
            - description: The codes to use when checking for a successful response from a target. These are called <i>Success codes</i> in the console.
        path:
          allOf:
            - $ref: '#/components/schemas/HealthCheckPath'
            - description: 'The destination for health checks on the targets. If the protocol version is <code>HTTP/1.1</code> or <code>HTTP/2</code>, specify a valid URI (for example, <code>/path?query</code>). The default path is <code>/</code>. Health checks are not supported if the protocol version is <code>gRPC</code>, however, you can choose <code>HTTP/1.1</code> or <code>HTTP/2</code> and specify a valid URI.'
        port:
          allOf:
            - $ref: '#/components/schemas/HealthCheckPort'
            - description: The port used when performing health checks on targets. The default setting is the port that a target receives traffic on.
        protocol:
          allOf:
            - $ref: '#/components/schemas/TargetGroupProtocol'
            - description: The protocol used when performing health checks on targets. The possible protocols are <code>HTTP</code> and <code>HTTPS</code>. The default is <code>HTTP</code>.
        protocolVersion:
          allOf:
            - $ref: '#/components/schemas/HealthCheckProtocolVersion'
            - description: The protocol version used when performing health checks on targets. The possible protocol versions are <code>HTTP1</code> and <code>HTTP2</code>.
        unhealthyThresholdCount:
          allOf:
            - $ref: '#/components/schemas/UnhealthyThresholdCount'
            - description: The number of consecutive failed health checks required before considering a target unhealthy. The range is 2–10. The default is 2.
      description: The health check configuration of a target group. Health check configurations aren't used for <code>LAMBDA</code> and <code>ALB</code> target groups.
    IpAddressType:
      type: string
      enum:
        - IPV4
        - IPV6
    Port:
      type: integer
      minimum: 1
      maximum: 65535
    TargetGroupProtocol:
      type: string
      enum:
        - HTTP
        - HTTPS
    TargetGroupProtocolVersion:
      type: string
      enum:
        - HTTP1
        - HTTP2
        - GRPC
    VpcId:
      type: string
      pattern: '^vpc-(([0-9a-z]{8})|([0-9a-z]{17}))$'
      minLength: 5
      maxLength: 50
    DeleteAccessLogSubscriptionResponse:
      type: object
      properties: {}
    DeleteAuthPolicyResponse:
      type: object
      properties: {}
    DeleteListenerResponse:
      type: object
      properties: {}
    DeleteResourcePolicyResponse:
      type: object
      properties: {}
    DeleteRuleResponse:
      type: object
      properties: {}
    DeleteServiceResponse:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ServiceArn'
            - description: The Amazon Resource Name (ARN) of the service.
        id:
          allOf:
            - $ref: '#/components/schemas/ServiceId'
            - description: The ID of the service.
        name:
          allOf:
            - $ref: '#/components/schemas/ServiceName'
            - description: The name of the service.
        status:
          allOf:
            - $ref: '#/components/schemas/ServiceStatus'
            - description: 'The status. You can retry the operation if the status is <code>DELETE_FAILED</code>. However, if you retry it while the status is <code>DELETE_IN_PROGRESS</code>, the status doesn''t change.'
    DeleteServiceNetworkResponse:
      type: object
      properties: {}
    DeleteServiceNetworkServiceAssociationResponse:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkServiceAssociationArn'
            - description: The Amazon Resource Name (ARN) of the association.
        id:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkServiceAssociationIdentifier'
            - description: The ID of the association.
        status:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkServiceAssociationStatus'
            - description: 'The operation''s status. You can retry the operation if the status is <code>DELETE_FAILED</code>. However, if you retry it when the status is <code>DELETE_IN_PROGRESS</code>, there is no change in the status.'
    DeleteServiceNetworkVpcAssociationResponse:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkVpcAssociationArn'
            - description: The Amazon Resource Name (ARN) of the association.
        id:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkVpcAssociationId'
            - description: The ID of the association.
        status:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkVpcAssociationStatus'
            - description: 'The status. You can retry the operation if the status is <code>DELETE_FAILED</code>. However, if you retry it when the status is <code>DELETE_IN_PROGRESS</code>, there is no change in the status.'
    DeleteTargetGroupResponse:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/TargetGroupArn'
            - description: The Amazon Resource Name (ARN) of the target group.
        id:
          allOf:
            - $ref: '#/components/schemas/TargetGroupId'
            - description: The ID of the target group.
        status:
          allOf:
            - $ref: '#/components/schemas/TargetGroupStatus'
            - description: 'The status. You can retry the operation if the status is <code>DELETE_FAILED</code>. However, if you retry it while the status is <code>DELETE_IN_PROGRESS</code>, the status doesn''t change.'
    DeregisterTargetsResponse:
      type: object
      properties:
        successful:
          allOf:
            - $ref: '#/components/schemas/TargetList'
            - description: The targets that were successfully deregistered.
        unsuccessful:
          allOf:
            - $ref: '#/components/schemas/TargetFailureList'
            - description: The targets that the operation couldn't deregister.
    Target:
      type: object
      required:
        - id
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/TargetIdString'
            - description: 'The ID of the target. If the target type of the target group is <code>INSTANCE</code>, this is an instance ID. If the target type is <code>IP</code> , this is an IP address. If the target type is <code>LAMBDA</code>, this is the ARN of the Lambda function. If the target type is <code>ALB</code>, this is the ARN of the Application Load Balancer.'
        port:
          allOf:
            - $ref: '#/components/schemas/Port'
            - description: 'The port on which the target is listening. For HTTP, the default is <code>80</code>. For HTTPS, the default is <code>443</code>.'
      description: Describes a target.
    GetAccessLogSubscriptionResponse:
      type: object
      required:
        - arn
        - createdAt
        - destinationArn
        - id
        - lastUpdatedAt
        - resourceArn
        - resourceId
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/AccessLogSubscriptionArn'
            - description: The Amazon Resource Name (ARN) of the access log subscription.
        createdAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the access log subscription was created, specified in ISO-8601 format.'
        destinationArn:
          allOf:
            - $ref: '#/components/schemas/AccessLogDestinationArn'
            - description: The Amazon Resource Name (ARN) of the access log destination.
        id:
          allOf:
            - $ref: '#/components/schemas/AccessLogSubscriptionId'
            - description: The ID of the access log subscription.
        lastUpdatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the access log subscription was last updated, specified in ISO-8601 format.'
        resourceArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The Amazon Resource Name (ARN) of the service network or service.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/ResourceId'
            - description: The ID of the service network or service.
    GetAuthPolicyResponse:
      type: object
      properties:
        createdAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the auth policy was created, specified in ISO-8601 format.'
        lastUpdatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the auth policy was last updated, specified in ISO-8601 format.'
        policy:
          allOf:
            - $ref: '#/components/schemas/AuthPolicyString'
            - description: The auth policy.
        state:
          allOf:
            - $ref: '#/components/schemas/AuthPolicyState'
            - description: 'The state of the auth policy. The auth policy is only active when the auth type is set to <code>AWS_IAM</code>. If you provide a policy, then authentication and authorization decisions are made based on this policy and the client''s IAM policy. If the auth type is <code>NONE</code>, then any auth policy you provide will remain inactive. For more information, see <a href="https://docs.aws.amazon.com/vpc-lattice/latest/ug/service-networks.html#create-service-network">Create a service network</a> in the <i>Amazon VPC Lattice User Guide</i>.'
    GetListenerResponse:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ListenerArn'
            - description: The Amazon Resource Name (ARN) of the listener.
        createdAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the listener was created, specified in ISO-8601 format.'
        defaultAction:
          allOf:
            - $ref: '#/components/schemas/RuleAction'
            - description: The actions for the default listener rule.
        id:
          allOf:
            - $ref: '#/components/schemas/ListenerId'
            - description: The ID of the listener.
        lastUpdatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the listener was last updated, specified in ISO-8601 format.'
        name:
          allOf:
            - $ref: '#/components/schemas/ListenerName'
            - description: The name of the listener.
        port:
          allOf:
            - $ref: '#/components/schemas/Port'
            - description: The listener port.
        protocol:
          allOf:
            - $ref: '#/components/schemas/ListenerProtocol'
            - description: The listener protocol.
        serviceArn:
          allOf:
            - $ref: '#/components/schemas/ServiceArn'
            - description: The Amazon Resource Name (ARN) of the service.
        serviceId:
          allOf:
            - $ref: '#/components/schemas/ServiceId'
            - description: The ID of the service.
    GetResourcePolicyResponse:
      type: object
      properties:
        policy:
          allOf:
            - $ref: '#/components/schemas/PolicyString'
            - description: An IAM policy.
    GetRuleResponse:
      type: object
      properties:
        action:
          allOf:
            - $ref: '#/components/schemas/RuleAction'
            - description: The action for the default rule.
        arn:
          allOf:
            - $ref: '#/components/schemas/RuleArn'
            - description: The Amazon Resource Name (ARN) of the listener.
        createdAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the listener rule was created, specified in ISO-8601 format.'
        id:
          allOf:
            - $ref: '#/components/schemas/RuleId'
            - description: The ID of the listener.
        isDefault:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether this is the default rule.
        lastUpdatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the listener rule was last updated, specified in ISO-8601 format.'
        match:
          allOf:
            - $ref: '#/components/schemas/RuleMatch'
            - description: The rule match.
        name:
          allOf:
            - $ref: '#/components/schemas/RuleName'
            - description: The name of the listener.
        priority:
          allOf:
            - $ref: '#/components/schemas/RulePriority'
            - description: The priority level for the specified rule.
    GetServiceResponse:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ServiceArn'
            - description: The Amazon Resource Name (ARN) of the service.
        authType:
          allOf:
            - $ref: '#/components/schemas/AuthType'
            - description: The type of IAM policy.
        certificateArn:
          allOf:
            - $ref: '#/components/schemas/CertificateArn'
            - description: The Amazon Resource Name (ARN) of the certificate.
        createdAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the service was created, specified in ISO-8601 format.'
        customDomainName:
          allOf:
            - $ref: '#/components/schemas/ServiceCustomDomainName'
            - description: The custom domain name of the service.
        dnsEntry:
          allOf:
            - $ref: '#/components/schemas/DnsEntry'
            - description: The DNS name of the service.
        failureCode:
          allOf:
            - $ref: '#/components/schemas/FailureCode'
            - description: The failure code.
        failureMessage:
          allOf:
            - $ref: '#/components/schemas/FailureMessage'
            - description: The failure message.
        id:
          allOf:
            - $ref: '#/components/schemas/ServiceId'
            - description: The ID of the service.
        lastUpdatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the service was last updated, specified in ISO-8601 format.'
        name:
          allOf:
            - $ref: '#/components/schemas/ServiceName'
            - description: The name of the service.
        status:
          allOf:
            - $ref: '#/components/schemas/ServiceStatus'
            - description: The status of the service.
    GetServiceNetworkResponse:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkArn'
            - description: The Amazon Resource Name (ARN) of the service network.
        authType:
          allOf:
            - $ref: '#/components/schemas/AuthType'
            - description: The type of IAM policy.
        createdAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the service network was created, specified in ISO-8601 format.'
        id:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkId'
            - description: The ID of the service network.
        lastUpdatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time of the last update, specified in ISO-8601 format.'
        name:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkName'
            - description: The name of the service network.
        numberOfAssociatedServices:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The number of services associated with the service network.
        numberOfAssociatedVPCs:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The number of VPCs associated with the service network.
    GetServiceNetworkServiceAssociationResponse:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkServiceAssociationArn'
            - description: The Amazon Resource Name (ARN) of the association.
        createdAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the association was created, specified in ISO-8601 format.'
        createdBy:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The account that created the association.
        customDomainName:
          allOf:
            - $ref: '#/components/schemas/ServiceCustomDomainName'
            - description: 'The custom domain name of the service. '
        dnsEntry:
          allOf:
            - $ref: '#/components/schemas/DnsEntry'
            - description: The DNS name of the service.
        failureCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The failure code.
        failureMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The failure message.
        id:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkServiceAssociationIdentifier'
            - description: The ID of the service network and service association.
        serviceArn:
          allOf:
            - $ref: '#/components/schemas/ServiceArn'
            - description: The Amazon Resource Name (ARN) of the service.
        serviceId:
          allOf:
            - $ref: '#/components/schemas/ServiceId'
            - description: The ID of the service.
        serviceName:
          allOf:
            - $ref: '#/components/schemas/ServiceName'
            - description: The name of the service.
        serviceNetworkArn:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkArn'
            - description: The Amazon Resource Name (ARN) of the service network.
        serviceNetworkId:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkId'
            - description: The ID of the service network.
        serviceNetworkName:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkName'
            - description: The name of the service network.
        status:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkServiceAssociationStatus'
            - description: The status of the association.
    GetServiceNetworkVpcAssociationResponse:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkVpcAssociationArn'
            - description: The Amazon Resource Name (ARN) of the association.
        createdAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the association was created, specified in ISO-8601 format.'
        createdBy:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The account that created the association.
        failureCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The failure code.
        failureMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The failure message.
        id:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkVpcAssociationId'
            - description: The ID of the specified association between the service network and the VPC.
        lastUpdatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the association was last updated, specified in ISO-8601 format.'
        securityGroupIds:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupList'
            - description: The IDs of the security groups.
        serviceNetworkArn:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkArn'
            - description: The Amazon Resource Name (ARN) of the service network.
        serviceNetworkId:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkId'
            - description: The ID of the service network.
        serviceNetworkName:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkName'
            - description: The name of the service network.
        status:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkVpcAssociationStatus'
            - description: The status of the association.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC.
    GetTargetGroupResponse:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/TargetGroupArn'
            - description: The Amazon Resource Name (ARN) of the target group.
        config:
          allOf:
            - $ref: '#/components/schemas/TargetGroupConfig'
            - description: The target group configuration.
        createdAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the target group was created, specified in ISO-8601 format.'
        failureCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The failure code.
        failureMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The failure message.
        id:
          allOf:
            - $ref: '#/components/schemas/TargetGroupId'
            - description: The ID of the target group.
        lastUpdatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the target group was last updated, specified in ISO-8601 format.'
        name:
          allOf:
            - $ref: '#/components/schemas/TargetGroupName'
            - description: The name of the target group.
        serviceArns:
          allOf:
            - $ref: '#/components/schemas/ServiceArnList'
            - description: The Amazon Resource Names (ARNs) of the service.
        status:
          allOf:
            - $ref: '#/components/schemas/TargetGroupStatus'
            - description: The status.
        type:
          allOf:
            - $ref: '#/components/schemas/TargetGroupType'
            - description: The target group type.
    ListAccessLogSubscriptionsResponse:
      type: object
      required:
        - items
      properties:
        items:
          allOf:
            - $ref: '#/components/schemas/AccessLogSubscriptionList'
            - description: The access log subscriptions.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: A pagination token for the next page of results.
    ListListenersResponse:
      type: object
      required:
        - items
      properties:
        items:
          allOf:
            - $ref: '#/components/schemas/ListenerSummaryList'
            - description: Information about the listeners.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If there are additional results, a pagination token for the next page of results.'
    ListRulesResponse:
      type: object
      required:
        - items
      properties:
        items:
          allOf:
            - $ref: '#/components/schemas/RuleSummaryList'
            - description: Information about the rules.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If there are additional results, a pagination token for the next page of results.'
    ListServiceNetworkServiceAssociationsResponse:
      type: object
      required:
        - items
      properties:
        items:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkServiceAssociationList'
            - description: Information about the associations.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If there are additional results, a pagination token for the next page of results.'
    ListServiceNetworkVpcAssociationsResponse:
      type: object
      required:
        - items
      properties:
        items:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkVpcAssociationList'
            - description: Information about the associations.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If there are additional results, a pagination token for the next page of results.'
    ListServiceNetworksResponse:
      type: object
      required:
        - items
      properties:
        items:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkList'
            - description: Information about the service networks.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If there are additional results, a pagination token for the next page of results.'
    ListServicesResponse:
      type: object
      properties:
        items:
          allOf:
            - $ref: '#/components/schemas/ServiceList'
            - description: The services.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If there are additional results, a pagination token for the next page of results.'
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: The tags.
    ListTargetGroupsResponse:
      type: object
      properties:
        items:
          allOf:
            - $ref: '#/components/schemas/TargetGroupList'
            - description: Information about the target groups.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If there are additional results, a pagination token for the next page of results.'
    ListTargetsResponse:
      type: object
      required:
        - items
      properties:
        items:
          allOf:
            - $ref: '#/components/schemas/TargetSummaryList'
            - description: Information about the targets.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If there are additional results, a pagination token for the next page of results.'
    PutAuthPolicyResponse:
      type: object
      properties:
        policy:
          allOf:
            - $ref: '#/components/schemas/AuthPolicyString'
            - description: The auth policy. The policy string in JSON must not contain newlines or blank lines.
        state:
          allOf:
            - $ref: '#/components/schemas/AuthPolicyState'
            - description: 'The state of the auth policy. The auth policy is only active when the auth type is set to <code>AWS_IAM</code>. If you provide a policy, then authentication and authorization decisions are made based on this policy and the client''s IAM policy. If the Auth type is <code>NONE</code>, then, any auth policy you provide will remain inactive. For more information, see <a href="https://docs.aws.amazon.com/vpc-lattice/latest/ug/service-networks.html#create-service-network">Create a service network</a> in the <i>Amazon VPC Lattice User Guide</i>.'
    PutResourcePolicyResponse:
      type: object
      properties: {}
    RegisterTargetsResponse:
      type: object
      properties:
        successful:
          allOf:
            - $ref: '#/components/schemas/TargetList'
            - description: The targets that were successfully registered.
        unsuccessful:
          allOf:
            - $ref: '#/components/schemas/TargetFailureList'
            - description: The targets that were not registered.
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    UpdateAccessLogSubscriptionResponse:
      type: object
      required:
        - arn
        - destinationArn
        - id
        - resourceArn
        - resourceId
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/AccessLogSubscriptionArn'
            - description: The Amazon Resource Name (ARN) of the access log subscription.
        destinationArn:
          allOf:
            - $ref: '#/components/schemas/AccessLogDestinationArn'
            - description: The Amazon Resource Name (ARN) of the access log destination.
        id:
          allOf:
            - $ref: '#/components/schemas/AccessLogSubscriptionId'
            - description: The ID of the access log subscription.
        resourceArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The Amazon Resource Name (ARN) of the access log subscription.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/ResourceId'
            - description: The ID of the resource.
    UpdateListenerResponse:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ListenerArn'
            - description: The Amazon Resource Name (ARN) of the listener.
        defaultAction:
          allOf:
            - $ref: '#/components/schemas/RuleAction'
            - description: The action for the default rule.
        id:
          allOf:
            - $ref: '#/components/schemas/ListenerId'
            - description: The ID of the listener.
        name:
          allOf:
            - $ref: '#/components/schemas/ListenerName'
            - description: The name of the listener.
        port:
          allOf:
            - $ref: '#/components/schemas/Port'
            - description: The listener port.
        protocol:
          allOf:
            - $ref: '#/components/schemas/ListenerProtocol'
            - description: The protocol of the listener.
        serviceArn:
          allOf:
            - $ref: '#/components/schemas/ServiceArn'
            - description: The Amazon Resource Name (ARN) of the service.
        serviceId:
          allOf:
            - $ref: '#/components/schemas/ServiceId'
            - description: The ID of the service.
    UpdateRuleResponse:
      type: object
      properties:
        action:
          allOf:
            - $ref: '#/components/schemas/RuleAction'
            - description: Information about the action for the specified listener rule.
        arn:
          allOf:
            - $ref: '#/components/schemas/RuleArn'
            - description: The Amazon Resource Name (ARN) of the listener.
        id:
          allOf:
            - $ref: '#/components/schemas/RuleId'
            - description: The ID of the listener.
        isDefault:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether this is the default rule.
        match:
          allOf:
            - $ref: '#/components/schemas/RuleMatch'
            - description: The rule match.
        name:
          allOf:
            - $ref: '#/components/schemas/RuleName'
            - description: The name of the listener.
        priority:
          allOf:
            - $ref: '#/components/schemas/RulePriority'
            - description: The rule priority.
    UpdateServiceResponse:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ServiceArn'
            - description: The Amazon Resource Name (ARN) of the service.
        authType:
          allOf:
            - $ref: '#/components/schemas/AuthType'
            - description: The type of IAM policy.
        certificateArn:
          allOf:
            - $ref: '#/components/schemas/CertificateArn'
            - description: 'The Amazon Resource Name (ARN) of the certificate. '
        customDomainName:
          allOf:
            - $ref: '#/components/schemas/ServiceCustomDomainName'
            - description: The custom domain name of the service.
        id:
          allOf:
            - $ref: '#/components/schemas/ServiceId'
            - description: The ID of the service.
        name:
          allOf:
            - $ref: '#/components/schemas/ServiceName'
            - description: The name of the service.
    UpdateServiceNetworkResponse:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkArn'
            - description: The Amazon Resource Name (ARN) of the service network.
        authType:
          allOf:
            - $ref: '#/components/schemas/AuthType'
            - description: The type of IAM policy.
        id:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkId'
            - description: The ID of the service network.
        name:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkName'
            - description: The name of the service network.
    UpdateServiceNetworkVpcAssociationResponse:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkVpcAssociationArn'
            - description: The Amazon Resource Name (ARN) of the association.
        createdBy:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The account that created the association.
        id:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkVpcAssociationId'
            - description: The ID of the association.
        securityGroupIds:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupList'
            - description: The IDs of the security groups.
        status:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkVpcAssociationStatus'
            - description: 'The status. You can retry the operation if the status is <code>DELETE_FAILED</code>. However, if you retry it while the status is <code>DELETE_IN_PROGRESS</code>, there is no change in the status.'
    UpdateTargetGroupResponse:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/TargetGroupArn'
            - description: The Amazon Resource Name (ARN) of the target group.
        config:
          allOf:
            - $ref: '#/components/schemas/TargetGroupConfig'
            - description: The target group configuration.
        id:
          allOf:
            - $ref: '#/components/schemas/TargetGroupId'
            - description: The ID of the target group.
        name:
          allOf:
            - $ref: '#/components/schemas/TargetGroupName'
            - description: The name of the target group.
        status:
          allOf:
            - $ref: '#/components/schemas/TargetGroupStatus'
            - description: The status.
        type:
          allOf:
            - $ref: '#/components/schemas/TargetGroupType'
            - description: The target group type.
    Boolean:
      type: boolean
    HealthCheckIntervalSeconds:
      type: integer
      minimum: 0
      maximum: 300
    HealthCheckTimeoutSeconds:
      type: integer
      minimum: 0
      maximum: 120
    HealthyThresholdCount:
      type: integer
      minimum: 0
      maximum: 10
    Matcher:
      type: object
      properties:
        httpCode:
          allOf:
            - $ref: '#/components/schemas/HttpCodeMatcher'
            - description: The HTTP code to use when checking for a successful response from a target.
      description: The codes to use when checking for a successful response from a target for health checks.
    HealthCheckPath:
      type: string
      pattern: '(^/[a-zA-Z0-9@:%_+.~#?&/=-]*$|(^$))'
      minLength: 0
      maxLength: 2048
    HealthCheckPort:
      type: integer
      minimum: 0
      maximum: 65535
    HealthCheckProtocolVersion:
      type: string
      enum:
        - HTTP1
        - HTTP2
    UnhealthyThresholdCount:
      type: integer
      minimum: 0
      maximum: 10
    AccessLogDestinationArn:
      type: string
      pattern: '^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:([^/].*)?$'
      minLength: 20
      maxLength: 2048
    AccessLogSubscriptionArn:
      type: string
      pattern: '^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:accesslogsubscription/als-[0-9a-z]{17}$'
      minLength: 20
      maxLength: 2048
    AccessLogSubscriptionId:
      type: string
      pattern: '^als-[0-9a-z]{17}$'
      minLength: 21
      maxLength: 21
    AccessLogSubscriptionIdentifier:
      type: string
      pattern: '^((als-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:accesslogsubscription/als-[0-9a-z]{17}))$'
      minLength: 17
      maxLength: 2048
    AccessLogSubscriptionSummary:
      type: object
      required:
        - arn
        - createdAt
        - destinationArn
        - id
        - lastUpdatedAt
        - resourceArn
        - resourceId
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/AccessLogSubscriptionArn'
            - description: The Amazon Resource Name (ARN) of the access log subscription
        createdAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the access log subscription was created, specified in ISO-8601 format.'
        destinationArn:
          allOf:
            - $ref: '#/components/schemas/AccessLogDestinationArn'
            - description: The Amazon Resource Name (ARN) of the destination.
        id:
          allOf:
            - $ref: '#/components/schemas/AccessLogSubscriptionId'
            - description: The ID of the access log subscription.
        lastUpdatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the access log subscription was last updated, specified in ISO-8601 format.'
        resourceArn:
          allOf:
            - $ref: '#/components/schemas/ResourceArn'
            - description: The Amazon Resource Name (ARN) of the service or service network.
        resourceId:
          allOf:
            - $ref: '#/components/schemas/ResourceId'
            - description: The ID of the service or service network.
      description: Summary information about an access log subscription.
    AccessLogSubscriptionList:
      type: array
      items:
        $ref: '#/components/schemas/AccessLogSubscriptionSummary'
    Timestamp:
      type: string
      format: date-time
    ResourceArn:
      type: string
      pattern: '^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:((servicenetwork/sn)|(service/svc))-[0-9a-z]{17}$'
      minLength: 20
      maxLength: 200
    ResourceId:
      type: string
      pattern: '^((sn)|(svc))-[0-9a-z]{17}$'
      minLength: 20
      maxLength: 50
    AccountId:
      type: string
      pattern: '^[0-9]{12}$'
      minLength: 1
      maxLength: 12
    Arn:
      type: string
      pattern: '^arn:[a-z0-9][-.a-z0-9]{0,62}:vpc-lattice:([a-z0-9][-.a-z0-9]{0,62})?:\d{12}?:[^/].{0,1023}$'
      minLength: 0
      maxLength: 1224
    AuthPolicyState:
      type: string
      enum:
        - Active
        - Inactive
    AuthPolicyString:
      type: string
      pattern: ^.*\S.*$
      minLength: 0
      maxLength: 10000
    AuthType:
      type: string
      enum:
        - NONE
        - AWS_IAM
    ListenerIdentifier:
      type: string
      pattern: '^((listener-[0-9a-z]{17})|(^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$))$'
      minLength: 20
      maxLength: 2048
    RuleUpdateList:
      type: array
      items:
        $ref: '#/components/schemas/RuleUpdate'
      minItems: 1
      maxItems: 5
    ServiceIdentifier:
      type: string
      pattern: '^((svc-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}))$'
      minLength: 17
      maxLength: 2048
    BatchUpdateRuleRequest:
      type: object
      required:
        - rules
      title: BatchUpdateRuleRequest
      properties:
        rules:
          allOf:
            - $ref: '#/components/schemas/RuleUpdateList'
            - description: The rules for the specified listener.
    RuleUpdateSuccessList:
      type: array
      items:
        $ref: '#/components/schemas/RuleUpdateSuccess'
    RuleUpdateFailureList:
      type: array
      items:
        $ref: '#/components/schemas/RuleUpdateFailure'
    CertificateArn:
      type: string
      pattern: '^(arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:certificate/[0-9a-z-]+)?$'
      minLength: 0
      maxLength: 2048
    ClientToken:
      type: string
      pattern: '[!-~]+'
      minLength: 1
      maxLength: 64
    ResourceIdentifier:
      type: string
      pattern: '^((((sn)|(svc))-[0-9a-z]{17})|(arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:((servicenetwork/sn)|(service/svc))-[0-9a-z]{17}))$'
      minLength: 17
      maxLength: 200
    TagMap:
      type: object
      minProperties: 0
      maxProperties: 200
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    CreateAccessLogSubscriptionRequest:
      type: object
      required:
        - destinationArn
        - resourceIdentifier
      title: CreateAccessLogSubscriptionRequest
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you retry a request that completed successfully using the same client token and parameters, the retry succeeds without performing any actions. If the parameters aren''t identical, the retry fails.'
        destinationArn:
          allOf:
            - $ref: '#/components/schemas/AccessLogDestinationArn'
            - description: 'The Amazon Resource Name (ARN) of the destination. The supported destination types are CloudWatch Log groups, Kinesis Data Firehose delivery streams, and Amazon S3 buckets.'
        resourceIdentifier:
          allOf:
            - $ref: '#/components/schemas/ResourceIdentifier'
            - description: The ID or Amazon Resource Name (ARN) of the service network or service.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: The tags for the access log subscription.
    RuleAction:
      type: object
      properties:
        fixedResponse:
          allOf:
            - $ref: '#/components/schemas/FixedResponseAction'
            - description: ' Describes the rule action that returns a custom HTTP response. '
        forward:
          allOf:
            - $ref: '#/components/schemas/ForwardAction'
            - description: The forward action. Traffic that matches the rule is forwarded to the specified target groups.
      description: 'Describes the action for a rule. Each rule must include exactly one of the following types of actions: <code>forward </code>or <code>fixed-response</code>, and it must be the last action to be performed.'
    ListenerName:
      type: string
      pattern: '^(?!listener-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$'
      minLength: 3
      maxLength: 63
    ListenerProtocol:
      type: string
      enum:
        - HTTP
        - HTTPS
    CreateListenerRequest:
      type: object
      required:
        - defaultAction
        - name
        - protocol
      title: CreateListenerRequest
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you retry a request that completed successfully using the same client token and parameters, the retry succeeds without performing any actions. If the parameters aren''t identical, the retry fails.'
        defaultAction:
          allOf:
            - $ref: '#/components/schemas/RuleAction'
            - description: 'The action for the default rule. Each listener has a default rule. Each rule consists of a priority, one or more actions, and one or more conditions. The default rule is the rule that''s used if no other rules match. Each rule must include exactly one of the following types of actions: <code>forward </code>or <code>fixed-response</code>, and it must be the last action to be performed. '
        name:
          allOf:
            - $ref: '#/components/schemas/ListenerName'
            - description: 'The name of the listener. A listener name must be unique within a service. The valid characters are a-z, 0-9, and hyphens (-). You can''t use a hyphen as the first or last character, or immediately after another hyphen.'
        port:
          allOf:
            - $ref: '#/components/schemas/Port'
            - description: 'The listener port. You can specify a value from <code>1</code> to <code>65535</code>. For HTTP, the default is <code>80</code>. For HTTPS, the default is <code>443</code>.'
        protocol:
          allOf:
            - $ref: '#/components/schemas/ListenerProtocol'
            - description: The listener protocol HTTP or HTTPS.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: The tags for the listener.
    ListenerArn:
      type: string
      pattern: '^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$'
      minLength: 20
      maxLength: 2048
    ListenerId:
      type: string
      pattern: '^listener-[0-9a-z]{17}$'
      minLength: 26
      maxLength: 26
    ServiceArn:
      type: string
      pattern: '^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}$'
      minLength: 20
      maxLength: 2048
    ServiceId:
      type: string
      pattern: '^svc-[0-9a-z]{17}$'
      minLength: 21
      maxLength: 21
    RuleMatch:
      type: object
      properties:
        httpMatch:
          allOf:
            - $ref: '#/components/schemas/HttpMatch'
            - description: The HTTP criteria that a rule must match.
      description: Describes a rule match.
    RuleName:
      type: string
      pattern: '^(?!rule-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$'
      minLength: 3
      maxLength: 63
    RulePriority:
      type: integer
      minimum: 1
      maximum: 100
    CreateRuleRequest:
      type: object
      required:
        - action
        - match
        - name
        - priority
      title: CreateRuleRequest
      properties:
        action:
          allOf:
            - $ref: '#/components/schemas/RuleAction'
            - description: The action for the default rule.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you retry a request that completed successfully using the same client token and parameters, the retry succeeds without performing any actions. If the parameters aren''t identical, the retry fails.'
        match:
          allOf:
            - $ref: '#/components/schemas/RuleMatch'
            - description: The rule match.
        name:
          allOf:
            - $ref: '#/components/schemas/RuleName'
            - description: 'The name of the rule. The name must be unique within the listener. The valid characters are a-z, 0-9, and hyphens (-). You can''t use a hyphen as the first or last character, or immediately after another hyphen.'
        priority:
          allOf:
            - $ref: '#/components/schemas/RulePriority'
            - description: The priority assigned to the rule. Each rule for a specific listener must have a unique priority. The lower the priority number the higher the priority.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: The tags for the rule.
    RuleArn:
      type: string
      pattern: '^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}/rule/rule-[0-9a-z]{17}$'
      minLength: 20
      maxLength: 2048
    RuleId:
      type: string
      pattern: '^rule-[0-9a-z]{17}$'
      minLength: 5
      maxLength: 22
    ServiceNetworkName:
      type: string
      pattern: '^(?!servicenetwork-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$'
      minLength: 3
      maxLength: 63
    CreateServiceNetworkRequest:
      type: object
      required:
        - name
      title: CreateServiceNetworkRequest
      properties:
        authType:
          allOf:
            - $ref: '#/components/schemas/AuthType'
            - description: '<p>The type of IAM policy.</p> <ul> <li> <p> <code>NONE</code>: The resource does not use an IAM policy. This is the default.</p> </li> <li> <p> <code>AWS_IAM</code>: The resource uses an IAM policy. When this type is used, auth is enabled and an auth policy is required.</p> </li> </ul>'
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you retry a request that completed successfully using the same client token and parameters, the retry succeeds without performing any actions. If the parameters aren''t identical, the retry fails.'
        name:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkName'
            - description: 'The name of the service network. The name must be unique to the account. The valid characters are a-z, 0-9, and hyphens (-). You can''t use a hyphen as the first or last character, or immediately after another hyphen.'
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: The tags for the service network.
    ServiceNetworkArn:
      type: string
      pattern: '^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetwork/sn-[0-9a-z]{17}$'
      minLength: 32
      maxLength: 2048
    ServiceNetworkId:
      type: string
      pattern: '^servicenetwork-[0-9a-z]{17}$'
      minLength: 32
      maxLength: 32
    ServiceNetworkIdentifier:
      type: string
      pattern: '^((sn-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetwork/sn-[0-9a-z]{17}))$'
      minLength: 3
      maxLength: 2048
    CreateServiceNetworkServiceAssociationRequest:
      type: object
      required:
        - serviceIdentifier
        - serviceNetworkIdentifier
      title: CreateServiceNetworkServiceAssociationRequest
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you retry a request that completed successfully using the same client token and parameters, the retry succeeds without performing any actions. If the parameters aren''t identical, the retry fails.'
        serviceIdentifier:
          allOf:
            - $ref: '#/components/schemas/ServiceIdentifier'
            - description: The ID or Amazon Resource Name (ARN) of the service.
        serviceNetworkIdentifier:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkIdentifier'
            - description: The ID or Amazon Resource Name (ARN) of the service network. You must use the ARN if the resources specified in the operation are in different accounts.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: The tags for the association.
    ServiceNetworkServiceAssociationArn:
      type: string
      pattern: '^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetworkserviceassociation/snsa-[0-9a-z]{17}$'
      minLength: 20
      maxLength: 2048
    ServiceCustomDomainName:
      type: string
      minLength: 3
      maxLength: 255
    DnsEntry:
      type: object
      properties:
        domainName:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The domain name of the service.
        hostedZoneId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the hosted zone.
      description: Describes the DNS information of a service.
    ServiceNetworkServiceAssociationIdentifier:
      type: string
      pattern: '^((snsa-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetworkserviceassociation/snsa-[0-9a-z]{17}))$'
      minLength: 17
      maxLength: 2048
    ServiceNetworkServiceAssociationStatus:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - ACTIVE
        - DELETE_IN_PROGRESS
        - CREATE_FAILED
        - DELETE_FAILED
    CreateServiceNetworkVpcAssociationRequestSecurityGroupIdsList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      minItems: 0
      maxItems: 5
    CreateServiceNetworkVpcAssociationRequest:
      type: object
      required:
        - serviceNetworkIdentifier
        - vpcIdentifier
      title: CreateServiceNetworkVpcAssociationRequest
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you retry a request that completed successfully using the same client token and parameters, the retry succeeds without performing any actions. If the parameters aren''t identical, the retry fails.'
        securityGroupIds:
          allOf:
            - $ref: '#/components/schemas/CreateServiceNetworkVpcAssociationRequestSecurityGroupIdsList'
            - description: 'The IDs of the security groups. Security groups aren''t added by default. You can add a security group to apply network level controls to control which resources in a VPC are allowed to access the service network and its services. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html">Control traffic to resources using security groups</a> in the <i>Amazon VPC User Guide</i>.'
        serviceNetworkIdentifier:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkIdentifier'
            - description: The ID or Amazon Resource Name (ARN) of the service network. You must use the ARN when the resources specified in the operation are in different accounts.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: The tags for the association.
        vpcIdentifier:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC.
    ServiceNetworkVpcAssociationArn:
      type: string
      pattern: '^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetworkvpcassociation/snva-[0-9a-z]{17}$'
      minLength: 20
      maxLength: 2048
    ServiceNetworkVpcAssociationId:
      type: string
      pattern: '^snva-[0-9a-z]{17}$'
      minLength: 22
      maxLength: 22
    SecurityGroupList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
    ServiceNetworkVpcAssociationStatus:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - ACTIVE
        - UPDATE_IN_PROGRESS
        - DELETE_IN_PROGRESS
        - CREATE_FAILED
        - DELETE_FAILED
        - UPDATE_FAILED
    ServiceName:
      type: string
      pattern: '^(?!svc-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$'
      minLength: 3
      maxLength: 40
    CreateServiceRequest:
      type: object
      required:
        - name
      title: CreateServiceRequest
      properties:
        authType:
          allOf:
            - $ref: '#/components/schemas/AuthType'
            - description: '<p>The type of IAM policy.</p> <ul> <li> <p> <code>NONE</code>: The resource does not use an IAM policy. This is the default.</p> </li> <li> <p> <code>AWS_IAM</code>: The resource uses an IAM policy. When this type is used, auth is enabled and an auth policy is required.</p> </li> </ul>'
        certificateArn:
          allOf:
            - $ref: '#/components/schemas/CertificateArn'
            - description: The Amazon Resource Name (ARN) of the certificate.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you retry a request that completed successfully using the same client token and parameters, the retry succeeds without performing any actions. If the parameters aren''t identical, the retry fails.'
        customDomainName:
          allOf:
            - $ref: '#/components/schemas/ServiceCustomDomainName'
            - description: The custom domain name of the service.
        name:
          allOf:
            - $ref: '#/components/schemas/ServiceName'
            - description: 'The name of the service. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can''t use a hyphen as the first or last character, or immediately after another hyphen.'
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: The tags for the service.
    ServiceStatus:
      type: string
      enum:
        - ACTIVE
        - CREATE_IN_PROGRESS
        - DELETE_IN_PROGRESS
        - CREATE_FAILED
        - DELETE_FAILED
    TargetGroupConfig:
      type: object
      required:
        - port
        - protocol
        - vpcIdentifier
      properties:
        healthCheck:
          allOf:
            - $ref: '#/components/schemas/HealthCheckConfig'
            - description: The health check configuration.
        ipAddressType:
          allOf:
            - $ref: '#/components/schemas/IpAddressType'
            - description: 'The type of IP address used for the target group. The possible values are <code>ipv4</code> and <code>ipv6</code>. This is an optional parameter. If not specified, the IP address type defaults to <code>ipv4</code>.'
        port:
          allOf:
            - $ref: '#/components/schemas/Port'
            - description: 'The port on which the targets are listening. For HTTP, the default is <code>80</code>. For HTTPS, the default is <code>443</code> '
        protocol:
          allOf:
            - $ref: '#/components/schemas/TargetGroupProtocol'
            - description: The protocol to use for routing traffic to the targets. Default is the protocol of a target group.
        protocolVersion:
          allOf:
            - $ref: '#/components/schemas/TargetGroupProtocolVersion'
            - description: The protocol version. Default value is <code>HTTP1</code>.
        vpcIdentifier:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC.
      description: Describes the configuration of a target group. Lambda functions don't support target group configuration.
    TargetGroupName:
      type: string
      pattern: '^(?!tg-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$'
      minLength: 3
      maxLength: 128
    TargetGroupType:
      type: string
      enum:
        - IP
        - LAMBDA
        - INSTANCE
        - ALB
    CreateTargetGroupRequest:
      type: object
      required:
        - name
        - type
      title: CreateTargetGroupRequest
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you retry a request that completed successfully using the same client token and parameters, the retry succeeds without performing any actions. If the parameters aren''t identical, the retry fails.'
        config:
          allOf:
            - $ref: '#/components/schemas/TargetGroupConfig'
            - description: 'The target group configuration. If <code>type</code> is set to <code>LAMBDA</code>, this parameter doesn''t apply.'
        name:
          allOf:
            - $ref: '#/components/schemas/TargetGroupName'
            - description: 'The name of the target group. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can''t use a hyphen as the first or last character, or immediately after another hyphen.'
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: The tags for the target group.
        type:
          allOf:
            - $ref: '#/components/schemas/TargetGroupType'
            - description: The type of target group.
    TargetGroupArn:
      type: string
      pattern: '^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:targetgroup/tg-[0-9a-z]{17}$'
      minLength: 20
      maxLength: 2048
    TargetGroupId:
      type: string
      pattern: '^tg-[0-9a-z]{17}$'
      minLength: 20
      maxLength: 20
    TargetGroupStatus:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - ACTIVE
        - DELETE_IN_PROGRESS
        - CREATE_FAILED
        - DELETE_FAILED
    DeleteAccessLogSubscriptionRequest:
      type: object
      title: DeleteAccessLogSubscriptionRequest
      properties: {}
    DeleteAuthPolicyRequest:
      type: object
      title: DeleteAuthPolicyRequest
      properties: {}
    DeleteListenerRequest:
      type: object
      title: DeleteListenerRequest
      properties: {}
    DeleteResourcePolicyRequest:
      type: object
      title: DeleteResourcePolicyRequest
      properties: {}
    RuleIdentifier:
      type: string
      pattern: '^((rule-[0-9a-z]{17})|(^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}/rule/rule-[0-9a-z]{17}$))$'
      minLength: 20
      maxLength: 2048
    DeleteRuleRequest:
      type: object
      title: DeleteRuleRequest
      properties: {}
    DeleteServiceNetworkRequest:
      type: object
      title: DeleteServiceNetworkRequest
      properties: {}
    DeleteServiceNetworkServiceAssociationRequest:
      type: object
      title: DeleteServiceNetworkServiceAssociationRequest
      properties: {}
    ServiceNetworkVpcAssociationIdentifier:
      type: string
      pattern: '^((snva-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetworkvpcassociation/snva-[0-9a-z]{17}))$'
      minLength: 17
      maxLength: 2048
    DeleteServiceNetworkVpcAssociationRequest:
      type: object
      title: DeleteServiceNetworkVpcAssociationRequest
      properties: {}
    DeleteServiceRequest:
      type: object
      title: DeleteServiceRequest
      properties: {}
    TargetGroupIdentifier:
      type: string
      pattern: '^((tg-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:targetgroup/tg-[0-9a-z]{17}))$'
      minLength: 17
      maxLength: 2048
    DeleteTargetGroupRequest:
      type: object
      title: DeleteTargetGroupRequest
      properties: {}
    DeregisterTargetsRequestTargetsList:
      type: array
      items:
        $ref: '#/components/schemas/Target'
      minItems: 1
      maxItems: 100
    DeregisterTargetsRequest:
      type: object
      required:
        - targets
      title: DeregisterTargetsRequest
      properties:
        targets:
          allOf:
            - $ref: '#/components/schemas/DeregisterTargetsRequestTargetsList'
            - description: The targets to deregister.
    TargetList:
      type: array
      items:
        $ref: '#/components/schemas/Target'
    TargetFailureList:
      type: array
      items:
        $ref: '#/components/schemas/TargetFailure'
    String:
      type: string
    FailureCode:
      type: string
    FailureMessage:
      type: string
    HttpStatusCode:
      type: integer
      minimum: 100
      maximum: 599
    WeightedTargetGroupList:
      type: array
      items:
        $ref: '#/components/schemas/WeightedTargetGroup'
      minItems: 1
      maxItems: 2
    GetAccessLogSubscriptionRequest:
      type: object
      title: GetAccessLogSubscriptionRequest
      properties: {}
    GetAuthPolicyRequest:
      type: object
      title: GetAuthPolicyRequest
      properties: {}
    GetListenerRequest:
      type: object
      title: GetListenerRequest
      properties: {}
    GetResourcePolicyRequest:
      type: object
      title: GetResourcePolicyRequest
      properties: {}
    PolicyString:
      type: string
      pattern: ^.*\S.*$
      minLength: 1
      maxLength: 10000
    GetRuleRequest:
      type: object
      title: GetRuleRequest
      properties: {}
    GetServiceNetworkRequest:
      type: object
      title: GetServiceNetworkRequest
      properties: {}
    Long:
      type: integer
    GetServiceNetworkServiceAssociationRequest:
      type: object
      title: GetServiceNetworkServiceAssociationRequest
      properties: {}
    GetServiceNetworkVpcAssociationRequest:
      type: object
      title: GetServiceNetworkVpcAssociationRequest
      properties: {}
    GetServiceRequest:
      type: object
      title: GetServiceRequest
      properties: {}
    GetTargetGroupRequest:
      type: object
      title: GetTargetGroupRequest
      properties: {}
    ServiceArnList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceArn'
    HeaderMatchType:
      type: object
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/HeaderMatchContains'
            - description: Specifies a contains type match.
        exact:
          allOf:
            - $ref: '#/components/schemas/HeaderMatchExact'
            - description: Specifies an exact type match.
        prefix:
          allOf:
            - $ref: '#/components/schemas/HeaderMatchPrefix'
            - description: Specifies a prefix type match. Matches the value with the prefix.
      description: Describes a header match type. Only one can be provided.
    HeaderMatchName:
      type: string
      minLength: 1
      maxLength: 100
    HeaderMatch:
      type: object
      required:
        - match
        - name
      properties:
        caseSensitive:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the match is case sensitive. Defaults to false.
        match:
          allOf:
            - $ref: '#/components/schemas/HeaderMatchType'
            - description: The header match type.
        name:
          allOf:
            - $ref: '#/components/schemas/HeaderMatchName'
            - description: The name of the header.
      description: Describes the constraints for a header match. Matches incoming requests with rule based on request header value before applying rule action.
    HeaderMatchContains:
      type: string
      minLength: 1
      maxLength: 200
    HeaderMatchExact:
      type: string
      minLength: 1
      maxLength: 200
    HeaderMatchList:
      type: array
      items:
        $ref: '#/components/schemas/HeaderMatch'
      minItems: 1
      maxItems: 5
    HeaderMatchPrefix:
      type: string
      minLength: 1
      maxLength: 200
    HttpCodeMatcher:
      type: string
      pattern: '(^[0-9-,]+$|(^$))'
      minLength: 0
      maxLength: 2000
    HttpMethod:
      type: string
      minLength: 0
      maxLength: 16
    PathMatch:
      type: object
      required:
        - match
      properties:
        caseSensitive:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the match is case sensitive. Defaults to false.
        match:
          allOf:
            - $ref: '#/components/schemas/PathMatchType'
            - description: The type of path match.
      description: Describes the conditions that can be applied when matching a path for incoming requests.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    NextToken:
      type: string
      minLength: 1
      maxLength: 2048
    ListAccessLogSubscriptionsRequest:
      type: object
      title: ListAccessLogSubscriptionsRequest
      properties: {}
    ListListenersRequest:
      type: object
      title: ListListenersRequest
      properties: {}
    ListenerSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ListenerSummary'
    ListRulesRequest:
      type: object
      title: ListRulesRequest
      properties: {}
    RuleSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/RuleSummary'
    ListServiceNetworkServiceAssociationsRequest:
      type: object
      title: ListServiceNetworkServiceAssociationsRequest
      properties: {}
    ServiceNetworkServiceAssociationList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceNetworkServiceAssociationSummary'
    ListServiceNetworkVpcAssociationsRequest:
      type: object
      title: ListServiceNetworkVpcAssociationsRequest
      properties: {}
    ServiceNetworkVpcAssociationList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceNetworkVpcAssociationSummary'
    ListServiceNetworksRequest:
      type: object
      title: ListServiceNetworksRequest
      properties: {}
    ServiceNetworkList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceNetworkSummary'
    ListServicesRequest:
      type: object
      title: ListServicesRequest
      properties: {}
    ServiceList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceSummary'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    ListTargetGroupsRequest:
      type: object
      title: ListTargetGroupsRequest
      properties: {}
    TargetGroupList:
      type: array
      items:
        $ref: '#/components/schemas/TargetGroupSummary'
    ListTargetsRequestTargetsList:
      type: array
      items:
        $ref: '#/components/schemas/Target'
      minItems: 0
      maxItems: 20
    ListTargetsRequest:
      type: object
      title: ListTargetsRequest
      properties:
        targets:
          allOf:
            - $ref: '#/components/schemas/ListTargetsRequestTargetsList'
            - description: The targets to list.
    TargetSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/TargetSummary'
    ListenerSummary:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ListenerArn'
            - description: The Amazon Resource Name (ARN) of the listener.
        createdAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the listener was created, specified in ISO-8601 format.'
        id:
          allOf:
            - $ref: '#/components/schemas/ListenerId'
            - description: The ID of the listener.
        lastUpdatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the listener was last updated, specified in ISO-8601 format.'
        name:
          allOf:
            - $ref: '#/components/schemas/ListenerName'
            - description: The name of the listener.
        port:
          allOf:
            - $ref: '#/components/schemas/Port'
            - description: The listener port.
        protocol:
          allOf:
            - $ref: '#/components/schemas/ListenerProtocol'
            - description: The listener protocol.
      description: Summary information about a listener.
    PathMatchType:
      type: object
      properties:
        exact:
          allOf:
            - $ref: '#/components/schemas/PathMatchExact'
            - description: An exact match of the path.
        prefix:
          allOf:
            - $ref: '#/components/schemas/PathMatchPrefix'
            - description: A prefix match of the path.
      description: Describes a path match type. Each rule can include only one of the following types of paths.
    PathMatchExact:
      type: string
      pattern: '^/[a-zA-Z0-9@:%_+.~#?&/=-]*$'
      minLength: 1
      maxLength: 200
    PathMatchPrefix:
      type: string
      pattern: '^/[a-zA-Z0-9@:%_+.~#?&/=-]*$'
      minLength: 1
      maxLength: 200
    PutAuthPolicyRequest:
      type: object
      required:
        - policy
      title: PutAuthPolicyRequest
      properties:
        policy:
          allOf:
            - $ref: '#/components/schemas/AuthPolicyString'
            - description: The auth policy. The policy string in JSON must not contain newlines or blank lines.
    PutResourcePolicyRequest:
      type: object
      required:
        - policy
      title: PutResourcePolicyRequest
      properties:
        policy:
          allOf:
            - $ref: '#/components/schemas/PolicyString'
            - description: An IAM policy. The policy string in JSON must not contain newlines or blank lines.
    RegisterTargetsRequestTargetsList:
      type: array
      items:
        $ref: '#/components/schemas/Target'
      minItems: 1
      maxItems: 100
    RegisterTargetsRequest:
      type: object
      required:
        - targets
      title: RegisterTargetsRequest
      properties:
        targets:
          allOf:
            - $ref: '#/components/schemas/RegisterTargetsRequestTargetsList'
            - description: The targets.
    RuleSummary:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/RuleArn'
            - description: The Amazon Resource Name (ARN) of the rule.
        createdAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the listener rule was created, specified in ISO-8601 format.'
        id:
          allOf:
            - $ref: '#/components/schemas/RuleId'
            - description: The ID of the rule.
        isDefault:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Indicates whether this is the default rule. Listener rules are created when you create a listener. Each listener has a default rule for checking connection requests. '
        lastUpdatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the listener rule was last updated, specified in ISO-8601 format.'
        name:
          allOf:
            - $ref: '#/components/schemas/RuleName'
            - description: The name of the rule.
        priority:
          allOf:
            - $ref: '#/components/schemas/RulePriority'
            - description: ' The priority of the rule. '
      description: Summary information about the listener rule.
    RuleUpdateFailure:
      type: object
      properties:
        failureCode:
          allOf:
            - $ref: '#/components/schemas/FailureCode'
            - description: The failure code.
        failureMessage:
          allOf:
            - $ref: '#/components/schemas/FailureMessage'
            - description: The failure message.
        ruleIdentifier:
          allOf:
            - $ref: '#/components/schemas/RuleIdentifier'
            - description: The ID or Amazon Resource Name (ARN) of the rule.
      description: Describes a rule update that failed.
    RuleUpdateSuccess:
      type: object
      properties:
        action:
          allOf:
            - $ref: '#/components/schemas/RuleAction'
            - description: The action for the default rule.
        arn:
          allOf:
            - $ref: '#/components/schemas/RuleArn'
            - description: The Amazon Resource Name (ARN) of the listener.
        id:
          allOf:
            - $ref: '#/components/schemas/RuleId'
            - description: The ID of the listener.
        isDefault:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether this is the default rule.
        match:
          allOf:
            - $ref: '#/components/schemas/RuleMatch'
            - description: The rule match.
        name:
          allOf:
            - $ref: '#/components/schemas/RuleName'
            - description: The name of the listener.
        priority:
          allOf:
            - $ref: '#/components/schemas/RulePriority'
            - description: The rule priority.
      description: Describes a successful rule update.
    ServiceSummary:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ServiceArn'
            - description: The Amazon Resource Name (ARN) of the service.
        createdAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the service was created, specified in ISO-8601 format.'
        customDomainName:
          allOf:
            - $ref: '#/components/schemas/ServiceCustomDomainName'
            - description: ' The custom domain name of the service. '
        dnsEntry:
          allOf:
            - $ref: '#/components/schemas/DnsEntry'
            - description: DNS information about the service.
        id:
          allOf:
            - $ref: '#/components/schemas/ServiceId'
            - description: The ID of the service.
        lastUpdatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The date and time that the service was last updated. The format is ISO-8601.
        name:
          allOf:
            - $ref: '#/components/schemas/ServiceName'
            - description: The name of the service.
        status:
          allOf:
            - $ref: '#/components/schemas/ServiceStatus'
            - description: The status.
      description: Summary information about a service.
    ServiceNetworkSummary:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkArn'
            - description: The Amazon Resource Name (ARN) of the service network.
        createdAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the service network was created, specified in ISO-8601 format.'
        id:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkId'
            - description: The ID of the service network.
        lastUpdatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the service network was last updated, specified in ISO-8601 format.'
        name:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkName'
            - description: The name of the service network.
        numberOfAssociatedServices:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The number of services associated with the service network.
        numberOfAssociatedVPCs:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The number of VPCs associated with the service network.
      description: Summary information about a service network.
    ServiceNetworkServiceAssociationSummary:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkServiceAssociationArn'
            - description: The Amazon Resource Name (ARN) of the association.
        createdAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the association was created, specified in ISO-8601 format.'
        createdBy:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The account that created the association.
        customDomainName:
          allOf:
            - $ref: '#/components/schemas/ServiceCustomDomainName'
            - description: ' The custom domain name of the service. '
        dnsEntry:
          allOf:
            - $ref: '#/components/schemas/DnsEntry'
            - description: DNS information about the service.
        id:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkServiceAssociationIdentifier'
            - description: The ID of the association.
        serviceArn:
          allOf:
            - $ref: '#/components/schemas/ServiceArn'
            - description: The Amazon Resource Name (ARN) of the service.
        serviceId:
          allOf:
            - $ref: '#/components/schemas/ServiceId'
            - description: The ID of the service.
        serviceName:
          allOf:
            - $ref: '#/components/schemas/ServiceName'
            - description: The name of the service.
        serviceNetworkArn:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkArn'
            - description: The Amazon Resource Name (ARN) of the service network.
        serviceNetworkId:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkId'
            - description: The ID of the service network.
        serviceNetworkName:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkName'
            - description: The name of the service network.
        status:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkServiceAssociationStatus'
            - description: 'The status. If the deletion fails, try to delete again.'
      description: Summary information about the association between a service network and a service.
    ServiceNetworkVpcAssociationSummary:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkVpcAssociationArn'
            - description: The Amazon Resource Name (ARN) of the association.
        createdAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the association was created, specified in ISO-8601 format.'
        createdBy:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - description: The account that created the association.
        id:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkVpcAssociationId'
            - description: The ID of the association.
        lastUpdatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the association was last updated, specified in ISO-8601 format.'
        serviceNetworkArn:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkArn'
            - description: The Amazon Resource Name (ARN) of the service network.
        serviceNetworkId:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkId'
            - description: The ID of the service network.
        serviceNetworkName:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkName'
            - description: The name of the service network.
        status:
          allOf:
            - $ref: '#/components/schemas/ServiceNetworkVpcAssociationStatus'
            - description: The status.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC.
      description: Summary information about an association between a service network and a VPC.
    TagKeys:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 0
      maxItems: 200
    TagResourceRequest:
      type: object
      required:
        - tags
      title: TagResourceRequest
      properties:
        tags:
          allOf:
            - $ref: '#/components/schemas/TagMap'
            - description: The tags for the resource.
    TargetIdString:
      type: string
      minLength: 1
      maxLength: 200
    TargetFailure:
      type: object
      properties:
        failureCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The failure code.
        failureMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The failure message.
        id:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ID of the target. If the target type of the target group is <code>INSTANCE</code>, this is an instance ID. If the target type is <code>IP</code> , this is an IP address. If the target type is <code>LAMBDA</code>, this is the ARN of the Lambda function. If the target type is <code>ALB</code>, this is the ARN of the Application Load Balancer.'
        port:
          allOf:
            - $ref: '#/components/schemas/Port'
            - description: The port on which the target is listening. This parameter doesn't apply if the target is a Lambda function.
      description: Describes a target failure.
    TargetGroupSummary:
      type: object
      properties:
        arn:
          allOf:
            - $ref: '#/components/schemas/TargetGroupArn'
            - description: The ARN (Amazon Resource Name) of the target group.
        createdAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the target group was created, specified in ISO-8601 format.'
        id:
          allOf:
            - $ref: '#/components/schemas/TargetGroupId'
            - description: The ID of the target group.
        ipAddressType:
          allOf:
            - $ref: '#/components/schemas/IpAddressType'
            - description: 'The type of IP address used for the target group. The possible values are <code>ipv4</code> and <code>ipv6</code>. This is an optional parameter. If not specified, the IP address type defaults to <code>ipv4</code>.'
        lastUpdatedAt:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: 'The date and time that the target group was last updated, specified in ISO-8601 format.'
        name:
          allOf:
            - $ref: '#/components/schemas/TargetGroupName'
            - description: The name of the target group.
        port:
          allOf:
            - $ref: '#/components/schemas/Port'
            - description: The port of the target group.
        protocol:
          allOf:
            - $ref: '#/components/schemas/TargetGroupProtocol'
            - description: The protocol of the target group.
        serviceArns:
          allOf:
            - $ref: '#/components/schemas/ServiceArnList'
            - description: The list of Amazon Resource Names (ARNs) of the service.
        status:
          allOf:
            - $ref: '#/components/schemas/TargetGroupStatus'
            - description: The status.
        type:
          allOf:
            - $ref: '#/components/schemas/TargetGroupType'
            - description: The target group type.
        vpcIdentifier:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The ID of the VPC of the target group.
      description: Summary information about a target group.
    TargetGroupWeight:
      type: integer
      minimum: 0
      maximum: 999
    TargetStatus:
      type: string
      enum:
        - DRAINING
        - UNAVAILABLE
        - HEALTHY
        - UNHEALTHY
        - INITIAL
        - UNUSED
    TargetSummary:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The ID of the target. If the target type of the target group is <code>INSTANCE</code>, this is an instance ID. If the target type is <code>IP</code> , this is an IP address. If the target type is <code>LAMBDA</code>, this is the ARN of the Lambda function. If the target type is <code>ALB</code>, this is the ARN of the Application Load Balancer.'
        port:
          allOf:
            - $ref: '#/components/schemas/Port'
            - description: The port on which the target is listening.
        reasonCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The code for why the target status is what it is.
        status:
          allOf:
            - $ref: '#/components/schemas/TargetStatus'
            - description: '<p>The status of the target.</p> <ul> <li> <p> <code>Draining</code>: The target is being deregistered. No new connections will be sent to this target while current connections are being drained. Default draining time is 5 minutes.</p> </li> <li> <p> <code>Unavailable</code>: Health checks are unavailable for the target group.</p> </li> <li> <p> <code>Healthy</code>: The target is healthy. </p> </li> <li> <p> <code>Unhealthy</code>: The target is unhealthy.</p> </li> <li> <p> <code>Initial</code>: Initial health checks on the target are being performed.</p> </li> <li> <p> <code>Unused</code>: Target group is not used in a service.</p> </li> </ul>'
      description: Summary information about a target.
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateAccessLogSubscriptionRequest:
      type: object
      required:
        - destinationArn
      title: UpdateAccessLogSubscriptionRequest
      properties:
        destinationArn:
          allOf:
            - $ref: '#/components/schemas/AccessLogDestinationArn'
            - description: The Amazon Resource Name (ARN) of the access log destination.
    UpdateListenerRequest:
      type: object
      required:
        - defaultAction
      title: UpdateListenerRequest
      properties:
        defaultAction:
          allOf:
            - $ref: '#/components/schemas/RuleAction'
            - description: The action for the default rule.
    UpdateRuleRequest:
      type: object
      title: UpdateRuleRequest
      properties:
        action:
          allOf:
            - $ref: '#/components/schemas/RuleAction'
            - description: Information about the action for the specified listener rule.
        match:
          allOf:
            - $ref: '#/components/schemas/RuleMatch'
            - description: The rule match.
        priority:
          allOf:
            - $ref: '#/components/schemas/RulePriority'
            - description: The rule priority. A listener can't have multiple rules with the same priority.
    UpdateServiceNetworkRequest:
      type: object
      required:
        - authType
      title: UpdateServiceNetworkRequest
      properties:
        authType:
          allOf:
            - $ref: '#/components/schemas/AuthType'
            - description: '<p>The type of IAM policy.</p> <ul> <li> <p> <code>NONE</code>: The resource does not use an IAM policy. This is the default.</p> </li> <li> <p> <code>AWS_IAM</code>: The resource uses an IAM policy. When this type is used, auth is enabled and an auth policy is required.</p> </li> </ul>'
    UpdateServiceNetworkVpcAssociationRequestSecurityGroupIdsList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      minItems: 1
      maxItems: 5
    UpdateServiceNetworkVpcAssociationRequest:
      type: object
      required:
        - securityGroupIds
      title: UpdateServiceNetworkVpcAssociationRequest
      properties:
        securityGroupIds:
          allOf:
            - $ref: '#/components/schemas/UpdateServiceNetworkVpcAssociationRequestSecurityGroupIdsList'
            - description: 'The IDs of the security groups. '
    UpdateServiceRequest:
      type: object
      title: UpdateServiceRequest
      properties:
        authType:
          allOf:
            - $ref: '#/components/schemas/AuthType'
            - description: '<p>The type of IAM policy.</p> <ul> <li> <p> <code>NONE</code>: The resource does not use an IAM policy. This is the default.</p> </li> <li> <p> <code>AWS_IAM</code>: The resource uses an IAM policy. When this type is used, auth is enabled and an auth policy is required.</p> </li> </ul>'
        certificateArn:
          allOf:
            - $ref: '#/components/schemas/CertificateArn'
            - description: 'The Amazon Resource Name (ARN) of the certificate. '
    UpdateTargetGroupRequest:
      type: object
      required:
        - healthCheck
      title: UpdateTargetGroupRequest
      properties:
        healthCheck:
          allOf:
            - $ref: '#/components/schemas/HealthCheckConfig'
            - description: The health check configuration.
    WeightedTargetGroup:
      type: object
      required:
        - targetGroupIdentifier
      properties:
        targetGroupIdentifier:
          allOf:
            - $ref: '#/components/schemas/TargetGroupIdentifier'
            - description: The ID or Amazon Resource Name (ARN) of the target group.
        weight:
          allOf:
            - $ref: '#/components/schemas/TargetGroupWeight'
            - description: 'Only required if you specify multiple target groups for a forward action. The "weight" determines how requests are distributed to the target group. For example, if you specify two target groups, each with a weight of 10, each target group receives half the requests. If you specify two target groups, one with a weight of 10 and the other with a weight of 20, the target group with a weight of 20 receives twice as many requests as the other target group. If there''s only one target group specified, then the default value is 100.'
      description: Describes the weight of a target group.
security:
  - hmac: []
