openapi: 3.0.3
servers:
  - description: Mux Production Environment
    url: https://api.mux.com
info:
  contact:
    email: devex@mux.com
    name: Mux DevEx
    url: https://docs.mux.com
  description: Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
  title: Mux API
  version: v1
  x-apisguru-categories:
    - media
  x-logo:
    url: chrome://favicon/https://mux.com
  x-origin:
    - format: openapi
      url: https://docs.mux.com/api-spec.json
      version: "3.0"
  x-providerName: mux.com
security:
  - accessToken: []
tags:
  - description: |
      Mux Real-Time Video has been sunset and is unavailiable for new usage.
      Existing access will end on December 31, 2023.
      We [recommend migrating your application to our partner, LiveKit](https://livekit.io/mux-livekit).
      Please reach out to [real-time-video@mux.com](mailto:real-time-video@mux.com) if you need more help or details.


      Spaces allow developers to build real-time video and audio experiences
      into their applications via the
      [Real-Time Video product.](https://mux.com/real-time-video)


      Composited video of space sessions can be sent to live streams using broadcasts.


      To add real-time video to an application, you'll also need to integrate one of our
      [Real-Time Video SDKs](/guides/video/build-real-time-video-experiences#5-integrate-a-real-time-video-sdk).


      Learn more in the
      [Real-Time Video guides](/guides/video/build-real-time-video-experiences).
    name: Spaces
  - description: Transcription Vocabularies allows you to provide collections of phrases like proper nouns, technical jargon, and uncommon words as part of captioning workflows. When using Auto-Generated Captions, Transcription Vocabularies increase the likelihood of correct speech recognition for these words and phrases.
    name: Transcription Vocabularies
  - description: |-
      An asset refers to a piece of media content that is stored or is being live streamed through the Mux system. An asset always has a duration and one or more tracks (audio, video, and text data).

      The media content of an asset cannot be updated once created, however an asset can be used to create another asset, and can be modified within that process.
    name: Assets
  - description: |-
      A Live Stream represents a unique live stream of video being pushed to Mux. It includes configuration details (a Stream Key) for live broadcasting software/hardware and a Playback ID for playing the stream anywhere. Currently, RTMP is the only supported method of ingesting video. Use rtmp://global-live.mux.com:5222/app with the Live Stream's Stream Key for getting the video into Mux, and use https://stream.mux.com with the Live Stream's Playback ID for playback.

      A Live Stream can be used once for a specific event, or re-used forever. If you're building an application like Facebook Live or Twitch, you could create one Live Stream per user. This allows them to configure their broadcasting software once, and the Live Stream Playback ID will always show their latest stream.

      Each RTMP session creates a new video asset automatically. You can set up a webhook to be notified each time a broadcast (or Live Stream RTMP session) begins or ends with the video.live_stream.active and video.live_stream.idle events respectively. Assets that are created from a Live Stream have the same behavior as other Assets you create.

      Learn more about [how to go live in our guides](https://docs.mux.com/docs/live-streaming).
    name: Live Streams
  - description: A URL signing key is used as the secret when signing any Mux URL. Mux requires a [JSON Web Token](https://jwt.io/) as the value of the token query parameter. The token query parameter must be set for URLs that reference a playback ID with a signed playback policy.
    name: URL Signing Keys
  - description: |-
      Direct upload allows you to push assets directly to Mux storage instead of needing to go through your own first. When you create a new direct upload, we'll give you back a signed URL for a Google Cloud Storage bucket. Their storage API is S3 compatible, so whatever tool you use to upload to either GCS or S3 should work, just remember you're probably uploading large video files and should [take advantage of things like resumable or multipart uploads](https://cloud.google.com/storage/docs/json_api/v1/how-tos/resumable-upload).

      Particularly for customers that deal with a lot of user-generated content, it's common to expect quite a few abandoned uploads. To keep those abandoned uploads from cluttering up your asset lists, we don't create an asset for you until the upload is complete. Once that asset is created, you can expect all of the normal asset-related webhooks.
    name: Direct Uploads
  - description: |-
      The Delivery Usage API allows you to get delivery/streaming usage details for each asset and across all assets. Delivery usage details are aggregated every hour at the top of the hour and can be requested for a specified time window within the last 90 days starting at 12 hours prior to when the request is made.

      Assets are ordered by delivery usage starting with the one with the highest usage. Only assets with delivery usage greater than 0 seconds are returned in the response.
    name: Delivery Usage
  - description: Playback Restrictions allows you to set additional rules for playing videos. You can set the domains/hostnames allowed to play your videos. For instance, viewers can play videos embedded on the `https://example.com` website when you set the Playback Restrictions with `example.com` as an allowed domain. Any Video requests from other websites are denied.
    name: Playback Restrictions
  - description: Operations related to the manipulation of playback IDs, through which users are able to stream videos and live streams from Mux.
    name: Playback ID
  - description: An individual video view tracked by Mux Data. For the full list of properties for each view please refer to the table of data fields in the [Export raw video view data guide](https://docs.mux.com/guides/data/export-raw-video-view-data).
    name: Video Views
  - description: Playback errors are tracked and aggregated by Mux Data. Errors can be listed by the API, which contains data about the error code, message, and how often the error occurred.
    name: Errors
  - description: Deprecated, please refer to the Dimensions APIs.
    name: Filters
  - description: Dimensions are the types of metadata that can be collected for a video view. Some dimensions are collected automatically based on the playback or device, such as the viewer's Country or the device information. Other dimensions are specified by the developer when configuring a Mux Data video view such as the video title. The Dimensions APIs allow you to get a list of the supported dimensions and their values.
    name: Dimensions
  - description: Exports allow you to download the daily CSV files that are generated from the video views that occurred in the previous day. Please contact [support](mailto:support@mux.com) for information about enabling exports for your organization.
    name: Exports
  - description: |
      Historical metrics are used for tracking KPIs, diagnosing issues, and
      measuring viewers' quality of experience. Metrics are calculated using the
      video views that have been completed and are bucketed on the view end time
      for quality of experience metrics and view start time for engagement
      metrics. Historical metrics provide a large collection of dimensions that
      can be used to aggregate quality of experience based on view metadata. You
      can also easily compare experiences across viewer populations to, for
      example, find issues with specific devices or geographies.

      Historical metrics are similar but not directly comparable to the real-time
      metrics in the Real-time APIs. These metrics are aggregated for long-term
      storage historical reporting and are generated using different viewer
      populations.
    name: Metrics
  - description: |
      Monitoring metrics are used for operational monitoring of a video platform.
      The metrics are aggregated in five second intervals, across the views that
      are currently being watched. The real-time metrics' timeline, breakdown,
      and histogram representations are available via the APIs.

      Monitoring metrics are similar but not directly comparable to the historical
      metrics in the Metrics APIs. These metrics are aggregated to provide the most
      operational detail possible used for resolving operational issues.
    name: Monitoring
  - description: |
      The Mux Data Real-time API has been deprecated, please refer to the
      Mux Data `Monitoring` APIs which provide the same functionality.
    name: Real-Time
  - description: Incidents occur when an anomaly alert is triggered in Mux Data. The Incidents API provides operations related to the raising and managing of alerting incidents.
    name: Incidents
  - description: Signing keys are used to sign JSON Web Tokens (JWTs) for securing certain requests, such as secure playback URLs and access to real-time viewer counts in Mux Data. **One signing key can be used to sign multiple requests - you probably only need one active at a time.** However, you can create multiple signing keys to enable key rotation, creating a new key and deleting the old only after any existing signed requests have expired.
    name: Signing Keys
paths:
  /data/v1/dimensions:
    get:
      description: |
        List all available dimensions.

        Note: This API replaces the list-filters API call.
      operationId: list-dimensions
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  advanced:
                    - browser_version
                    - operating_system_version
                    - viewer_device_name
                    - viewer_device_model
                    - viewer_device_category
                    - viewer_device_manufacturer
                    - player_name
                    - player_version
                    - video_series
                    - video_encoding_variant
                    - experiment_name
                    - sub_property_id
                    - asn
                    - cdn
                    - viewer_connection_type
                    - view_session_id
                    - region
                    - viewer_user_id
                    - exit_before_video_start
                    - video_startup_failure
                    - preroll_ad_asset_hostname
                    - preroll_ad_tag_hostname
                    - preroll_played
                    - preroll_requested
                  basic:
                    - browser
                    - operating_system
                    - player_remote_played
                    - player_software
                    - player_software_version
                    - player_mux_plugin_name
                    - player_mux_plugin_version
                    - player_autoplay
                    - player_preload
                    - video_title
                    - video_id
                    - stream_type
                    - source_type
                    - source_hostname
                    - continent_code
                    - country
                    - player_error_code
                    - asset_id
                    - live_stream_id
                    - playback_id
                    - view_drm_type
                    - view_has_ad
                    - custom_1
                    - custom_2
                    - custom_3
                    - custom_4
                    - custom_5
                    - custom_6
                    - custom_7
                    - custom_8
                    - custom_9
                    - custom_10
                timeframe:
                  - 1610033879
                  - 1610120279
                total_row_count: 1
              schema:
                $ref: "#/components/schemas/ListDimensionsResponse"
          description: OK
      summary: List Dimensions
      tags:
        - Dimensions
  "/data/v1/dimensions/{DIMENSION_ID}":
    get:
      description: |
        Lists the values for a dimension along with a total count of related views.

        Note: This API replaces the list-filter-values API call.
      operationId: list-dimension-values
      parameters:
        - $ref: "#/components/parameters/dimension_id"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/filters"
        - $ref: "#/components/parameters/timeframe"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - total_count: 10000
                    value: FR
                  - total_count: 5000
                    value: ES
                  - total_count: 2000
                    value: PT
                  - total_count: 100
                    value: DE
                  - total_count: 1
                    value: BE
                timeframe:
                  - 1610033976
                  - 1610120376
                total_row_count: 5
              schema:
                $ref: "#/components/schemas/ListDimensionValuesResponse"
          description: OK
      summary: Lists the values for a specific dimension
      tags:
        - Dimensions
  /data/v1/errors:
    get:
      description: Returns a list of errors.
      operationId: list-errors
      parameters:
        - $ref: "#/components/parameters/filters"
        - $ref: "#/components/parameters/timeframe"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - code: 100
                    count: 1
                    description: a description for this error
                    id: 1
                    last_seen: 2021-01-08T13:42:39Z
                    message: an error message
                    notes: a helpful note
                    percentage: 30
                timeframe:
                  - 1610027061
                  - 1610113461
                total_row_count: 1
              schema:
                $ref: "#/components/schemas/ListErrorsResponse"
          description: OK
      summary: List Errors
      tags:
        - Errors
  /data/v1/exports:
    get:
      deprecated: true
      description: |
        The API has been replaced by the list-exports-views API call.

        Lists the available video view exports along with URLs to retrieve them.
      operationId: list-exports
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - https://s3.amazonaws.com/mux-data-exports/1/2021_01_01.csv.gz?...signature...
                  - https://s3.amazonaws.com/mux-data-exports/1/2021_01_02.csv.gz?...signature...
                  - https://s3.amazonaws.com/mux-data-exports/1/2021_01_03.csv.gz?...signature...
                timeframe:
                  - 1610024528
                  - 1610110928
                total_row_count: 10
              schema:
                $ref: "#/components/schemas/ListExportsResponse"
          description: OK
      summary: List property video view export links
      tags:
        - Exports
  /data/v1/exports/views:
    get:
      description: Lists the available video view exports along with URLs to retrieve them.
      operationId: list-exports-views
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - export_date: 2021-01-03
                    files:
                      - path: https://s3.amazonaws.com/mux-data-exports/1/2021_01_03.csv.gz?...signature...
                        type: csv
                        version: 2
                  - export_date: 2021-01-02
                    files:
                      - path: https://s3.amazonaws.com/mux-data-exports/1/2021_01_02.csv.gz?...signature...
                        type: csv
                        version: 2
                  - export_date: 2021-01-01
                    files:
                      - path: https://s3.amazonaws.com/mux-data-exports/1/2021_01_01.csv.gz?...signature...
                        type: csv
                        version: 2
                timeframe:
                  - 1626296941
                  - 1626383341
                total_row_count: 7
              schema:
                $ref: "#/components/schemas/ListVideoViewExportsResponse"
          description: OK
      summary: List available property view exports
      tags:
        - Exports
  /data/v1/filters:
    get:
      deprecated: true
      description: |
        The API has been replaced by the list-dimensions API call.

        Lists all the filters broken out into basic and advanced.
      operationId: list-filters
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  advanced:
                    - browser_version
                    - operating_system_version
                    - viewer_device_name
                    - viewer_device_model
                    - viewer_device_category
                    - viewer_device_manufacturer
                    - player_name
                    - player_version
                    - video_series
                    - video_encoding_variant
                    - experiment_name
                    - sub_property_id
                    - asn
                    - cdn
                    - viewer_connection_type
                    - view_session_id
                    - region
                    - viewer_user_id
                    - exit_before_video_start
                    - video_startup_failure
                    - preroll_ad_asset_hostname
                    - preroll_ad_tag_hostname
                    - preroll_played
                    - preroll_requested
                  basic:
                    - browser
                    - operating_system
                    - player_remote_played
                    - player_software
                    - player_software_version
                    - player_mux_plugin_name
                    - player_mux_plugin_version
                    - player_autoplay
                    - player_preload
                    - video_title
                    - video_id
                    - stream_type
                    - source_type
                    - source_hostname
                    - continent_code
                    - country
                    - player_error_code
                    - asset_id
                    - live_stream_id
                    - playback_id
                    - view_drm_type
                    - view_has_ad
                    - custom_1
                    - custom_2
                    - custom_3
                    - custom_4
                    - custom_5
                    - custom_6
                    - custom_7
                    - custom_8
                    - custom_9
                    - custom_10
                timeframe:
                  - 1610027251
                  - 1610113651
                total_row_count: 1
              schema:
                $ref: "#/components/schemas/ListFiltersResponse"
          description: OK
      summary: List Filters
      tags:
        - Filters
  "/data/v1/filters/{FILTER_ID}":
    get:
      deprecated: true
      description: |
        The API has been replaced by the list-dimension-values API call.

        Lists the values for a filter along with a total count of related views.
      operationId: list-filter-values
      parameters:
        - $ref: "#/components/parameters/filter_id"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/filters"
        - $ref: "#/components/parameters/timeframe"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - total_count: 5
                    value: Chrome
                timeframe:
                  - 1610028123
                  - 1610114523
                total_row_count: 1
              schema:
                $ref: "#/components/schemas/ListFilterValuesResponse"
          description: OK
      summary: Lists values for a specific filter
      tags:
        - Filters
  /data/v1/incidents:
    get:
      description: Returns a list of incidents.
      operationId: list-incidents
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/order_by"
        - $ref: "#/components/parameters/order_direction"
        - $ref: "#/components/parameters/incident_status"
        - $ref: "#/components/parameters/severity"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - affected_views: 71
                    affected_views_per_hour: 29
                    affected_views_per_hour_on_open: 75
                    breakdowns:
                      - id: abcdef
                        name: error_type_id
                        value: "697070"
                    description: Something is broken
                    error_description: No seriously, something is really really broken :(
                    id: 4u13td
                    impact: "*71 views* were affected at a rate of *29 per hour*"
                    incident_key: 5312a7c0bbb5d8353bd88602f01fe58eb15e9febac8fd2f0d8ce8f1cb138145c
                    measured_value: 5.9
                    measured_value_on_close: 0.1
                    measurement: error_rate
                    notification_rules: []
                    notifications:
                      - attempted_at: 2021-01-05T09:52:15.119040Z
                        id: 103014
                        queued_at: 2021-01-05T09:52:14.945157Z
                      - attempted_at: 2021-01-05T11:31:08.244462Z
                        id: 102025
                        queued_at: 2021-01-05T11:31:08.061924Z
                    resolved_at: 2021-01-05T11:31:04.000000Z
                    sample_size: 1000
                    sample_size_unit: views
                    severity: alert
                    started_at: 2021-01-05T09:04:46.000000Z
                    status: closed
                    threshold: 5
                  - affected_views: 132
                    affected_views_per_hour: 11
                    affected_views_per_hour_on_open: 65
                    breakdowns:
                      - id: abcdef
                        name: video_title
                        value: Layla the dog video 1337
                      - id: abcdef
                        name: error_type_id
                        value: "697065"
                    description: Something else is broken
                    error_description: "Detailed error: On no!"
                    id: rd9579
                    impact: "*132 views* were affected at a rate of *11 per hour*"
                    incident_key: fd9add7a85a013d768f4039f9e726133eddb476c2f16b22ebfe56f18f7c03b27
                    measured_value: 97
                    measured_value_on_close: 1
                    measurement: error_rate
                    notification_rules: []
                    notifications:
                      - attempted_at: 2020-12-31T09:26:19.416919Z
                        id: 102198
                        queued_at: 2020-12-31T09:26:18.987717Z
                      - attempted_at: 2020-12-31T20:23:57.279325Z
                        id: 101269
                        queued_at: 2020-12-31T20:23:56.997068Z
                    resolved_at: 2020-12-31T20:22:54.000000Z
                    sample_size: 100
                    sample_size_unit: views
                    severity: alert
                    started_at: 2020-12-31T07:56:22.000000Z
                    status: closed
                    threshold: 96
                timeframe:
                  - 1610035979
                  - 1610122379
                total_row_count: 2
              schema:
                $ref: "#/components/schemas/ListIncidentsResponse"
          description: OK
      summary: List Incidents
      tags:
        - Incidents
  "/data/v1/incidents/{INCIDENT_ID}":
    get:
      description: Returns the details of an incident.
      operationId: get-incident
      parameters:
        - $ref: "#/components/parameters/incident_id"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  affected_views: 2026
                  affected_views_per_hour: 84
                  affected_views_per_hour_on_open: 12857
                  breakdowns:
                    - id: abcdef
                      name: error_type_id
                      value: "499680"
                    - id: abcdef
                      name: video_title
                      value: Cute dogs
                  description: This video is erroring a lot
                  error_description: Error Type ID 499680
                  id: g7q2df
                  impact: "*2026 views* were affected at a rate of *84 per hour*"
                  incident_key: 045dfcbefdb68c6003aaf3bf5ed217493772519f28f14d129f95eaff159ea6d6b
                  measured_value: 100
                  measured_value_on_close: 8
                  measurement: error_rate
                  notification_rules: []
                  notifications:
                    - attempted_at: 2020-05-14T17:23:08.034662Z
                      id: 63293
                      queued_at: 2020-05-14T17:23:07.944457Z
                    - attempted_at: 2020-05-13T17:22:30.444389Z
                      id: 62212
                      queued_at: 2020-05-13T17:22:30.354828Z
                  resolved_at: 2020-05-14T17:22:30.000000Z
                  sample_size: 100
                  sample_size_unit: views
                  severity: alert
                  started_at: 2020-05-13T17:21:54.000000Z
                  status: closed
                  threshold: 100
                timeframe:
                  - 1610036456
                  - 1610122856
                total_row_count: null
              schema:
                $ref: "#/components/schemas/IncidentResponse"
          description: OK
      summary: Get an Incident
      tags:
        - Incidents
  "/data/v1/incidents/{INCIDENT_ID}/related":
    get:
      description: Returns all the incidents that seem related to a specific incident.
      operationId: list-related-incidents
      parameters:
        - $ref: "#/components/parameters/incident_id"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/order_by"
        - $ref: "#/components/parameters/order_direction"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - affected_views: 71
                    affected_views_per_hour: 29
                    affected_views_per_hour_on_open: 75
                    breakdowns:
                      - id: abcdef
                        name: error_type_id
                        value: "697070"
                    description: Something is broken
                    error_description: No seriously, something is really really broken :(
                    id: 4u13td
                    impact: "*71 views* were affected at a rate of *29 per hour*"
                    incident_key: 5312a7c0bbb5d8353bd88602f01fe58eb15e9febac8fd2f0d8ce8f1cb138145c
                    measured_value: 5.9
                    measured_value_on_close: 0.1
                    measurement: error_rate
                    notification_rules: []
                    notifications:
                      - attempted_at: 2021-01-05T09:52:15.119040Z
                        id: 103014
                        queued_at: 2021-01-05T09:52:14.945157Z
                      - attempted_at: 2021-01-05T11:31:08.244462Z
                        id: 102025
                        queued_at: 2021-01-05T11:31:08.061924Z
                    resolved_at: 2021-01-05T11:31:04.000000Z
                    sample_size: 1000
                    sample_size_unit: views
                    severity: alert
                    started_at: 2021-01-05T09:04:46.000000Z
                    status: closed
                    threshold: 5
                  - affected_views: 132
                    affected_views_per_hour: 11
                    affected_views_per_hour_on_open: 65
                    breakdowns:
                      - id: abcdef
                        name: video_title
                        value: Layla the dog video 1337
                      - id: abcdef
                        name: error_type_id
                        value: "697065"
                    description: Something else is broken
                    error_description: "Detailed error: On no!"
                    id: rd9579
                    impact: "*132 views* were affected at a rate of *11 per hour*"
                    incident_key: fd9add7a85a013d768f4039f9e726133eddb476c2f16b22ebfe56f18f7c03b27
                    measured_value: 97
                    measured_value_on_close: 1
                    measurement: error_rate
                    notification_rules: []
                    notifications:
                      - attempted_at: 2020-12-31T09:26:19.416919Z
                        id: 102198
                        queued_at: 2020-12-31T09:26:18.987717Z
                      - attempted_at: 2020-12-31T20:23:57.279325Z
                        id: 101269
                        queued_at: 2020-12-31T20:23:56.997068Z
                    resolved_at: 2020-12-31T20:22:54.000000Z
                    sample_size: 100
                    sample_size_unit: views
                    severity: alert
                    started_at: 2020-12-31T07:56:22.000000Z
                    status: closed
                    threshold: 96
                timeframe:
                  - 1610035979
                  - 1610122379
                total_row_count: 2
              schema:
                $ref: "#/components/schemas/ListRelatedIncidentsResponse"
          description: OK
      summary: List Related Incidents
      tags:
        - Incidents
  /data/v1/metrics/comparison:
    get:
      description: List all of the values across every breakdown for a specific metric.
      operationId: list-all-metric-values
      parameters:
        - $ref: "#/components/parameters/timeframe"
        - $ref: "#/components/parameters/filters"
        - $ref: "#/components/parameters/dimension"
        - $ref: "#/components/parameters/value"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - ended_views: 5
                    name: totals
                    started_views: 6
                    total_playing_time: 503934
                    unique_viewers: 6
                    view_count: 5
                    watch_time: 513934
                  - items:
                      - metric: unique_viewers
                        name: Unique Viewers
                        type: number
                        value: 6
                      - metric: playing_time
                        name: Playing Time
                        type: milliseconds
                        value: 503934
                    metric: views
                    name: Views
                    type: number
                    value: 6
                  - metric: viewer_experience_score
                    name: Overall Score
                    type: score
                    value: 0.7803472280502319
                  - items:
                      - metric: playback_failure_percentage
                        name: Playback Failure Percentage
                        type: percentage
                        value: 0.2
                      - metric: video_startup_failure_percentage
                        name: Video Startup Failure Percentage
                        type: percentage
                        value: 0
                    metric: playback_failure_score
                    name: Playback Failure Score
                    type: score
                    value: 0.8
                  - items:
                      - measurement: median
                        metric: video_startup_time
                        name: Video Startup Time (median)
                        type: milliseconds
                        value: 4
                      - measurement: 95th
                        metric: video_startup_time
                        name: Video Startup Time (95th %)
                        type: milliseconds
                        value: 9
                      - measurement: median
                        metric: player_startup_time
                        name: Player Startup Time (median)
                        type: milliseconds
                        value: 52.5625
                      - measurement: 95th
                        metric: player_startup_time
                        name: Player Startup Time (95th %)
                        type: milliseconds
                        value: 60.0625
                      - measurement: median
                        metric: page_load_time
                        name: Page Load Time (median)
                        type: milliseconds
                        value: 122.37890625
                      - measurement: 95th
                        metric: page_load_time
                        name: Page Load Time (95th %)
                        type: milliseconds
                        value: 264.0625
                      - measurement: median
                        metric: aggregate_startup_time
                        name: Aggregate Startup Time (median)
                        type: milliseconds
                        value: 182.25
                      - measurement: 95th
                        metric: aggregate_startup_time
                        name: Aggregate Startup Time (95th %)
                        type: milliseconds
                        value: 319.515625
                      - metric: seek_latency
                        name: Seek Latency
                        type: milliseconds
                        value: 3042
                      - metric: exits_before_video_start
                        name: Exits Before Video Start
                        type: percentage
                        value: 0
                    metric: startup_time_score
                    name: Startup Time Score
                    type: score
                    value: 0.9991008877754212
                  - items:
                      - metric: rebuffer_percentage
                        name: Rebuffer Percentage
                        type: percentage
                        value: 0.0005564916895943838
                      - metric: rebuffer_frequency
                        name: Rebuffer Frequency
                        type: per_minute
                        value: 0.11674650830651406
                      - measurement: median
                        metric: rebuffer_duration
                        name: Rebuffer Duration (median)
                        type: milliseconds
                        value: 0
                      - measurement: 95th
                        metric: rebuffer_duration
                        name: Rebuffer Duration (95th %)
                        type: milliseconds
                        value: 256
                      - measurement: median
                        metric: rebuffer_count
                        name: Rebuffer Count (median)
                        type: number
                        value: 0
                      - measurement: 95th
                        metric: rebuffer_count
                        name: Rebuffer Count (95th %)
                        type: number
                        value: 1
                    metric: rebuffer_score
                    name: Rebuffer Score
                    type: score
                    value: 0.9523247838020324
                  - items:
                      - measurement: median
                        metric: upscale_percentage
                        name: Upscale Percentage (median)
                        type: percentage
                        value: 0
                      - measurement: 95th
                        metric: upscale_percentage
                        name: Upscale Percentage (95th %)
                        type: percentage
                        value: 0
                      - measurement: avg
                        metric: upscale_percentage
                        name: Upscale Percentage (average)
                        type: percentage
                        value: 0
                      - measurement: median
                        metric: downscale_percentage
                        name: Downscale Percentage (median)
                        type: percentage
                        value: 0.007
                      - measurement: 95th
                        metric: downscale_percentage
                        name: Downscale Percentage (95th %)
                        type: percentage
                        value: 0.449
                      - measurement: avg
                        metric: downscale_percentage
                        name: Downscale Percentage (average)
                        type: percentage
                        value: 0.11813909473676262
                      - measurement: median
                        metric: max_upscale_percentage
                        name: Max Upscale Percentage (median)
                        type: percentage
                        value: 0
                      - measurement: 95th
                        metric: max_upscale_percentage
                        name: Max Upscale Percentage (95th %)
                        type: percentage
                        value: 0
                      - measurement: median
                        metric: max_downscale_percentage
                        name: Max Downscale Percentage (median)
                        type: percentage
                        value: 0.007
                      - measurement: 95th
                        metric: max_downscale_percentage
                        name: Max Downscale Percentage (95th %)
                        type: percentage
                        value: 0.449
                      - measurement: median
                        metric: weighted_average_bitrate
                        name: Weighted Average Bitrate (median)
                        type: mbps
                        value: 851582.91015625
                      - measurement: 95th
                        metric: weighted_average_bitrate
                        name: Weighted Average Bitrate (95th %)
                        type: mbps
                        value: 697016.265625
                      - measurement: median
                        metric: live_stream_latency
                        name: Live Stream Latency (median)
                        type: milliseconds
                        value: 2195
                      - measurement: 95th
                        metric: live_stream_latency
                        name: Live Stream Latency (95th %)
                        type: milliseconds
                        value: 3523
                    metric: video_quality_score
                    name: Video Quality Score
                    type: score
                    value: 1
                timeframe:
                  - 1610029906
                  - 1610116306
                total_row_count: 1
              schema:
                $ref: "#/components/schemas/ListAllMetricValuesResponse"
          description: OK
      summary: List all metric values
      tags:
        - Metrics
  "/data/v1/metrics/{METRIC_ID}/breakdown":
    get:
      description: List the breakdown values for a specific metric.
      operationId: list-breakdown-values
      parameters:
        - $ref: "#/components/parameters/metric_id"
        - $ref: "#/components/parameters/group_by"
        - $ref: "#/components/parameters/measurement"
        - $ref: "#/components/parameters/filters"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/order_by"
        - $ref: "#/components/parameters/order_direction"
        - $ref: "#/components/parameters/timeframe"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - field: US
                    negative_impact: 1
                    total_playing_time: 413934
                    total_watch_time: 513934
                    value: 4
                    views: 5
                meta:
                  aggregation: view_end
                timeframe:
                  - 1610028298
                  - 1610114698
                total_row_count: 1
              schema:
                $ref: "#/components/schemas/ListBreakdownValuesResponse"
          description: OK
      summary: List breakdown values
      tags:
        - Metrics
  "/data/v1/metrics/{METRIC_ID}/insights":
    get:
      description: Returns a list of insights for a metric. These are the worst performing values across all breakdowns sorted by how much they negatively impact a specific metric.
      operationId: list-insights
      parameters:
        - $ref: "#/components/parameters/metric_id"
        - $ref: "#/components/parameters/measurement"
        - $ref: "#/components/parameters/order_direction_deprecated"
        - $ref: "#/components/parameters/timeframe"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - filter_column: video_title
                    filter_value: ""
                    metric: 9
                    negative_impact_score: -5
                    total_playing_time: 341144
                    total_views: 1
                    total_watch_time: 351144
                  - filter_column: country
                    filter_value: US
                    metric: 4
                    negative_impact_score: 0
                    total_views: 5
                    total_watch_time: 513934
                meta:
                  aggregation: view_end
                timeframe:
                  - 1610029610
                  - 1610116010
                total_row_count: 18
              schema:
                $ref: "#/components/schemas/ListInsightsResponse"
          description: OK
      summary: List Insights
      tags:
        - Metrics
  "/data/v1/metrics/{METRIC_ID}/overall":
    get:
      description: Returns the overall value for a specific metric, as well as the total view count, watch time, and the Mux Global metric value for the metric.
      operationId: get-overall-values
      parameters:
        - $ref: "#/components/parameters/metric_id"
        - $ref: "#/components/parameters/timeframe"
        - $ref: "#/components/parameters/filters"
        - $ref: "#/components/parameters/measurement"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  global_value: 1169.1832095168065
                  total_playing_time: 413934
                  total_views: 5
                  total_watch_time: 513934
                  value: 4
                meta:
                  aggregation: view_end
                timeframe:
                  - 1610029525
                  - 1610115925
                total_row_count: 1
              schema:
                $ref: "#/components/schemas/GetOverallValuesResponse"
          description: OK
      summary: Get Overall values
      tags:
        - Metrics
  "/data/v1/metrics/{METRIC_ID}/timeseries":
    get:
      description: |
        Returns timeseries data for a specific metric.

        Each interval represented in the data array contains an array with the following values:
          * the first element is the interval time
          * the second element is the calculated metric value
          * the third element is the number of views in the interval that have a valid metric value
      operationId: get-metric-timeseries-data
      parameters:
        - $ref: "#/components/parameters/metric_id"
        - $ref: "#/components/parameters/timeframe"
        - $ref: "#/components/parameters/filters"
        - $ref: "#/components/parameters/measurement"
        - $ref: "#/components/parameters/order_direction"
        - $ref: "#/components/parameters/timeseries_group_by"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - - 2021-01-07T14:00:00Z
                    - "0.8743536882994202"
                    - "154240"
                  - - 2021-01-07T15:00:00Z
                    - "0.8929105055911401"
                    - "156056"
                meta:
                  aggregation: view_end
                timeframe:
                  - 1610029711
                  - 1610116111
                total_row_count: 2
              schema:
                $ref: "#/components/schemas/GetMetricTimeseriesDataResponse"
          description: OK
      summary: Get metric timeseries data
      tags:
        - Metrics
  /data/v1/monitoring/dimensions:
    get:
      description: Lists available monitoring dimensions.
      operationId: list-monitoring-dimensions
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - display_name: ASN
                    name: asn
                  - display_name: CDN
                    name: cdn
                  - display_name: Country
                    name: country
                  - display_name: Operating system
                    name: operating_system
                  - display_name: Player name
                    name: player_name
                  - display_name: Region / State
                    name: region
                  - display_name: Stream type
                    name: stream_type
                  - display_name: Sub property ID
                    name: sub_property_id
                  - display_name: Video series
                    name: video_series
                  - display_name: Video title
                    name: video_title
                  - display_name: View has ad
                    name: view_has_ad
                timeframe:
                  - 1610034823
                  - 1610121223
                total_row_count: 1
              schema:
                $ref: "#/components/schemas/ListMonitoringDimensionsResponse"
          description: OK
      summary: List Monitoring Dimensions
      tags:
        - Monitoring
  /data/v1/monitoring/metrics:
    get:
      description: Lists available monitoring metrics.
      operationId: list-monitoring-metrics
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - display_name: Current Average Bitrate
                    name: current-average-bitrate
                  - display_name: Current Concurrent Viewers (CCV)
                    name: current-concurrent-viewers
                  - display_name: Current Rebuffering Percentage
                    name: current-rebuffering-percentage
                  - display_name: Exits Before Video Start
                    name: exits-before-video-start
                  - display_name: Playback Failure Percentage
                    name: playback-failure-percentage
                  - display_name: Video Startup Failure Percentage
                    name: video-startup-failure-percentage
                  - display_name: Video Startup Time
                    name: video-startup-time
                timeframe:
                  - 1610034858
                  - 1610121258
                total_row_count: 1
              schema:
                $ref: "#/components/schemas/ListMonitoringMetricsResponse"
          description: OK
      summary: List Monitoring Metrics
      tags:
        - Monitoring
  "/data/v1/monitoring/metrics/{MONITORING_HISTOGRAM_METRIC_ID}/histogram-timeseries":
    get:
      description: Gets histogram timeseries information for a specific metric.
      operationId: get-monitoring-histogram-timeseries
      parameters:
        - $ref: "#/components/parameters/monitoring_histogram_metric_id"
        - $ref: "#/components/parameters/monitoring_filters"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - average: 5298.1612903225805
                    bucket_values:
                      - count: 3
                        percentage: 0.0967741935483871
                      - count: 0
                        percentage: 0
                      - count: 0
                        percentage: 0
                      - count: 1
                        percentage: 0.03225806451612903
                      - count: 16
                        percentage: 0.5161290322580645
                      - count: 7
                        percentage: 0.22580645161290322
                      - count: 4
                        percentage: 0.12903225806451613
                    max_percentage: 0.5161290322580645
                    median: 4463
                    p95: 14834
                    sum: 31
                    timestamp: 2021-01-08T15:30:00Z
                  - average: 3828.4146341463415
                    bucket_values:
                      - count: 5
                        percentage: 0.12195121951219512
                      - count: 0
                        percentage: 0
                      - count: 0
                        percentage: 0
                      - count: 4
                        percentage: 0.0975609756097561
                      - count: 18
                        percentage: 0.43902439024390244
                      - count: 12
                        percentage: 0.2926829268292683
                      - count: 2
                        percentage: 0.04878048780487805
                    max_percentage: 0.43902439024390244
                    median: 2625
                    p95: 7378
                    sum: 41
                    timestamp: 2021-01-08T15:31:00Z
                meta:
                  bucket_unit: milliseconds
                  buckets:
                    - end: 100
                      start: 0
                    - end: 500
                      start: 100
                    - end: 1000
                      start: 500
                    - end: 2000
                      start: 1000
                    - end: 5000
                      start: 2000
                    - end: 10000
                      start: 5000
                    - end: 15000
                      start: 10000
                timeframe:
                  - 1610119800
                  - 1610121540
                total_row_count: 1
              schema:
                $ref: "#/components/schemas/GetMonitoringHistogramTimeseriesResponse"
          description: OK
      summary: Get Monitoring Histogram Timeseries
      tags:
        - Monitoring
  "/data/v1/monitoring/metrics/{MONITORING_METRIC_ID}/breakdown":
    get:
      description: Gets breakdown information for a specific dimension and metric along with the number of concurrent viewers and negative impact score.
      operationId: get-monitoring-breakdown
      parameters:
        - $ref: "#/components/parameters/monitoring_metric_id"
        - $ref: "#/components/parameters/monitoring_dimension"
        - $ref: "#/components/parameters/timestamp"
        - $ref: "#/components/parameters/monitoring_filters"
        - $ref: "#/components/parameters/order_by"
        - $ref: "#/components/parameters/order_direction"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - concurrent_viewers: 2680
                    metric_value: 0.008195679660675846
                    negative_impact: 1
                    value: FR
                  - concurrent_viewers: 36
                    metric_value: 0.010317417106767573
                    negative_impact: 4
                    value: ES
                  - concurrent_viewers: 30
                    metric_value: 0.06408818534303201
                    negative_impact: 2
                    value: RE
                  - concurrent_viewers: 26
                    metric_value: 0.008232510579858339
                    negative_impact: 7
                    value: GB
                  - concurrent_viewers: 10
                    metric_value: 0
                    negative_impact: 26
                    value: BE
                timeframe:
                  - 1610121421
                  - 1610121421
                total_row_count: 1
              schema:
                $ref: "#/components/schemas/GetMonitoringBreakdownResponse"
          description: OK
      summary: Get Monitoring Breakdown
      tags:
        - Monitoring
  "/data/v1/monitoring/metrics/{MONITORING_METRIC_ID}/breakdown-timeseries":
    get:
      description: Gets timeseries of breakdown information for a specific dimension and metric. Each datapoint in the response represents 5 seconds worth of data.
      operationId: get-monitoring-breakdown-timeseries
      parameters:
        - $ref: "#/components/parameters/monitoring_metric_id"
        - $ref: "#/components/parameters/monitoring_dimension"
        - $ref: "#/components/parameters/monitoring_timeseries_timeframe"
        - $ref: "#/components/parameters/monitoring_filters"
        - $ref: "#/components/parameters/monitoring_timeseries_limit"
        - $ref: "#/components/parameters/order_by"
        - $ref: "#/components/parameters/order_direction"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - date: 2023-05-18T19:36:30Z
                    values:
                      - concurrent_viewers: 2680
                        metric_value: 0.008195679660675846
                        value: FR
                      - concurrent_viewers: 36
                        metric_value: 0.010317417106767573
                        value: ES
                      - concurrent_viewers: 26
                        metric_value: 0.008232510579858339
                        value: GB
                  - date: 2023-05-18T19:36:35Z
                    values:
                      - concurrent_viewers: 2690
                        metric_value: 0.00724579660675846
                        value: FR
                      - concurrent_viewers: 35
                        metric_value: 0.014317417106767573
                        value: ES
                      - concurrent_viewers: 24
                        metric_value: 0.007232510579851874
                        value: GB
                timeframe:
                  - 1684438590
                  - 1684438600
                total_row_count: 2
              schema:
                $ref: "#/components/schemas/GetMonitoringBreakdownTimeseriesResponse"
          description: OK
      summary: Get Monitoring Breakdown Timeseries
      tags:
        - Monitoring
  "/data/v1/monitoring/metrics/{MONITORING_METRIC_ID}/timeseries":
    get:
      description: Gets Time series information for a specific metric along with the number of concurrent viewers.
      operationId: get-monitoring-timeseries
      parameters:
        - $ref: "#/components/parameters/monitoring_metric_id"
        - $ref: "#/components/parameters/monitoring_filters"
        - $ref: "#/components/parameters/monitoring_timeseries_timestamp"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - concurrent_viewers: 2790
                    date: 2021-01-08T15:31:20Z
                    value: 2790
                  - concurrent_viewers: 2788
                    date: 2021-01-08T15:31:25Z
                    value: 2788
                  - concurrent_viewers: 2791
                    date: 2021-01-08T15:31:30Z
                    value: 2791
                  - concurrent_viewers: 2791
                    date: 2021-01-08T15:31:35Z
                    value: 2791
                  - concurrent_viewers: 2792
                    date: 2021-01-08T15:31:40Z
                    value: 2792
                timeframe:
                  - 1610119880
                  - 1610121675
                total_row_count: 1
              schema:
                $ref: "#/components/schemas/GetMonitoringTimeseriesResponse"
          description: OK
      summary: Get Monitoring Timeseries
      tags:
        - Monitoring
  /data/v1/realtime/dimensions:
    get:
      deprecated: true
      description: Lists available real-time dimensions. This API is now deprecated, please use the `List Monitoring Dimensions` API.
      operationId: list-realtime-dimensions
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - display_name: ASN
                    name: asn
                  - display_name: CDN
                    name: cdn
                  - display_name: Country
                    name: country
                  - display_name: Operating system
                    name: operating_system
                  - display_name: Player name
                    name: player_name
                  - display_name: Region / State
                    name: region
                  - display_name: Stream type
                    name: stream_type
                  - display_name: Sub property ID
                    name: sub_property_id
                  - display_name: Video series
                    name: video_series
                  - display_name: Video title
                    name: video_title
                timeframe:
                  - 1610034823
                  - 1610121223
                total_row_count: 1
              schema:
                $ref: "#/components/schemas/ListRealTimeDimensionsResponse"
          description: OK
      summary: List Real-Time Dimensions
      tags:
        - Real-Time
  /data/v1/realtime/metrics:
    get:
      deprecated: true
      description: Lists available real-time metrics. This API is now deprecated, please use the `List Monitoring Metrics` API.
      operationId: list-realtime-metrics
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - display_name: Current Average Bitrate
                    name: current-average-bitrate
                  - display_name: Current Concurrent Viewers (CCV)
                    name: current-concurrent-viewers
                  - display_name: Current Rebuffering Percentage
                    name: current-rebuffering-percentage
                  - display_name: Exits Before Video Start
                    name: exits-before-video-start
                  - display_name: Playback Failure Percentage
                    name: playback-failure-percentage
                  - display_name: Video Startup Time
                    name: video-startup-time
                timeframe:
                  - 1610034858
                  - 1610121258
                total_row_count: 1
              schema:
                $ref: "#/components/schemas/ListRealTimeMetricsResponse"
          description: OK
      summary: List Real-Time Metrics
      tags:
        - Real-Time
  "/data/v1/realtime/metrics/{REALTIME_HISTOGRAM_METRIC_ID}/histogram-timeseries":
    get:
      deprecated: true
      description: Gets histogram timeseries information for a specific metric. This API is now deprecated, please use the `Get Monitoring Histogram Timeseries` API.
      operationId: get-realtime-histogram-timeseries
      parameters:
        - $ref: "#/components/parameters/realtime_histogram_metric_id"
        - $ref: "#/components/parameters/monitoring_filters"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - average: 5298.1612903225805
                    bucket_values:
                      - count: 3
                        percentage: 0.0967741935483871
                      - count: 0
                        percentage: 0
                      - count: 0
                        percentage: 0
                      - count: 1
                        percentage: 0.03225806451612903
                      - count: 16
                        percentage: 0.5161290322580645
                      - count: 7
                        percentage: 0.22580645161290322
                      - count: 4
                        percentage: 0.12903225806451613
                    max_percentage: 0.5161290322580645
                    median: 4463
                    p95: 14834
                    sum: 31
                    timestamp: 2021-01-08T15:30:00Z
                  - average: 3828.4146341463415
                    bucket_values:
                      - count: 5
                        percentage: 0.12195121951219512
                      - count: 0
                        percentage: 0
                      - count: 0
                        percentage: 0
                      - count: 4
                        percentage: 0.0975609756097561
                      - count: 18
                        percentage: 0.43902439024390244
                      - count: 12
                        percentage: 0.2926829268292683
                      - count: 2
                        percentage: 0.04878048780487805
                    max_percentage: 0.43902439024390244
                    median: 2625
                    p95: 7378
                    sum: 41
                    timestamp: 2021-01-08T15:31:00Z
                meta:
                  bucket_unit: milliseconds
                  buckets:
                    - end: 100
                      start: 0
                    - end: 500
                      start: 100
                    - end: 1000
                      start: 500
                    - end: 2000
                      start: 1000
                    - end: 5000
                      start: 2000
                    - end: 10000
                      start: 5000
                    - end: 15000
                      start: 10000
                timeframe:
                  - 1610119800
                  - 1610121540
                total_row_count: 1
              schema:
                $ref: "#/components/schemas/GetRealTimeHistogramTimeseriesResponse"
          description: OK
      summary: Get Real-Time Histogram Timeseries
      tags:
        - Real-Time
  "/data/v1/realtime/metrics/{REALTIME_METRIC_ID}/breakdown":
    get:
      deprecated: true
      description: Gets breakdown information for a specific dimension and metric along with the number of concurrent viewers and negative impact score. This API is now deprecated, please use the `Get Monitoring Breakdown` API.
      operationId: get-realtime-breakdown
      parameters:
        - $ref: "#/components/parameters/realtime_metric_id"
        - $ref: "#/components/parameters/realtime_dimension"
        - $ref: "#/components/parameters/timestamp"
        - $ref: "#/components/parameters/monitoring_filters"
        - $ref: "#/components/parameters/order_by"
        - $ref: "#/components/parameters/order_direction"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - concurrent_viewers: 2680
                    metric_value: 0.008195679660675846
                    negative_impact: 1
                    value: FR
                  - concurrent_viewers: 36
                    metric_value: 0.010317417106767573
                    negative_impact: 4
                    value: ES
                  - concurrent_viewers: 30
                    metric_value: 0.06408818534303201
                    negative_impact: 2
                    value: RE
                  - concurrent_viewers: 26
                    metric_value: 0.008232510579858339
                    negative_impact: 7
                    value: GB
                  - concurrent_viewers: 10
                    metric_value: 0
                    negative_impact: 26
                    value: BE
                timeframe:
                  - 1610121421
                  - 1610121421
                total_row_count: 1
              schema:
                $ref: "#/components/schemas/GetRealTimeBreakdownResponse"
          description: OK
      summary: Get Real-Time Breakdown
      tags:
        - Real-Time
  "/data/v1/realtime/metrics/{REALTIME_METRIC_ID}/timeseries":
    get:
      deprecated: true
      description: Gets Time series information for a specific metric along with the number of concurrent viewers. This API is now deprecated, please use the `Get Monitoring Timeseries` API.
      operationId: get-realtime-timeseries
      parameters:
        - $ref: "#/components/parameters/realtime_metric_id"
        - $ref: "#/components/parameters/monitoring_filters"
        - $ref: "#/components/parameters/monitoring_timeseries_timestamp"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - concurrent_viewers: 2790
                    date: 2021-01-08T15:31:20Z
                    value: 2790
                  - concurrent_viewers: 2788
                    date: 2021-01-08T15:31:25Z
                    value: 2788
                  - concurrent_viewers: 2791
                    date: 2021-01-08T15:31:30Z
                    value: 2791
                  - concurrent_viewers: 2791
                    date: 2021-01-08T15:31:35Z
                    value: 2791
                  - concurrent_viewers: 2792
                    date: 2021-01-08T15:31:40Z
                    value: 2792
                timeframe:
                  - 1610119880
                  - 1610121675
                total_row_count: 1
              schema:
                $ref: "#/components/schemas/GetRealTimeTimeseriesResponse"
          description: OK
      summary: Get Real-Time Timeseries
      tags:
        - Real-Time
  /data/v1/video-views:
    get:
      description: Returns a list of video views which match the filters and have a `view_end` within the specified timeframe.
      operationId: list-video-views
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/viewer_id"
        - $ref: "#/components/parameters/error_id"
        - $ref: "#/components/parameters/order_direction"
        - $ref: "#/components/parameters/filters"
        - $ref: "#/components/parameters/timeframe"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - country_code: US
                    error_type_id: 1
                    id: JpA81zBfGaGZ85C6aGF3bptyD4CKwpdNgamr
                    player_error_code: null
                    player_error_message: null
                    total_row_count: 4
                    video_title: my-title
                    view_end: 2021-01-07T20:46:04Z
                    view_start: 2021-01-07T20:34:06Z
                    viewer_application_name: Chrome
                    viewer_os_family: OS X
                  - country_code: US
                    error_type_id: 1
                    id: jPVLR5giYMrLYbHM88Tkn3cM3qCRDk0jL114
                    player_error_code: null
                    player_error_message: null
                    total_row_count: 4
                    video_title: ""
                    view_end: 2021-01-07T20:34:03Z
                    view_start: 2021-01-07T20:21:53Z
                    viewer_application_name: Chrome
                    viewer_os_family: OS X
                  - country_code: US
                    error_type_id: 1
                    id: pdLDVKBuPZJJ9YsPVmtmB9FG9gsWBWMmYar4
                    player_error_code: "1001"
                    player_error_message: this is an error message from the player
                    total_row_count: 4
                    video_title: Video Test Title 12.14.20
                    view_end: 2021-01-07T15:17:06Z
                    view_start: 2021-01-07T15:16:06Z
                    viewer_application_name: Chrome
                    viewer_os_family: OS X
                  - country_code: US
                    error_type_id: 1
                    id: zbZPowWtD3z54jcGMLCJJpF79zCjB03bV7o8
                    player_error_code: null
                    player_error_message: null
                    total_row_count: 4
                    video_title: Video Test Title 12.14.20
                    view_end: 2021-01-07T15:15:17Z
                    view_start: 2021-01-07T15:15:09Z
                    viewer_application_name: Chrome
                    viewer_os_family: OS X
                timeframe:
                  - 1610025789
                  - 1610112189
                total_row_count: 4
              schema:
                $ref: "#/components/schemas/ListVideoViewsResponse"
          description: OK
      summary: List Video Views
      tags:
        - Video Views
  "/data/v1/video-views/{VIDEO_VIEW_ID}":
    get:
      description: Returns the details of a video view.
      operationId: get-video-view
      parameters:
        - $ref: "#/components/parameters/video_view_id"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  asn: 11427
                  asset_id: rmp7fvw5lPD01l8PZ2aN74js84XrTWxHy
                  city: Austin
                  country_name: United States
                  events:
                    - event_time: 1643216898061
                      name: playerready
                      playback_time: 0
                      viewer_time: 1643216891851
                    - event_time: 1643216898101
                      name: viewstart
                      playback_time: 0
                      viewer_time: 1643216891853
                  exit_before_video_start: false
                  player_error_code: "1001"
                  player_error_message: error from player
                  player_mux_plugin_name: apple-mux
                  player_source_host_name: stream.mux.com
                  player_source_url: https://stream.mux.com/ax9qwyTIaUDLdmhesYDKir5kfE4Ve215.m3u8
                  video_id: rmp7fvw5lPD01l8PZ2aN74js84XrTWxHy
                  view_end: 2022-01-26T17:56:12Z
                  view_id: 8d00a0ca-8456-4e55-9ff8-dc501814a6b1
                  view_max_downscale_percentage: "0.32222223"
                  view_max_playhead_position: "41126"
                  view_max_upscale_percentage: "0"
                  view_playing_time: "58134"
                  view_start: 2022-01-26T17:08:18Z
                  view_total_content_playback_time: 37521
                  viewer_device_model: iPhone10,4
                  viewer_os_version: "15.1"
                  weighted_average_bitrate: 697078
                timeframe:
                  - 1643133378
                  - 1643219778
                total_row_count: null
              schema:
                $ref: "#/components/schemas/VideoViewResponse"
          description: OK
      summary: Get a Video View
      tags:
        - Video Views
  /system/v1/signing-keys:
    get:
      description: Returns a list of signing keys.
      operationId: list-signing-keys
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - created_at: "1610108345"
                    id: vI5KTQ78ohYriuvWKHY6COtZWXexHGLllxksOdZuya8
                  - created_at: "1608632647"
                    id: jc6lJiCLMjyC202EXtRQ644sShzDv6x5tWJrbvUFpvmo
              schema:
                $ref: "#/components/schemas/ListSigningKeysResponse"
          description: OK
      summary: List signing keys
      tags:
        - Signing Keys
    post:
      description: Creates a new signing key pair. When creating a new signing key, the API will generate a 2048-bit RSA key-pair and return the private key and a generated key-id; the public key will be stored at Mux to validate signed tokens.
      operationId: create-signing-key
      responses:
        "201":
          content:
            application/json:
              example:
                data:
                  created_at: "1610108345"
                  id: vI5KTQ78ohYriuvWKHY6COtZWXexHGLllxksOdZuya8
                  private_key: abcd123=
              schema:
                $ref: "#/components/schemas/SigningKeyResponse"
          description: Created
      summary: Create a signing key
      tags:
        - Signing Keys
  "/system/v1/signing-keys/{SIGNING_KEY_ID}":
    delete:
      description: Deletes an existing signing key. Use with caution, as this will invalidate any existing signatures and no JWTs can be signed using the key again.
      operationId: delete-signing-key
      parameters:
        - $ref: "#/components/parameters/signing_key_id"
      responses:
        "204":
          description: No Content
      summary: Delete a signing key
      tags:
        - Signing Keys
    get:
      description: |
        Retrieves the details of a signing key that has previously
        been created. Supply the unique signing key ID that was returned from your
        previous request, and Mux will return the corresponding signing key information.
        **The private key is not returned in this response.**
      operationId: get-signing-key
      parameters:
        - $ref: "#/components/parameters/signing_key_id"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  created_at: "1608632647"
                  id: jc6lJiCLMjyC202EXtRQ644sShzDv6x5tWJrbvUFpvmo
              schema:
                $ref: "#/components/schemas/SigningKeyResponse"
          description: OK
      summary: Retrieve a signing key
      tags:
        - Signing Keys
  /video/v1/assets:
    get:
      description: List all Mux assets.
      operationId: list-assets
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/list_asset_live_stream_id"
        - $ref: "#/components/parameters/list_asset_upload_id"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - aspect_ratio: 12:5
                    created_at: "1609869152"
                    duration: 734.25
                    id: 8jd7M77xQgf2NzuocJRPYdSdEfY5dLlcRwFARtgQqU4
                    master_access: none
                    max_stored_frame_rate: 24
                    max_stored_resolution: HD
                    mp4_support: none
                    playback_ids:
                      - id: 85g23gYz7NmQu02YsY81ihuod6cZMxCp017ZrfglyLCKc
                        policy: public
                    resolution_tier: 1080p
                    status: ready
                    tracks:
                      - duration: 734.166667
                        id: HK01Bq7FrEQmIu3QpRiZZ98HQOOZjm6BYyg17eEunlyo
                        max_frame_rate: 24
                        max_height: 800
                        max_width: 1920
                        type: video
                      - duration: 734.143991
                        id: nNKHJqw2G9cE019AoK16CJr3O27gGnbtW4w525hJWqWw
                        max_channels: 2
                        type: audio
                  - aspect_ratio: 16:9
                    created_at: "1609868768"
                    duration: 23.857167
                    id: lJ4bGGsp7ZlPf02nMg015W02iHQLN9XnuuLRBsPS00xqd68
                    master_access: none
                    max_stored_frame_rate: 29.97
                    max_stored_resolution: HD
                    mp4_support: none
                    playback_ids:
                      - id: vAFLI2eKFFicXX00iHBS2vqt5JjJGg5HV6fQ4Xijgt1I
                        policy: public
                    resolution_tier: 1080p
                    status: ready
                    tracks:
                      - duration: 23.8238
                        id: RiyQPM31a1SPtfI802bEP2zD02F5FQVNL801FRHeE5t01G4
                        max_frame_rate: 29.97
                        max_height: 1080
                        max_width: 1920
                        type: video
                      - duration: 23.823792
                        id: LvINTciHVoC017knMCH01y9pSi5OrDLCRaBPNDAoNJcmg
                        max_channels: 2
                        type: audio
              schema:
                $ref: "#/components/schemas/ListAssetsResponse"
          description: OK
      summary: List assets
      tags:
        - Assets
    post:
      description: Create a new Mux Video asset.
      operationId: create-asset
      parameters: []
      requestBody:
        content:
          application/json:
            example:
              input:
                - url: https://muxed.s3.amazonaws.com/leds.mp4
              playback_policy:
                - public
            schema:
              $ref: "#/components/schemas/CreateAssetRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                data:
                  created_at: "1607452572"
                  id: SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv
                  master_access: none
                  mp4_support: none
                  playback_ids:
                    - id: uNbxnGLKJ00yfbijDO8COxTOyVKT01xpxW
                      policy: public
                  status: preparing
              schema:
                $ref: "#/components/schemas/AssetResponse"
          description: Asset Created
      summary: Create an asset
      tags:
        - Assets
  "/video/v1/assets/{ASSET_ID}":
    delete:
      description: Deletes a video asset and all its data.
      operationId: delete-asset
      parameters:
        - $ref: "#/components/parameters/asset_id"
      responses:
        "204":
          description: No Content
      summary: Delete an asset
      tags:
        - Assets
    get:
      description: Retrieves the details of an asset that has previously been created. Supply the unique asset ID that was returned from your previous request, and Mux will return the corresponding asset information. The same information is returned when creating an asset.
      operationId: get-asset
      parameters:
        - $ref: "#/components/parameters/asset_id"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  aspect_ratio: 16:9
                  created_at: "1609868768"
                  duration: 23.857167
                  id: lJ4bGGsp7ZlPf02nMg015W02iHQLN9XnuuLRBsPS00xqd68
                  master_access: none
                  max_stored_frame_rate: 29.97
                  max_stored_resolution: HD
                  mp4_support: none
                  playback_ids:
                    - id: vAFLI2eKFFicXX00iHBS2vqt5JjJGg5HV6fQ4Xijgt1I
                      policy: public
                  resolution_tier: 1080p
                  status: ready
                  tracks:
                    - duration: 23.8238
                      id: RiyQPM31a1SPtfI802bEP2zD02F5FQVNL801FRHeE5t01G4
                      max_frame_rate: 29.97
                      max_height: 1080
                      max_width: 1920
                      type: video
                    - duration: 23.823792
                      id: LvINTciHVoC017knMCH01y9pSi5OrDLCRaBPNDAoNJcmg
                      max_channels: 2
                      type: audio
              schema:
                $ref: "#/components/schemas/AssetResponse"
          description: OK
      summary: Retrieve an asset
      tags:
        - Assets
    patch:
      description: Updates the details of an already-created Asset with the provided Asset ID. This currently supports only the `passthrough` field.
      operationId: update-asset
      parameters:
        - $ref: "#/components/parameters/asset_id"
      requestBody:
        content:
          application/json:
            example:
              passthrough: Example
            schema:
              $ref: "#/components/schemas/UpdateAssetRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  aspect_ratio: 16:9
                  created_at: "1609868768"
                  duration: 23.857167
                  id: lJ4bGGsp7ZlPf02nMg015W02iHQLN9XnuuLRBsPS00xqd68
                  master_access: none
                  max_stored_frame_rate: 29.97
                  max_stored_resolution: HD
                  mp4_support: none
                  passthrough: Example
                  playback_ids:
                    - id: vAFLI2eKFFicXX00iHBS2vqt5JjJGg5HV6fQ4Xijgt1I
                      policy: public
                  resolution_tier: 1080p
                  status: ready
                  tracks:
                    - duration: 23.8238
                      id: RiyQPM31a1SPtfI802bEP2zD02F5FQVNL801FRHeE5t01G4
                      max_frame_rate: 29.97
                      max_height: 1080
                      max_width: 1920
                      type: video
                    - duration: 23.823792
                      id: LvINTciHVoC017knMCH01y9pSi5OrDLCRaBPNDAoNJcmg
                      max_channels: 2
                      type: audio
                  updated_at: "1609869000"
              schema:
                $ref: "#/components/schemas/AssetResponse"
          description: OK
      summary: Update an Asset
      tags:
        - Assets
  "/video/v1/assets/{ASSET_ID}/input-info":
    get:
      description: Returns a list of the input objects that were used to create the asset along with any settings that were applied to each input.
      operationId: get-asset-input-info
      parameters:
        - $ref: "#/components/parameters/asset_id"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - file:
                      container_format: mp4
                      tracks:
                        - duration: 120
                          encoding: h.264
                          frame_rate: 30
                          height: 720
                          type: video
                          width: 1280
                        - duration: 120
                          encoding: aac
                          sample_rate: 16000
                          sample_size: 24
                          type: audio
                    settings:
                      url: https://muxed.s3.amazonaws.com/leds.mp4
                  - file:
                      container_format: srt
                    settings:
                      url: https://example.com/myVideo_en.srt
              schema:
                $ref: "#/components/schemas/GetAssetInputInfoResponse"
          description: OK
      summary: Retrieve asset input info
      tags:
        - Assets
  "/video/v1/assets/{ASSET_ID}/master-access":
    put:
      description: |-
        Allows you to add temporary access to the master (highest-quality) version of the asset in MP4 format. A URL will be created that can be used to download the master version for 24 hours. After 24 hours Master Access will revert to "none".
        This master version is not optimized for web and not meant to be streamed, only downloaded for purposes like archiving or editing the video offline.
      operationId: update-asset-master-access
      parameters:
        - $ref: "#/components/parameters/asset_id"
      requestBody:
        content:
          application/json:
            example:
              master_access: temporary
            schema:
              $ref: "#/components/schemas/UpdateAssetMasterAccessRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  aspect_ratio: 16:9
                  created_at: "1609868768"
                  duration: 23.857167
                  id: lJ4bGGsp7ZlPf02nMg015W02iHQLN9XnuuLRBsPS00xqd68
                  master:
                    status: preparing
                  master_access: temporary
                  max_stored_frame_rate: 29.97
                  max_stored_resolution: HD
                  mp4_support: none
                  playback_ids:
                    - id: Lj02VZDorh9hCV00flNqPli8fmwf6KEppug01w8zDEYVlQ
                      policy: public
                  resolution_tier: 1080p
                  status: ready
                  tracks:
                    - duration: 23.8238
                      id: RiyQPM31a1SPtfI802bEP2zD02F5FQVNL801FRHeE5t01G4
                      max_frame_rate: 29.97
                      max_height: 1080
                      max_width: 1920
                      type: video
                    - duration: 23.823792
                      id: LvINTciHVoC017knMCH01y9pSi5OrDLCRaBPNDAoNJcmg
                      max_channels: 2
                      type: audio
              schema:
                $ref: "#/components/schemas/AssetResponse"
          description: OK
      summary: Update master access
      tags:
        - Assets
  "/video/v1/assets/{ASSET_ID}/mp4-support":
    put:
      description: Allows you to add or remove mp4 support for assets that were created without it. Currently there are two values supported in this request, `standard` and `none`. `none` means that an asset *does not* have mp4 support, so submitting a request with `mp4_support` set to `none` will delete the mp4 assets from the asset in question.
      operationId: update-asset-mp4-support
      parameters:
        - $ref: "#/components/parameters/asset_id"
      requestBody:
        content:
          application/json:
            example:
              mp4_support: standard
            schema:
              $ref: "#/components/schemas/UpdateAssetMP4SupportRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  aspect_ratio: 16:9
                  created_at: "1609868768"
                  duration: 23.857167
                  id: lJ4bGGsp7ZlPf02nMg015W02iHQLN9XnuuLRBsPS00xqd68
                  master_access: none
                  max_stored_frame_rate: 29.97
                  max_stored_resolution: HD
                  mp4_support: standard
                  playback_ids:
                    - id: Lj02VZDorh9hCV00flNqPli8fmwf6KEppug01w8zDEYVlQ
                      policy: public
                  resolution_tier: 1080p
                  static_renditions:
                    status: preparing
                  status: ready
                  tracks:
                    - duration: 23.8238
                      id: RiyQPM31a1SPtfI802bEP2zD02F5FQVNL801FRHeE5t01G4
                      max_frame_rate: 29.97
                      max_height: 1080
                      max_width: 1920
                      type: video
                    - duration: 23.823792
                      id: LvINTciHVoC017knMCH01y9pSi5OrDLCRaBPNDAoNJcmg
                      max_channels: 2
                      type: audio
              schema:
                $ref: "#/components/schemas/AssetResponse"
          description: OK
      summary: Update MP4 support
      tags:
        - Assets
  "/video/v1/assets/{ASSET_ID}/playback-ids":
    post:
      description: Creates a playback ID that can be used to stream the asset to a viewer.
      operationId: create-asset-playback-id
      parameters:
        - $ref: "#/components/parameters/asset_id"
      requestBody:
        content:
          application/json:
            example:
              policy: public
            schema:
              $ref: "#/components/schemas/CreatePlaybackIDRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                data:
                  id: Lj02VZDorh9hCV00flNqPli8fmwf6KEppug01w8zDEYVlQ
                  policy: public
              schema:
                $ref: "#/components/schemas/CreatePlaybackIDResponse"
          description: Created
      summary: Create a playback ID
      tags:
        - Assets
  "/video/v1/assets/{ASSET_ID}/playback-ids/{PLAYBACK_ID}":
    delete:
      description: Deletes a playback ID, rendering it nonfunctional for viewing an asset's video content. Please note that deleting the playback ID removes access to the underlying asset; a viewer who started playback before the playback ID was deleted may be able to watch the entire video for a limited duration.
      operationId: delete-asset-playback-id
      parameters:
        - $ref: "#/components/parameters/asset_id"
        - $ref: "#/components/parameters/playback_id"
      responses:
        "204":
          description: No Content
      summary: Delete a playback ID
      tags:
        - Assets
    get:
      description: Retrieves information about the specified playback ID.
      operationId: get-asset-playback-id
      parameters:
        - $ref: "#/components/parameters/asset_id"
        - $ref: "#/components/parameters/playback_id"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  id: vAFLI2eKFFicXX00iHBS2vqt5JjJGg5HV6fQ4Xijgt1I
                  policy: public
              schema:
                $ref: "#/components/schemas/GetAssetPlaybackIDResponse"
          description: OK
      summary: Retrieve a playback ID
      tags:
        - Assets
  "/video/v1/assets/{ASSET_ID}/tracks":
    post:
      description: Adds an asset track (for example, subtitles, or an alternate audio track) to an asset.
      operationId: create-asset-track
      parameters:
        - $ref: "#/components/parameters/asset_id"
      requestBody:
        content:
          application/json:
            example:
              closed_captions: true
              language_code: en-US
              name: English
              passthrough: English
              text_type: subtitles
              type: text
              url: https://example.com/myVideo_en.srt
            schema:
              $ref: "#/components/schemas/CreateTrackRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                data:
                  closed_captions: true
                  id: xBe7u01029ipxBLQhYzZCJ1cke01zCkuUsgnYtH0017nNzbpv2YcsoMDmw
                  language_code: en-US
                  name: English
                  passthrough: English
                  status: preparing
                  text_type: subtitles
                  type: text
              schema:
                $ref: "#/components/schemas/CreateTrackResponse"
          description: Created
      summary: Create an asset track
      tags:
        - Assets
  "/video/v1/assets/{ASSET_ID}/tracks/{TRACK_ID}":
    delete:
      description: Removes a text track from an asset. Audio and video tracks on assets cannot be removed.
      operationId: delete-asset-track
      parameters:
        - $ref: "#/components/parameters/asset_id"
        - $ref: "#/components/parameters/track_id"
      responses:
        "204":
          description: No Content
      summary: Delete an asset track
      tags:
        - Assets
  /video/v1/delivery-usage:
    get:
      description: Returns a list of delivery usage records and their associated Asset IDs or Live Stream IDs.
      operationId: list-delivery-usage
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/delivery_usage_limit"
        - $ref: "#/components/parameters/delivery_usage_asset_id"
        - $ref: "#/components/parameters/delivery_usage_live_stream_id"
        - $ref: "#/components/parameters/delivery_usage_timeframe"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - asset_duration: 154.366667
                    asset_id: Ww4v2q2H4MNbHIAM2wApKb3cmrh7eHjGLUjdKohR5wM
                    asset_resolution_tier: 1080p
                    asset_state: deleted
                    created_at: "1607939184"
                    deleted_at: "1607945257"
                    delivered_seconds: 206.366667
                    delivered_seconds_by_resolution:
                      tier_1080p: 100
                      tier_720p: 100
                      tier_audio_only: 6.366667
                    live_stream_id: B65hEUWW01ErVKDDGImKcBquYhwEAkjW6Ic3lPY0299Cc
                  - asset_duration: 98.773667
                    asset_id: Qlb007on1TwN43XLIG027QJlUxm3jd01v5PRi1aXhnyFZY
                    asset_resolution_tier: 1080p
                    asset_state: deleted
                    created_at: "1607617107"
                    deleted_at: "1607935288"
                    delivered_seconds: 30
                    delivered_seconds_by_resolution:
                      tier_1080p: 10
                      tier_720p: 10
                      tier_audio_only: 10
                limit: 100
                page: 1
                timeframe:
                  - 1607817600
                  - 1607990400
                total_row_count: 2
              schema:
                $ref: "#/components/schemas/ListDeliveryUsageResponse"
          description: OK
      summary: List Usage
      tags:
        - Delivery Usage
  /video/v1/live-streams:
    get:
      description: Lists the live streams that currently exist in the current environment.
      operationId: list-live-streams
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/stream_key"
        - description: Filter response to return live streams with the specified status only
          in: query
          name: status
          required: false
          schema:
            $ref: "#/components/schemas/LiveStreamStatus"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - created_at: "1609937654"
                    id: ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag
                    latency_mode: standard
                    max_continuous_duration: 43200
                    new_asset_settings:
                      playback_policies:
                        - public
                    playback_ids:
                      - id: HNRDuwff3K2VjTZZAPuvd2Kx6D01XUQFv02GFBHPUka018
                        policy: public
                    reconnect_window: 60
                    status: idle
                    stream_key: 831b5bde-cd8a-5bc4-115d-4ba34b19f481
                  - created_at: "1607587513"
                    id: B65hEUWW01ErVKDDGImKcBquYhwEAkjW6Ic3lPY0299Cc
                    latency_mode: standard
                    max_continuous_duration: 43200
                    new_asset_settings:
                      playback_policies:
                        - public
                    playback_ids:
                      - id: 00zOcribkUmXqXHzBTpflk2771BRTcKATqPjWf7JHpuM
                        policy: public
                    recent_asset_ids:
                      - SZs02xxHgYdkHp00OSCjJiHUHqzVQZNU332XPXRxe341o
                      - e4J9cwb5tjVxMeeV8201dC00i800ThPKKGT2SEN002dHH2s
                    reconnect_window: 60
                    status: idle
                    stream_key: d273c65e-1fc8-27dc-e9ef-56144cbceb3a
              schema:
                $ref: "#/components/schemas/ListLiveStreamsResponse"
          description: OK
      summary: List live streams
      tags:
        - Live Streams
    post:
      description: Creates a new live stream. Once created, an encoder can connect to Mux via the specified stream key and begin streaming to an audience.
      operationId: create-live-stream
      parameters: []
      requestBody:
        content:
          application/json:
            example:
              new_asset_settings:
                playback_policy:
                  - public
              playback_policy:
                - public
            schema:
              $ref: "#/components/schemas/CreateLiveStreamRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                data:
                  created_at: "1609937654"
                  id: ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag
                  latency_mode: standard
                  max_continuous_duration: 43200
                  new_asset_settings:
                    playback_policies:
                      - public
                  playback_ids:
                    - id: HNRDuwff3K2VjTZZAPuvd2Kx6D01XUQFv02GFBHPUka018
                      policy: public
                  reconnect_window: 60
                  status: idle
                  stream_key: abcdefgh
              schema:
                $ref: "#/components/schemas/LiveStreamResponse"
          description: Created
      summary: Create a live stream
      tags:
        - Live Streams
  "/video/v1/live-streams/{LIVE_STREAM_ID}":
    delete:
      description: Deletes a live stream from the current environment. If the live stream is currently active and being streamed to, ingest will be terminated and the encoder will be disconnected.
      operationId: delete-live-stream
      parameters:
        - $ref: "#/components/parameters/livestream_id"
      responses:
        "204":
          description: No Content
      summary: Delete a live stream
      tags:
        - Live Streams
    get:
      description: Retrieves the details of a live stream that has previously been created. Supply the unique live stream ID that was returned from your previous request, and Mux will return the corresponding live stream information. The same information is returned when creating a live stream.
      operationId: get-live-stream
      parameters:
        - $ref: "#/components/parameters/livestream_id"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  created_at: "1609937654"
                  id: ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag
                  latency_mode: standard
                  max_continuous_duration: 43200
                  new_asset_settings:
                    playback_policies:
                      - public
                  playback_ids:
                    - id: HNRDuwff3K2VjTZZAPuvd2Kx6D01XUQFv02GFBHPUka018
                      policy: public
                  reconnect_window: 60
                  status: idle
                  stream_key: 831b5bde-cd8a-5bc4-115d-4ba34b19f481
              schema:
                $ref: "#/components/schemas/LiveStreamResponse"
          description: OK
      summary: Retrieve a live stream
      tags:
        - Live Streams
    patch:
      description: Updates the parameters of a previously-created live stream. This currently supports a subset of variables. Supply the live stream ID and the updated parameters and Mux will return the corresponding live stream information. The information returned will be the same after update as for subsequent get live stream requests.
      operationId: update-live-stream
      parameters:
        - $ref: "#/components/parameters/livestream_id"
      requestBody:
        content:
          application/json:
            example:
              latency_mode: standard
              max_continuous_duration: 1200
              reconnect_window: 30
            schema:
              $ref: "#/components/schemas/UpdateLiveStreamRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  created_at: "1609937654"
                  id: ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag
                  latency_mode: standard
                  max_continuous_duration: 1200
                  new_asset_settings:
                    playback_policies:
                      - public
                  playback_ids:
                    - id: HNRDuwff3K2VjTZZAPuvd2Kx6D01XUQFv02GFBHPUka018
                      policy: public
                  reconnect_window: 30
                  status: idle
                  stream_key: 831b5bde-cd8a-5bc4-115d-4ba34b19f481
              schema:
                $ref: "#/components/schemas/LiveStreamResponse"
          description: OK
      summary: Update a live stream
      tags:
        - Live Streams
  "/video/v1/live-streams/{LIVE_STREAM_ID}/complete":
    put:
      description: |
        (Optional) End the live stream recording immediately instead of waiting for the reconnect_window. `EXT-X-ENDLIST` tag is added to the HLS manifest which notifies the player that this live stream is over.

        Mux does not close the encoder connection immediately. Encoders are often configured to re-establish connections immediately which would result in a new recorded asset. For this reason, Mux waits for 60s before closing the connection with the encoder. This 60s timeframe is meant to give encoder operators a chance to disconnect from their end.
      operationId: signal-live-stream-complete
      parameters:
        - $ref: "#/components/parameters/livestream_id"
      responses:
        "200":
          content:
            application/json:
              example:
                data: {}
              schema:
                $ref: "#/components/schemas/SignalLiveStreamCompleteResponse"
          description: OK
      summary: Signal a live stream is finished
      tags:
        - Live Streams
  "/video/v1/live-streams/{LIVE_STREAM_ID}/disable":
    put:
      description: |
        Disables a live stream, making it reject incoming RTMP streams until re-enabled. The API also ends the live stream recording immediately when active. Ending the live stream recording adds the `EXT-X-ENDLIST` tag to the HLS manifest which notifies the player that this live stream is over.

        Mux also closes the encoder connection immediately. Any attempt from the encoder to re-establish connection will fail till the live stream is re-enabled.
      operationId: disable-live-stream
      parameters:
        - $ref: "#/components/parameters/livestream_id"
      responses:
        "200":
          content:
            application/json:
              example:
                data: {}
              schema:
                $ref: "#/components/schemas/DisableLiveStreamResponse"
          description: OK
      summary: Disable a live stream
      tags:
        - Live Streams
  "/video/v1/live-streams/{LIVE_STREAM_ID}/embedded-subtitles":
    put:
      description: |
        Configures a live stream to receive embedded closed captions.
        The resulting Asset's subtitle text track will have `closed_captions: true` set.
      operationId: update-live-stream-embedded-subtitles
      parameters:
        - $ref: "#/components/parameters/livestream_id"
      requestBody:
        content:
          application/json:
            example:
              embedded_subtitles:
                - passthrough: Example
            schema:
              $ref: "#/components/schemas/UpdateLiveStreamEmbeddedSubtitlesRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  created_at: "1609937654"
                  embedded_subtitles:
                    - language_channel: cc1
                      language_code: en
                      name: English CC
                      passthrough: Example
                  id: ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag
                  latency_mode: standard
                  max_continuous_duration: 43200
                  new_asset_settings:
                    playback_policies:
                      - public
                  playback_ids:
                    - id: HNRDuwff3K2VjTZZAPuvd2Kx6D01XUQFv02GFBHPUka018
                      policy: public
                    - id: 4O902oOPU100s7XIQgOeY01U7dHzYlBe26zi3Sq01EJqnxw
                      policy: public
                  reconnect_window: 60
                  status: idle
                  stream_key: acaf2ca1-ba9c-5ffe-8c9c-a02bbf0009a6
              schema:
                $ref: "#/components/schemas/LiveStreamResponse"
          description: OK
      summary: Update a live stream's embedded subtitles
      tags:
        - Live Streams
  "/video/v1/live-streams/{LIVE_STREAM_ID}/enable":
    put:
      description: Enables a live stream, allowing it to accept an incoming RTMP stream.
      operationId: enable-live-stream
      parameters:
        - $ref: "#/components/parameters/livestream_id"
      responses:
        "200":
          content:
            application/json:
              example:
                data: {}
              schema:
                $ref: "#/components/schemas/EnableLiveStreamResponse"
          description: OK
      summary: Enable a live stream
      tags:
        - Live Streams
  "/video/v1/live-streams/{LIVE_STREAM_ID}/generated-subtitles":
    put:
      description: |
        Updates a live stream's automatic-speech-recognition-generated subtitle configuration.
        Automatic speech recognition subtitles can be removed by sending an empty array in the
        request payload.
      operationId: update-live-stream-generated-subtitles
      parameters:
        - $ref: "#/components/parameters/livestream_id"
      requestBody:
        content:
          application/json:
            example:
              generated_subtitles:
                - language: en
                  name: English CC (ASR)
                  passthrough: Example
            schema:
              $ref: "#/components/schemas/UpdateLiveStreamGeneratedSubtitlesRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  created_at: "1609937654"
                  generated_subtitles:
                    - language_code: en
                      name: English CC (ASR)
                      passthrough: Example
                  id: ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag
                  new_asset_settings:
                    playback_policies:
                      - public
                  playback_ids:
                    - id: HNRDuwff3K2VjTZZAPuvd2Kx6D01XUQFv02GFBHPUka018
                      policy: public
                    - id: 4O902oOPU100s7XIQgOeY01U7dHzYlBe26zi3Sq01EJqnxw
                      policy: public
                  reconnect_window: 60
                  status: idle
                  stream_key: acaf2ca1-ba9c-5ffe-8c9c-a02bbf0009a6
              schema:
                $ref: "#/components/schemas/LiveStreamResponse"
          description: OK
      summary: Update a live stream's generated subtitles
      tags:
        - Live Streams
  "/video/v1/live-streams/{LIVE_STREAM_ID}/playback-ids":
    post:
      description: Create a new playback ID for this live stream, through which a viewer can watch the streamed content of the live stream.
      operationId: create-live-stream-playback-id
      parameters:
        - $ref: "#/components/parameters/livestream_id"
      requestBody:
        content:
          application/json:
            example:
              policy: signed
            schema:
              $ref: "#/components/schemas/CreatePlaybackIDRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                data:
                  id: 4O902oOPU100s7XIQgOeY01U7dHzYlBe26zi3Sq01EJqnxw
                  policy: public
              schema:
                $ref: "#/components/schemas/CreatePlaybackIDResponse"
          description: Created
      summary: Create a live stream playback ID
      tags:
        - Live Streams
  "/video/v1/live-streams/{LIVE_STREAM_ID}/playback-ids/{PLAYBACK_ID}":
    delete:
      description: Deletes the playback ID for the live stream. This will not disable ingest (as the live stream still exists). New attempts to play back the live stream will fail immediately. However, current viewers will be able to continue watching the stream for some period of time.
      operationId: delete-live-stream-playback-id
      parameters:
        - $ref: "#/components/parameters/livestream_id"
        - $ref: "#/components/parameters/playback_id"
      responses:
        "204":
          description: No Content
      summary: Delete a live stream playback ID
      tags:
        - Live Streams
    get:
      description: Fetches information about a live stream's playback ID, through which a viewer can watch the streamed content from this live stream.
      operationId: get-live-stream-playback-id
      parameters:
        - $ref: "#/components/parameters/livestream_id"
        - $ref: "#/components/parameters/playback_id"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  id: 4O902oOPU100s7XIQgOeY01U7dHzYlBe26zi3Sq01EJqnxw
                  policy: public
              schema:
                $ref: "#/components/schemas/GetLiveStreamPlaybackIDResponse"
          description: OK
      summary: Retrieve a live stream playback ID
      tags:
        - Live Streams
  "/video/v1/live-streams/{LIVE_STREAM_ID}/reset-stream-key":
    post:
      description: Reset a live stream key if you want to immediately stop the current stream key from working and create a new stream key that can be used for future broadcasts.
      operationId: reset-stream-key
      parameters:
        - $ref: "#/components/parameters/livestream_id"
      responses:
        "201":
          content:
            application/json:
              example:
                data:
                  created_at: "1609937654"
                  id: ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag
                  latency_mode: standard
                  max_continuous_duration: 43200
                  new_asset_settings:
                    playback_policies:
                      - public
                  playback_ids:
                    - id: HNRDuwff3K2VjTZZAPuvd2Kx6D01XUQFv02GFBHPUka018
                      policy: public
                    - id: 4O902oOPU100s7XIQgOeY01U7dHzYlBe26zi3Sq01EJqnxw
                      policy: public
                  reconnect_window: 60
                  status: idle
                  stream_key: acaf2ca1-ba9c-5ffe-8c9c-a02bbf0009a6
              schema:
                $ref: "#/components/schemas/LiveStreamResponse"
          description: OK
      summary: Reset a live stream's stream key
      tags:
        - Live Streams
  "/video/v1/live-streams/{LIVE_STREAM_ID}/simulcast-targets":
    post:
      description: Create a simulcast target for the parent live stream. Simulcast target can only be created when the parent live stream is in idle state. Only one simulcast target can be created at a time with this API.
      operationId: create-live-stream-simulcast-target
      parameters:
        - $ref: "#/components/parameters/livestream_id"
      requestBody:
        content:
          application/json:
            example:
              passthrough: Example
              stream_key: abcdefgh
              url: rtmp://live.example.com/app
            schema:
              $ref: "#/components/schemas/CreateSimulcastTargetRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                data:
                  id: le1axfGDc9ETqh6trHNTxGQ9XEhj02fOnX0200aAh24fwlmwzqKCYNJgw
                  passthrough: Example
                  status: idle
                  stream_key: abcdefgh
                  url: rtmp://live.example.com/app
              schema:
                $ref: "#/components/schemas/SimulcastTargetResponse"
          description: Created
      summary: Create a live stream simulcast target
      tags:
        - Live Streams
  "/video/v1/live-streams/{LIVE_STREAM_ID}/simulcast-targets/{SIMULCAST_TARGET_ID}":
    delete:
      description: Delete the simulcast target using the simulcast target ID returned when creating the simulcast target. Simulcast Target can only be deleted when the parent live stream is in idle state.
      operationId: delete-live-stream-simulcast-target
      parameters:
        - $ref: "#/components/parameters/livestream_id"
        - $ref: "#/components/parameters/simulcast_target_id"
      responses:
        "204":
          description: No Content
      summary: Delete a Live Stream Simulcast Target
      tags:
        - Live Streams
    get:
      description: Retrieves the details of the simulcast target created for the parent live stream. Supply the unique live stream ID and simulcast target ID that was returned in the response of create simulcast target request, and Mux will return the corresponding information.
      operationId: get-live-stream-simulcast-target
      parameters:
        - $ref: "#/components/parameters/livestream_id"
        - $ref: "#/components/parameters/simulcast_target_id"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  id: 02FU00rPq00fC9S6kygrqlxygGMdpW1lk00BkFpCfc2kGregEIr7brt7CQ
                  passthrough: Example
                  status: idle
                  stream_key: abcdefgh
                  url: rtmp://live.example.com/app
              schema:
                $ref: "#/components/schemas/SimulcastTargetResponse"
          description: OK
      summary: Retrieve a Live Stream Simulcast Target
      tags:
        - Live Streams
  "/video/v1/playback-ids/{PLAYBACK_ID}":
    get:
      description: Retrieves the Identifier of the Asset or Live Stream associated with the Playback ID.
      operationId: get-asset-or-livestream-id
      parameters:
        - $ref: "#/components/parameters/playback_id"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  id: a1B2c3D4e5F6g7H8i9
                  object:
                    id: "123456789012345678"
                    type: asset
                  policy: public
              schema:
                $ref: "#/components/schemas/GetAssetOrLiveStreamIdResponse"
          description: OK
      summary: Retrieve an Asset or Live Stream ID
      tags:
        - Playback ID
  /video/v1/playback-restrictions:
    get:
      description: Returns a list of all Playback Restrictions.
      operationId: list-playback-restrictions
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - created_at: "1607939184"
                    id: 9dbEg8o00uqQzZbzJT6NXdqNA00SdnSo8O
                    referrer:
                      allow_no_referrer: false
                      allowed_domains:
                        - "*.example.com"
                    updated_at: "1607945257"
                  - created_at: "1607939188"
                    id: 012uTQqPygDYWz3jey8cyOX9n01Bd5SDH1
                    referrer:
                      allow_no_referrer: true
                      allowed_domains:
                        - a.example.com
                        - b.example.com
                    updated_at: "1607945980"
                limit: 100
                page: 1
                total_row_count: 2
              schema:
                $ref: "#/components/schemas/ListPlaybackRestrictionsResponse"
          description: OK
      summary: List Playback Restrictions
      tags:
        - Playback Restrictions
    post:
      description: Create a new Playback Restriction.
      operationId: create-playback-restriction
      requestBody:
        content:
          application/json:
            example:
              referrer:
                allow_no_referrer: true
                allowed_domains:
                  - "*.example.com"
            schema:
              $ref: "#/components/schemas/CreatePlaybackRestrictionRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                data:
                  created_at: "1607945257"
                  id: 9dbEg8o00uqQzZbzJT6NXdqNA00SdnSo8O
                  referrer:
                    allow_no_referrer: true
                    allowed_domains:
                      - "*.example.com"
                  updated_at: "1607945257"
              schema:
                $ref: "#/components/schemas/PlaybackRestrictionResponse"
          description: Created
      summary: Create a Playback Restriction
      tags:
        - Playback Restrictions
  "/video/v1/playback-restrictions/{PLAYBACK_RESTRICTION_ID}":
    delete:
      description: Deletes a single Playback Restriction.
      operationId: delete-playback-restriction
      parameters:
        - $ref: "#/components/parameters/playback_restriction_id"
      responses:
        "204":
          description: No Content
      summary: Delete a Playback Restriction
      tags:
        - Playback Restrictions
    get:
      description: Retrieves a Playback Restriction associated with the unique identifier.
      operationId: get-playback-restriction
      parameters:
        - $ref: "#/components/parameters/playback_restriction_id"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  created_at: "1607939184"
                  id: 9dbEg8o00uqQzZbzJT6NXdqNA00SdnSo8O
                  referrer:
                    allow_no_referrer: false
                    allowed_domains:
                      - "*.example.com"
                  updated_at: "1607945257"
              schema:
                $ref: "#/components/schemas/PlaybackRestrictionResponse"
          description: OK
      summary: Retrieve a Playback Restriction
      tags:
        - Playback Restrictions
  "/video/v1/playback-restrictions/{PLAYBACK_RESTRICTION_ID}/referrer":
    put:
      description: Allows you to modify the list of domains or change how Mux validates playback requests without the `Referer` HTTP header. The Referrer restriction fully replaces the old list with this new list of domains.
      operationId: update-referrer-domain-restriction
      parameters:
        - $ref: "#/components/parameters/playback_restriction_id"
      requestBody:
        content:
          application/json:
            example:
              allow_no_referrer: true
              allowed_domains:
                - "*.example.com"
            schema:
              $ref: "#/components/schemas/UpdateReferrerDomainRestrictionRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  created_at: "1607939184"
                  id: 9dbEg8o00uqQzZbzJT6NXdqNA00SdnSo8O
                  referrer:
                    allow_no_referrer: true
                    allowed_domains:
                      - "*.example.com"
                  updated_at: "1607945257"
              schema:
                $ref: "#/components/schemas/PlaybackRestrictionResponse"
          description: OK
      summary: Update the Referrer Playback Restriction
      tags:
        - Playback Restrictions
  /video/v1/signing-keys:
    get:
      deprecated: true
      description: |
        This route is now deprecated, please use the `Signing Keys` API. Returns a list of URL signing keys.

        Note: Any new access tokens authenticating this route will be required to have `System` level permissions.
      operationId: list-url-signing-keys
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - created_at: "1610108345"
                    id: vI5KTQ78ohYriuvWKHY6COtZWXexHGLllxksOdZuya8
                  - created_at: "1608632647"
                    id: jc6lJiCLMjyC202EXtRQ644sShzDv6x5tWJrbvUFpvmo
              schema:
                $ref: "#/components/schemas/ListSigningKeysResponse"
          description: OK
      summary: List URL signing keys
      tags:
        - URL Signing Keys
    post:
      deprecated: true
      description: |
        This route is now deprecated, please use the `Signing Keys` API. Creates a new signing key pair. When creating a new signing key,
        the API will generate a 2048-bit RSA key-pair and return the private key and
        a generated key-id; the public key will be stored at Mux to validate signed
        tokens.

        Note: Any new access tokens authenticating this route will be required to have `System` level permissions.
      operationId: create-url-signing-key
      responses:
        "201":
          content:
            application/json:
              example:
                data:
                  created_at: "1610108345"
                  id: vI5KTQ78ohYriuvWKHY6COtZWXexHGLllxksOdZuya8
                  private_key: abcd123=
              schema:
                $ref: "#/components/schemas/SigningKeyResponse"
          description: Created
      summary: Create a URL signing key
      tags:
        - URL Signing Keys
  "/video/v1/signing-keys/{SIGNING_KEY_ID}":
    delete:
      deprecated: true
      description: |
        This route is now deprecated, please use the `Signing Keys` API. Deletes an existing signing key. Use with caution, as this will
        invalidate any existing signatures and no URLs can be signed using the key
        again.

        Note: Any new access tokens authenticating this route will be required to have `System` level permissions.
      operationId: delete-url-signing-key
      parameters:
        - $ref: "#/components/parameters/signing_key_id"
      responses:
        "204":
          description: No Content
      summary: Delete a URL signing key
      tags:
        - URL Signing Keys
    get:
      deprecated: true
      description: |
        This route is now deprecated, please use the `Signing Keys` API. Retrieves the details of a URL signing key that has previously
        been created. Supply the unique signing key ID that was returned from your
        previous request, and Mux will return the corresponding signing key information.
        **The private key is not returned in this response.**

        Note: Any new access tokens authenticating this route will be required to have `System` level permissions.
      operationId: get-url-signing-key
      parameters:
        - $ref: "#/components/parameters/signing_key_id"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  created_at: "1608632647"
                  id: jc6lJiCLMjyC202EXtRQ644sShzDv6x5tWJrbvUFpvmo
              schema:
                $ref: "#/components/schemas/SigningKeyResponse"
          description: OK
      summary: Retrieve a URL signing key
      tags:
        - URL Signing Keys
  /video/v1/spaces:
    get:
      deprecated: true
      description: List all spaces in the current enviroment.
      operationId: list-spaces
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - created_at: "1607452572"
                    id: uylLl3WuQ54CwqUB9UHySxnN66sqKue5
                    status: idle
                    type: server
                  - created_at: "1693452572"
                    id: HK01Bq7FrEQmIu3QpRiZZ98HQOOZjm6B
                    status: active
                    type: server
              schema:
                $ref: "#/components/schemas/ListSpacesResponse"
          description: OK
      summary: List spaces
      tags:
        - Spaces
    post:
      deprecated: true
      description: Create a new space. Spaces are used to build [real-time video applications.](https://mux.com/real-time-video)
      operationId: create-space
      parameters: []
      requestBody:
        content:
          application/json:
            example:
              type: server
            schema:
              $ref: "#/components/schemas/CreateSpaceRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                data:
                  created_at: "1607452572"
                  id: uylLl3WuQ54CwqUB9UHySxnN66sqKue5
                  status: idle
                  type: server
              schema:
                $ref: "#/components/schemas/SpaceResponse"
          description: Space Created
      summary: Create a space
      tags:
        - Spaces
  "/video/v1/spaces/{SPACE_ID}":
    delete:
      deprecated: true
      description: Deletes a space. Spaces can only be deleted when `idle`.
      operationId: delete-space
      parameters:
        - $ref: "#/components/parameters/space_id"
      responses:
        "204":
          description: No Content
      summary: Delete a space
      tags:
        - Spaces
    get:
      deprecated: true
      description: Retrieves the details of a space that has previously been created. Supply the unique space ID that was returned from your create space request, and Mux will return the information about the corresponding space. The same information is returned when creating a space.
      operationId: get-space
      parameters:
        - $ref: "#/components/parameters/space_id"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  created_at: "1607452572"
                  id: uylLl3WuQ54CwqUB9UHySxnN66sqKue5
                  status: idle
                  type: server
              schema:
                $ref: "#/components/schemas/SpaceResponse"
          description: OK
      summary: Retrieve a space
      tags:
        - Spaces
  "/video/v1/spaces/{SPACE_ID}/broadcasts":
    post:
      deprecated: true
      description: |-
        Creates a new broadcast. Broadcasts are used to create composited versions of your space, which can be broadcast to live streams.
        **Note:** By default only a single broadcast destination can be specified. Contact Mux support if you need more.
      operationId: create-space-broadcast
      parameters:
        - $ref: "#/components/parameters/space_id"
      requestBody:
        content:
          application/json:
            example:
              live_stream_id: GQ9025mPqzyjOy3kKQW006qKTqmULW9vFO
            schema:
              $ref: "#/components/schemas/CreateBroadcastRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                data:
                  id: uylLl3WuQ54CwqUB9UHySxnN66sqKue5
                  layout: gallery
                  live_stream_id: GQ9025mPqzyjOy3kKQW006qKTqmULW9vFO
                  resolution: 1920x1080
                  status: idle
              schema:
                $ref: "#/components/schemas/BroadcastResponse"
          description: Broadcast Created
      summary: Create a space broadcast
      tags:
        - Spaces
  "/video/v1/spaces/{SPACE_ID}/broadcasts/{BROADCAST_ID}":
    delete:
      deprecated: true
      description: Deletes a single broadcast of a specific space. Broadcasts can only be deleted when `idle`.
      operationId: delete-space-broadcast
      parameters:
        - $ref: "#/components/parameters/space_id"
        - $ref: "#/components/parameters/broadcast_id"
      responses:
        "204":
          description: No Content
      summary: Delete a space broadcast
      tags:
        - Spaces
    get:
      deprecated: true
      description: Retrieves the details of a broadcast of a specific space.
      operationId: get-space-broadcast
      parameters:
        - $ref: "#/components/parameters/space_id"
        - $ref: "#/components/parameters/broadcast_id"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  id: uylLl3WuQ54CwqUB9UHySxnN66sqKue5
                  layout: gallery
                  live_stream_id: GQ9025mPqzyjOy3kKQW006qKTqmULW9vFO
                  resolution: 1920x1080
                  status: idle
              schema:
                $ref: "#/components/schemas/BroadcastResponse"
          description: OK
      summary: Retrieve space broadcast
      tags:
        - Spaces
  "/video/v1/spaces/{SPACE_ID}/broadcasts/{BROADCAST_ID}/start":
    post:
      deprecated: true
      description: Starts broadcasting a space to the associated destination. Broadcasts can only be started when the space is `active` (when there are participants connected).
      operationId: start-space-broadcast
      parameters:
        - $ref: "#/components/parameters/space_id"
        - $ref: "#/components/parameters/broadcast_id"
      responses:
        "200":
          content:
            application/json:
              example:
                data: {}
              schema:
                $ref: "#/components/schemas/StartSpaceBroadcastResponse"
          description: OK
      summary: Start a space broadcast
      tags:
        - Spaces
  "/video/v1/spaces/{SPACE_ID}/broadcasts/{BROADCAST_ID}/stop":
    post:
      deprecated: true
      description: |-
        Stops broadcasting a space, causing the destination live stream to become idle. This API also automatically calls `complete` on the destination live stream.
        Broadcasts are also automatically stopped when a space becomes idle.
      operationId: stop-space-broadcast
      parameters:
        - $ref: "#/components/parameters/space_id"
        - $ref: "#/components/parameters/broadcast_id"
      responses:
        "200":
          content:
            application/json:
              example:
                data: {}
              schema:
                $ref: "#/components/schemas/StopSpaceBroadcastResponse"
          description: OK
      summary: Stop a space broadcast
      tags:
        - Spaces
  /video/v1/transcription-vocabularies:
    get:
      description: List all Transcription Vocabularies.
      operationId: list-transcription-vocabularies
      parameters:
        - description: Number of items to include in the response
          in: query
          name: limit
          required: false
          schema:
            default: 10
            format: int32
            maximum: 10
            type: integer
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - created_at: "1609869152"
                    id: VDm3npt2eaEDvz9emzun8Q
                    name: Mux API Vocabulary
                    phrases:
                      - Mux
                      - Live Stream
                      - Playback ID
                      - video encoding
                    updated_at: "1609870000"
                  - created_at: "1609869152"
                    id: M1lDlzSP102NgukTnyQyLqw
                    name: Video Codecs
                    phrases:
                      - h.264
                      - HEVC
                      - AV1
                    updated_at: "1609870000"
              schema:
                $ref: "#/components/schemas/ListTranscriptionVocabulariesResponse"
          description: OK
      summary: List Transcription Vocabularies
      tags:
        - Transcription Vocabularies
    post:
      description: Create a new Transcription Vocabulary.
      operationId: create-transcription-vocabulary
      parameters: []
      requestBody:
        content:
          application/json:
            example:
              name: Mux API Vocabulary
              phrases:
                - Mux
                - Live Stream
                - Playback ID
                - video encoding
            schema:
              $ref: "#/components/schemas/CreateTranscriptionVocabularyRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                data:
                  created_at: "1609869152"
                  id: VDm3npt2eaEDvz9emzun8Q
                  name: Mux API Vocabulary
                  phrases:
                    - Mux
                    - Live Stream
                    - Playback ID
                    - video encoding
                  updated_at: "1609869152"
              schema:
                $ref: "#/components/schemas/TranscriptionVocabularyResponse"
          description: Transcription Vocabulary Created
      summary: Create a Transcription Vocabulary
      tags:
        - Transcription Vocabularies
  "/video/v1/transcription-vocabularies/{TRANSCRIPTION_VOCABULARY_ID}":
    delete:
      description: Deletes a Transcription Vocabulary. The Transcription Vocabulary's ID will be disassociated from any live streams using it. Transcription Vocabularies can be deleted while associated live streams are active. However, the words and phrases in the deleted Transcription Vocabulary will remain attached to those streams while they are active.
      operationId: delete-transcription-vocabulary
      parameters:
        - $ref: "#/components/parameters/transcription_vocabulary_id"
      responses:
        "204":
          description: No Content
      summary: Delete a Transcription Vocabulary
      tags:
        - Transcription Vocabularies
    get:
      description: Retrieves the details of a Transcription Vocabulary that has previously been created. Supply the unique Transcription Vocabulary ID and Mux will return the corresponding Transcription Vocabulary information. The same information is returned when creating a Transcription Vocabulary.
      operationId: get-transcription-vocabulary
      parameters:
        - $ref: "#/components/parameters/transcription_vocabulary_id"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  created_at: "1609869152"
                  id: VDm3npt2eaEDvz9emzun8Q
                  name: Mux API Vocabulary
                  phrases:
                    - Mux
                    - Live Stream
                    - Playback ID
                    - video encoding
                  updated_at: "1609870000"
              schema:
                $ref: "#/components/schemas/TranscriptionVocabularyResponse"
          description: OK
      summary: Retrieve a Transcription Vocabulary
      tags:
        - Transcription Vocabularies
    put:
      description: Updates the details of a previously-created Transcription Vocabulary. Updates to Transcription Vocabularies are allowed while associated live streams are active. However, updates will not be applied to those streams while they are active.
      operationId: update-transcription-vocabulary
      parameters:
        - $ref: "#/components/parameters/transcription_vocabulary_id"
      requestBody:
        content:
          application/json:
            example:
              name: Mux API Vocabulary - Updated
              phrases:
                - Mux
                - Live Stream
                - RTMP
                - Stream Key
            schema:
              $ref: "#/components/schemas/UpdateTranscriptionVocabularyRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  created_at: "1609869152"
                  id: VDm3npt2eaEDvz9emzun8Q
                  name: Mux API Vocabulary - Updated
                  phrases:
                    - Mux
                    - Live Stream
                    - RTMP
                    - Stream Key
                  updated_at: "1609870000"
              schema:
                $ref: "#/components/schemas/TranscriptionVocabularyResponse"
          description: OK
      summary: Update a Transcription Vocabulary
      tags:
        - Transcription Vocabularies
  /video/v1/uploads:
    get:
      description: Lists direct uploads in the current environment.
      operationId: list-direct-uploads
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - cors_origin: https://example.com/
                    id: zd01Pe2bNpYhxbrwYABgFE01twZdtv4M00kts2i02GhbGjc
                    new_asset_settings:
                      mp4_support: standard
                      playback_policies:
                        - public
                    status: waiting
                    timeout: 3600
                    url: https://storage.googleapis.com/video-storage-us-east1-uploads/zd01Pe2bNpYhxbrwYABgFE01twZdtv4M00kts2i02GhbGjc?Expires=1610112458&GoogleAccessId=mux-direct-upload%40mux-cloud.iam.gserviceaccount.com&Signature=LCu4PMoKUo%2BJkWQAUwB9WU4bWVVfW3K5bZxSxEptBz3DrjbFxNyGvs0sriyJupZh9Jdb6FxKWFIRbxEetfnAAiesOvSPH%2F1GlIichmGg3YfebfxiX77%2B6ToFF6FMkJucBo284PD90AVLHhKagOea2VsbdO0fh78MAxGH9sEspyQ2uJEfYWjHFqYQ9smJyIuM3CYOmN5HKPgRWy2yUqzV7OTMe%2FivPO4%2FX6XiiN2J4nTmy83252CJUsHIvbiGctfKxcNI6b23UVN4B1tJTVgyxTOZiBQCkMLkD%2FEe5OhoAkvJgkqENRr0q3swO0IChDDWjrh7OTMwqvWGwAoVXEGiHg%3D%3D&upload_id=ABg5-UznTdib1HhOAMjdHhWIYqBbwmSYM6dVKyPe3v33uTeEE8gkN5QzvR3cei6uSZOSrjPn7bdvvDH3nhsrLBq8AjWY2qE4UQ
                  - asset_id: AnFVqAVXfb7vVL3ypSQDMnJZunnb8nkwe02O00p2gK8P00
                    id: YzoCL01HHOtAVYq4Ds9zekdHJ2XqL9e8ukPWbr01KhtvM
                    new_asset_settings:
                      mp4_support: standard
                      playback_policies:
                        - public
                    status: asset_created
                    timeout: 3600
                  - id: AZcWu0201SqVW01LMdmVxE00m3gEWUFZPItvni1sTqF800dQ
                    new_asset_settings:
                      mp4_support: standard
                      playback_policies:
                        - public
                    status: cancelled
                    timeout: 10800
              schema:
                $ref: "#/components/schemas/ListUploadsResponse"
          description: OK
      summary: List direct uploads
      tags:
        - Direct Uploads
    post:
      description: Creates a new direct upload, through which video content can be uploaded for ingest to Mux.
      operationId: create-direct-upload
      requestBody:
        content:
          application/json:
            example:
              cors_origin: https://example.com/
              new_asset_settings:
                mp4_support: standard
                playback_policy:
                  - public
            schema:
              $ref: "#/components/schemas/CreateUploadRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                data:
                  cors_origin: https://example.com/
                  id: zd01Pe2bNpYhxbrwYABgFE01twZdtv4M00kts2i02GhbGjc
                  new_asset_settings:
                    mp4_support: standard
                    playback_policies:
                      - public
                  status: waiting
                  timeout: 3600
                  url: https://storage.googleapis.com/video-storage-us-east1-uploads/zd01Pe2bNpYhxbrwYABgFE01twZdtv4M00kts2i02GhbGjc?Expires=1610112458&GoogleAccessId=mux-direct-upload%40mux-cloud.iam.gserviceaccount.com&Signature=LCu4PMoKUo%2BJkWQAUwB9WU4bWVVfW3K5bZxSxEptBz3DrjbFxNyGvs0sriyJupZh9Jdb6FxKWFIRbxEetfnAAiesOvSPH%2F1GlIichmGg3YfebfxiX77%2B6ToFF6FMkJucBo284PD90AVLHhKagOea2VsbdO0fh78MAxGH9sEspyQ2uJEfYWjHFqYQ9smJyIuM3CYOmN5HKPgRWy2yUqzV7OTMe%2FivPO4%2FX6XiiN2J4nTmy83252CJUsHIvbiGctfKxcNI6b23UVN4B1tJTVgyxTOZiBQCkMLkD%2FEe5OhoAkvJgkqENRr0q3swO0IChDDWjrh7OTMwqvWGwAoVXEGiHg%3D%3D&upload_id=ABg5-UznTdib1HhOAMjdHhWIYqBbwmSYM6dVKyPe3v33uTeEE8gkN5QzvR3cei6uSZOSrjPn7bdvvDH3nhsrLBq8AjWY2qE4UQ
              schema:
                $ref: "#/components/schemas/UploadResponse"
          description: Created
      summary: Create a new direct upload URL
      tags:
        - Direct Uploads
  "/video/v1/uploads/{UPLOAD_ID}":
    get:
      description: Fetches information about a single direct upload in the current environment.
      operationId: get-direct-upload
      parameters:
        - $ref: "#/components/parameters/upload_id"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  asset_id: AnFVqAVXfb7vVL3ypSQDMnJZunnb8nkwe02O00p2gK8P00
                  id: YzoCL01HHOtAVYq4Ds9zekdHJ2XqL9e8ukPWbr01KhtvM
                  new_asset_settings:
                    mp4_support: standard
                    playback_policies:
                      - public
                  status: asset_created
                  timeout: 3600
              schema:
                $ref: "#/components/schemas/UploadResponse"
          description: OK
      summary: Retrieve a single direct upload's info
      tags:
        - Direct Uploads
  "/video/v1/uploads/{UPLOAD_ID}/cancel":
    put:
      description: |
        Cancels a direct upload and marks it as cancelled. If a pending upload finishes after this
        request, no asset will be created. This request will only succeed if the upload is still in
        the `waiting` state.
      operationId: cancel-direct-upload
      parameters:
        - $ref: "#/components/parameters/upload_id"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  cors_origin: https://example.com/
                  id: zd01Pe2bNpYhxbrwYABgFE01twZdtv4M00kts2i02GhbGjc
                  new_asset_settings:
                    mp4_support: standard
                    playback_policies:
                      - public
                  status: cancelled
                  timeout: 3600
              schema:
                $ref: "#/components/schemas/UploadResponse"
          description: OK
        "403":
          description: Cancellation no longer possible
      summary: Cancel a direct upload
      tags:
        - Direct Uploads
components:
  parameters:
    asset_id:
      description: The asset ID.
      in: path
      name: ASSET_ID
      required: true
      schema:
        type: string
    broadcast_id:
      description: The broadcast ID.
      in: path
      name: BROADCAST_ID
      required: true
      schema:
        type: string
    delivery_usage_asset_id:
      description: Filter response to return delivery usage for this asset only. You cannot specify both the `asset_id` and `live_stream_id` parameters together.
      in: query
      name: asset_id
      required: false
      schema:
        type: string
    delivery_usage_limit:
      description: Number of items to include in the response
      in: query
      name: limit
      required: false
      schema:
        default: 100
        format: int32
        type: integer
    delivery_usage_live_stream_id:
      description: Filter response to return delivery usage for assets for this live stream. You cannot specify both the `asset_id` and `live_stream_id` parameters together.
      in: query
      name: live_stream_id
      required: false
      schema:
        type: string
    delivery_usage_timeframe:
      description: Time window to get delivery usage information. timeframe[0] indicates the start time, timeframe[1] indicates the end time in seconds since the Unix epoch. Default time window is 1 hour representing usage from 13th to 12th hour from when the request is made.
      explode: true
      in: query
      name: timeframe[]
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    dimension:
      description: Dimension the specified value belongs to
      in: query
      name: dimension
      required: false
      schema:
        enum:
          - asn
          - asset_id
          - browser
          - browser_version
          - cdn
          - continent_code
          - country
          - custom_1
          - custom_2
          - custom_3
          - custom_4
          - custom_5
          - custom_6
          - custom_7
          - custom_8
          - custom_9
          - custom_10
          - exit_before_video_start
          - experiment_name
          - live_stream_id
          - operating_system
          - operating_system_version
          - playback_id
          - player_autoplay
          - player_error_code
          - player_mux_plugin_name
          - player_mux_plugin_version
          - player_name
          - player_preload
          - player_remote_played
          - player_software
          - player_software_version
          - player_version
          - preroll_ad_asset_hostname
          - preroll_ad_tag_hostname
          - preroll_played
          - preroll_requested
          - region
          - source_hostname
          - source_type
          - stream_type
          - sub_property_id
          - video_encoding_variant
          - video_id
          - video_series
          - video_startup_failure
          - video_title
          - view_drm_type
          - view_has_ad
          - view_session_id
          - viewer_connection_type
          - viewer_device_category
          - viewer_device_manufacturer
          - viewer_device_model
          - viewer_device_name
          - viewer_user_id
        type: string
    dimension_id:
      description: ID of the Dimension
      example: abcd1234
      in: path
      name: DIMENSION_ID
      required: true
      schema:
        type: string
    error_id:
      description: Filter video views by the provided error ID (as returned in the error_type_id field in the list video views endpoint). If you provide any as the error ID, this will filter the results to those with any error.
      in: query
      name: error_id
      required: false
      schema:
        format: int32
        type: integer
    filter_id:
      description: ID of the Filter
      example: abcd1234
      in: path
      name: FILTER_ID
      required: true
      schema:
        type: string
    filters:
      description: |
        Limit the results to rows that match conditions from provided key:value pairs. Must be provided as an array query string parameter.

        To exclude rows that match a certain condition, prepend a `!` character to the dimension.

        Possible filter names are the same as returned by the List Filters endpoint.

        Example:

          * `filters[]=operating_system:windows&filters[]=!country:US`
      explode: true
      in: query
      name: filters[]
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    group_by:
      description: Breakdown value to group the results by
      in: query
      name: group_by
      required: false
      schema:
        enum:
          - asn
          - asset_id
          - browser
          - browser_version
          - cdn
          - continent_code
          - country
          - custom_1
          - custom_2
          - custom_3
          - custom_4
          - custom_5
          - custom_6
          - custom_7
          - custom_8
          - custom_9
          - custom_10
          - exit_before_video_start
          - experiment_name
          - live_stream_id
          - operating_system
          - operating_system_version
          - playback_id
          - player_autoplay
          - player_error_code
          - player_mux_plugin_name
          - player_mux_plugin_version
          - player_name
          - player_preload
          - player_remote_played
          - player_software
          - player_software_version
          - player_version
          - preroll_ad_asset_hostname
          - preroll_ad_tag_hostname
          - preroll_played
          - preroll_requested
          - region
          - source_hostname
          - source_type
          - stream_type
          - sub_property_id
          - video_encoding_variant
          - video_id
          - video_series
          - video_startup_failure
          - video_title
          - view_drm_type
          - view_has_ad
          - view_session_id
          - viewer_connection_type
          - viewer_device_category
          - viewer_device_manufacturer
          - viewer_device_model
          - viewer_device_name
          - viewer_user_id
        type: string
    incident_id:
      description: ID of the Incident
      example: abcd1234
      in: path
      name: INCIDENT_ID
      required: true
      schema:
        type: string
    incident_status:
      description: Status to filter incidents by
      in: query
      name: status
      required: false
      schema:
        enum:
          - open
          - closed
          - expired
        type: string
    limit:
      description: Number of items to include in the response
      in: query
      name: limit
      required: false
      schema:
        default: 25
        format: int32
        type: integer
    list_asset_live_stream_id:
      description: Filter response to return all the assets for this live stream only
      in: query
      name: live_stream_id
      required: false
      schema:
        type: string
    list_asset_upload_id:
      description: Filter response to return an asset created from this direct upload only
      in: query
      name: upload_id
      required: false
      schema:
        type: string
    livestream_id:
      description: The live stream ID
      in: path
      name: LIVE_STREAM_ID
      required: true
      schema:
        type: string
    measurement:
      description: Measurement for the provided metric. If omitted, the default for the metric will be used.
      in: query
      name: measurement
      required: false
      schema:
        enum:
          - 95th
          - median
          - avg
          - count
          - sum
        type: string
    metric_id:
      description: ID of the Metric
      example: video_startup_time
      in: path
      name: METRIC_ID
      required: true
      schema:
        enum:
          - aggregate_startup_time
          - downscale_percentage
          - exits_before_video_start
          - live_stream_latency
          - max_downscale_percentage
          - max_upscale_percentage
          - page_load_time
          - playback_failure_percentage
          - playback_failure_score
          - player_startup_time
          - playing_time
          - rebuffer_count
          - rebuffer_duration
          - rebuffer_frequency
          - rebuffer_percentage
          - rebuffer_score
          - requests_for_first_preroll
          - seek_latency
          - startup_time_score
          - unique_viewers
          - upscale_percentage
          - video_quality_score
          - video_startup_preroll_load_time
          - video_startup_preroll_request_time
          - video_startup_time
          - viewer_experience_score
          - views
          - weighted_average_bitrate
          - video_startup_failure_percentage
        type: string
    monitoring_dimension:
      description: Dimension the specified value belongs to
      in: query
      name: dimension
      required: false
      schema:
        enum:
          - asn
          - cdn
          - country
          - operating_system
          - player_name
          - region
          - stream_type
          - sub_property_id
          - video_series
          - video_title
          - view_has_ad
        type: string
    monitoring_filters:
      description: |
        Limit the results to rows that match conditions from provided key:value pairs. Must be provided as an array query string parameter.

        To exclude rows that match a certain condition, prepend a `!` character to the dimension.

        Possible filter names are the same as returned by the List Monitoring Dimensions endpoint.

        Example:

          * `filters[]=operating_system:windows&filters[]=!country:US`
      explode: true
      in: query
      name: filters[]
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    monitoring_histogram_metric_id:
      description: ID of the Monitoring Histogram Metric
      example: video-startup-time
      in: path
      name: MONITORING_HISTOGRAM_METRIC_ID
      required: true
      schema:
        enum:
          - video-startup-time
        type: string
    monitoring_metric_id:
      description: ID of the Monitoring Metric
      example: current-concurrent-viewers
      in: path
      name: MONITORING_METRIC_ID
      required: true
      schema:
        enum:
          - current-concurrent-viewers
          - current-rebuffering-percentage
          - exits-before-video-start
          - playback-failure-percentage
          - current-average-bitrate
          - video-startup-failure-percentage
        type: string
    monitoring_timeseries_limit:
      description: |
        Number of items to include in each timestamp's `value` list.

        The default is 10, and the maximum is 100.
      in: query
      name: limit
      required: false
      schema:
        default: 10
        format: int32
        type: integer
    monitoring_timeseries_timeframe:
      description: |
        Timeframe window to limit results by. Must be provided as an array query string parameter (e.g. timeframe[]=).

        The default for this is the last 60 seconds of available data. Timeframes larger than 10 minutes are not allowed, and must be within the last 24 hours.
      explode: true
      in: query
      name: timeframe[]
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    monitoring_timeseries_timestamp:
      description: Timestamp to use as the start of the timeseries data. This value must be provided as a unix timestamp. Defaults to 30 minutes ago.
      in: query
      name: timestamp
      required: false
      schema:
        format: int32
        type: integer
    order_by:
      description: Value to order the results by
      in: query
      name: order_by
      required: false
      schema:
        enum:
          - negative_impact
          - value
          - views
          - field
        type: string
    order_direction:
      description: Sort order.
      in: query
      name: order_direction
      required: false
      schema:
        enum:
          - asc
          - desc
        type: string
    order_direction_deprecated:
      deprecated: true
      description: Sort order.
      in: query
      name: order_direction
      required: false
      schema:
        enum:
          - asc
          - desc
        type: string
    page:
      description: Offset by this many pages, of the size of `limit`
      in: query
      name: page
      required: false
      schema:
        default: 1
        format: int32
        type: integer
    playback_id:
      description: The live stream's playback ID.
      in: path
      name: PLAYBACK_ID
      required: true
      schema:
        type: string
    playback_restriction_id:
      description: ID of the Playback Restriction.
      in: path
      name: PLAYBACK_RESTRICTION_ID
      required: true
      schema:
        type: string
    realtime_dimension:
      description: Dimension the specified value belongs to
      in: query
      name: dimension
      required: false
      schema:
        enum:
          - asn
          - cdn
          - country
          - operating_system
          - player_name
          - region
          - stream_type
          - sub_property_id
          - video_series
          - video_title
        type: string
    realtime_histogram_metric_id:
      description: ID of the Realtime Histogram Metric
      example: video-startup-time
      in: path
      name: REALTIME_HISTOGRAM_METRIC_ID
      required: true
      schema:
        enum:
          - video-startup-time
        type: string
    realtime_metric_id:
      description: ID of the Realtime Metric
      example: current-concurrent-viewers
      in: path
      name: REALTIME_METRIC_ID
      required: true
      schema:
        enum:
          - current-concurrent-viewers
          - current-rebuffering-percentage
          - exits-before-video-start
          - playback-failure-percentage
          - current-average-bitrate
        type: string
    severity:
      description: Severity to filter incidents by
      in: query
      name: severity
      required: false
      schema:
        enum:
          - warning
          - alert
        type: string
    signing_key_id:
      description: The ID of the signing key.
      in: path
      name: SIGNING_KEY_ID
      required: true
      schema:
        type: string
    simulcast_target_id:
      description: The ID of the simulcast target.
      in: path
      name: SIMULCAST_TARGET_ID
      required: true
      schema:
        type: string
    space_id:
      description: The space ID.
      in: path
      name: SPACE_ID
      required: true
      schema:
        type: string
    stream_key:
      description: Filter response to return live stream for this stream key only
      in: query
      name: stream_key
      required: false
      schema:
        type: string
    timeframe:
      description: |
        Timeframe window to limit results by. Must be provided as an array query string parameter (e.g. timeframe[]=).

        Accepted formats are...

          * array of epoch timestamps e.g. `timeframe[]=1498867200&timeframe[]=1498953600`
          * duration string e.g. `timeframe[]=24:hours or timeframe[]=7:days`
      explode: true
      in: query
      name: timeframe[]
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    timeseries_group_by:
      description: |
        Time granularity to group results by. If this value is omitted, a default granularity is chosen based on the timeframe.

        For timeframes of less than 90 minutes, the default granularity is `minute`. Between 90 minutes and 6 hours, the default granularity is `ten_minutes`. Between 6 hours and 15 days inclusive, the default granularity is `hour`. The granularity of timeframes that exceed 15 days is `day`. This default behavior is subject to change; it is strongly suggested that you explicitly specify the granularity.
      in: query
      name: group_by
      required: false
      schema:
        enum:
          - minute
          - ten_minutes
          - hour
          - day
        type: string
    timestamp:
      description: Timestamp to limit results by. This value must be provided as a unix timestamp. Defaults to the current unix timestamp.
      in: query
      name: timestamp
      required: false
      schema:
        format: int32
        type: integer
    track_id:
      description: The track ID.
      in: path
      name: TRACK_ID
      required: true
      schema:
        type: string
    transcription_vocabulary_id:
      description: The ID of the Transcription Vocabulary.
      in: path
      name: TRANSCRIPTION_VOCABULARY_ID
      required: true
      schema:
        type: string
    upload_id:
      description: ID of the Upload
      example: abcd1234
      in: path
      name: UPLOAD_ID
      required: true
      schema:
        type: string
    value:
      description: Value to show all available metrics for
      in: query
      name: value
      required: false
      schema:
        type: string
    video_view_id:
      description: ID of the Video View
      example: abcd1234
      in: path
      name: VIDEO_VIEW_ID
      required: true
      schema:
        type: string
    viewer_id:
      description: Viewer ID to filter results by. This value may be provided by the integration, or may be created by Mux.
      in: query
      name: viewer_id
      required: false
      schema:
        type: string
  schemas:
    AbridgedVideoView:
      properties:
        country_code:
          nullable: true
          type: string
        error_type_id:
          format: int32
          nullable: true
          type: integer
        id:
          type: string
        player_error_code:
          nullable: true
          type: string
        player_error_message:
          nullable: true
          type: string
        total_row_count:
          format: int64
          type: integer
        video_title:
          nullable: true
          type: string
        view_end:
          type: string
        view_start:
          type: string
        viewer_application_name:
          nullable: true
          type: string
        viewer_os_family:
          nullable: true
          type: string
      type: object
    Asset:
      properties:
        aspect_ratio:
          description: The aspect ratio of the asset in the form of `width:height`, for example `16:9`.
          type: string
        created_at:
          description: Time the Asset was created, defined as a Unix timestamp (seconds since epoch).
          format: int64
          type: string
        duration:
          description: The duration of the asset in seconds (max duration for a single asset is 12 hours).
          format: double
          type: number
        encoding_tier:
          description: The encoding tier informs the cost, quality, and available platform features for the asset. By default the `smart` encoding tier is used.
          enum:
            - smart
            - baseline
          type: string
          x-mux-doc-decorators:
            - hidden
        errors:
          description: Object that describes any errors that happened when processing this asset.
          properties:
            messages:
              description: Error messages with more details.
              items:
                type: string
              type: array
            type:
              description: The type of error that occurred for this asset.
              type: string
          type: object
        id:
          description: Unique identifier for the Asset. Max 255 characters.
          type: string
        is_live:
          description: Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream.
          format: boolean
          type: boolean
        live_stream_id:
          description: Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream.
          type: string
        master:
          description: An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_acess` is set to `none` and when the temporary URL expires.
          properties:
            status:
              enum:
                - ready
                - preparing
                - errored
              type: string
            url:
              description: The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours.
              type: string
          type: object
        master_access:
          default: none
          enum:
            - temporary
            - none
          type: string
        max_resolution_tier:
          description: Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`.
          enum:
            - 1080p
            - 1440p
            - 2160p
          type: string
        max_stored_frame_rate:
          description: The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined.
          format: double
          type: number
        max_stored_resolution:
          deprecated: true
          description: This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.
          enum:
            - Audio only
            - SD
            - HD
            - FHD
            - UHD
          type: string
        mp4_support:
          default: none
          enum:
            - standard
            - none
          type: string
        non_standard_input_reasons:
          description: An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](https://docs.mux.com/guides/video/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.
          properties:
            audio_codec:
              description: The audio codec used on the input file. Non-AAC audio codecs are non-standard.
              type: string
            audio_edit_list:
              description: Audio Edit List reason indicates that the input file's audio track contains a complex Edit Decision List.
              enum:
                - non-standard
              type: string
            pixel_aspect_ratio:
              description: The video pixel aspect ratio of the input file.
              type: string
            unexpected_media_file_parameters:
              description: A catch-all reason when the input file in created with non-standard encoding parameters.
              enum:
                - non-standard
              type: string
            unsupported_pixel_format:
              description: The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p.
              type: string
            video_bitrate:
              description: The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what's considered standard which typically is 16 Mbps.
              enum:
                - high
              type: string
            video_codec:
              description: The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`.
              type: string
            video_edit_list:
              description: Video Edit List reason indicates that the input file's video track contains a complex Edit Decision List.
              enum:
                - non-standard
              type: string
            video_frame_rate:
              description: The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track.
              type: string
            video_gop_size:
              description: The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds.
              enum:
                - high
              type: string
            video_resolution:
              description: The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels.
              type: string
          type: object
        normalize_audio:
          default: false
          description: Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.
          type: boolean
        passthrough:
          description: Arbitrary user-supplied metadata set for the asset. Max 255 characters.
          type: string
        per_title_encode:
          deprecated: true
          format: boolean
          type: boolean
          x-mux-doc-decorators:
            - hidden
        playback_ids:
          description: An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/video/play-your-videos) for more details.
          items:
            $ref: "#/components/schemas/PlaybackID"
          type: array
        recording_times:
          description: An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a "slate" type.
          items:
            properties:
              duration:
                description: The duration of the live stream recorded. The time value is in seconds.
                format: double
                type: number
              started_at:
                description: The time at which the recording for the live stream started. The time value is Unix epoch time represented in ISO 8601 format.
                format: date-time
                type: string
              type:
                description: The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions.
                enum:
                  - content
                  - slate
                type: string
                x-mux-doc-decorators:
                  - public-beta
            type: object
          type: array
        resolution_tier:
          description: The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset.
          enum:
            - audio-only
            - 720p
            - 1080p
            - 1440p
            - 2160p
          type: string
        source_asset_id:
          description: Asset Identifier of the video used as the source for creating the clip.
          type: string
        static_renditions:
          description: An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](https://docs.mux.com/guides/video/download-your-videos) for more information.
          properties:
            files:
              description: Array of file objects.
              items:
                properties:
                  bitrate:
                    description: The bitrate in bits per second
                    format: int64
                    type: integer
                  ext:
                    description: Extension of the static rendition file
                    enum:
                      - mp4
                      - m4a
                    type: string
                  filesize:
                    description: The file size in bytes
                    format: int64
                    type: string
                  height:
                    description: The height of the static rendition's file in pixels
                    format: int32
                    type: integer
                  name:
                    enum:
                      - low.mp4
                      - medium.mp4
                      - high.mp4
                      - audio.m4a
                    type: string
                  width:
                    description: The width of the static rendition's file in pixels
                    format: int32
                    type: integer
                type: object
              type: array
            status:
              default: disabled
              description: Indicates the status of downloadable MP4 versions of this asset.
              enum:
                - ready
                - preparing
                - disabled
                - errored
              type: string
          type: object
        status:
          description: The status of the asset.
          enum:
            - preparing
            - ready
            - errored
          type: string
        test:
          description: True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs.
          format: boolean
          type: boolean
        tracks:
          description: The individual media tracks that make up an asset.
          items:
            $ref: "#/components/schemas/Track"
          type: array
        upload_id:
          description: Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload.
          type: string
      type: object
    AssetGeneratedSubtitleSettings:
      properties:
        language_code:
          default: en
          description: The language to generate subtitles in.
          enum:
            - en
            - en-US
          type: string
        name:
          description: A name for this subtitle track.
          type: string
        passthrough:
          description: Arbitrary metadata set for the subtitle track. Max 255 characters.
          type: string
      type: object
    AssetResponse:
      properties:
        data:
          $ref: "#/components/schemas/Asset"
      type: object
    BreakdownValue:
      properties:
        field:
          type: string
        negative_impact:
          format: int32
          type: integer
        total_watch_time:
          format: int64
          type: integer
        value:
          format: double
          type: number
        views:
          format: int64
          type: integer
      type: object
    Broadcast:
      properties:
        background:
          description: URL of an image to display as the background of the broadcast. Its dimensions should match the provided resolution.
          type: string
        id:
          description: Unique identifier for the broadcast. Max 255 characters.
          type: string
        layout:
          $ref: "#/components/schemas/BroadcastLayout"
        live_stream_id:
          description: The ID of the live stream that the broadcast will be sent to.
          type: string
        passthrough:
          description: "Arbitrary user-supplied metadata that will be included in the broadcast details and related webhooks. Max: 255 characters."
          type: string
        resolution:
          $ref: "#/components/schemas/BroadcastResolution"
        status:
          $ref: "#/components/schemas/BroadcastStatus"
      required:
        - id
        - live_stream_id
        - status
        - layout
        - resolution
      type: object
    BroadcastLayout:
      default: gallery
      description: |
        The layout used when broadcasting the space.

        The `gallery` layout will show participants in a grid that automatically resizes each participant’s stream to best fit up to 10 participants in the window.
        The `active-speaker` layout will show only the current active speaker, without a border.
        The `crop` layout uses as much of the available space as possible to show the participant's stream.

        Defaults to `gallery` if not set.
      enum:
        - gallery
        - active-speaker
        - crop
      type: string
    BroadcastResolution:
      default: 1920x1080
      description: The resolution of the composited video sent to the live stream. Defaults to `1920x1080` if not set.
      enum:
        - 1920x1080
        - 1280x720
        - 1080x1920
        - 720x1280
        - 1080x1080
        - 720x720
      type: string
    BroadcastResponse:
      properties:
        data:
          $ref: "#/components/schemas/Broadcast"
      required:
        - data
      type: object
    BroadcastStatus:
      description: The status of the broadcast. You can start and stop broadcasts with the `start` and `stop` APIs.
      enum:
        - idle
        - active
      type: string
    CreateAssetRequest:
      properties:
        encoding_tier:
          description: The encoding tier informs the cost, quality, and available platform features for the asset. By default the `smart` encoding tier is used.
          enum:
            - smart
            - baseline
          type: string
          x-mux-doc-decorators:
            - hidden
        input:
          description: An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.
          items:
            $ref: "#/components/schemas/InputSettings"
          type: array
        master_access:
          description: Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](/guides/video/download-your-videos) for more information.
          enum:
            - none
            - temporary
          type: string
        max_resolution_tier:
          description: Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`.
          enum:
            - 1080p
            - 1440p
            - 2160p
          type: string
        mp4_support:
          description: Specify what level (if any) of support for mp4 playback. In most cases you should use our default HLS-based streaming playback ({playback_id}.m3u8) which can automatically adjust to viewers' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](/guides/video/download-your-videos) for more information.
          enum:
            - none
            - standard
          type: string
        normalize_audio:
          default: false
          description: Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.
          format: boolean
          type: boolean
        passthrough:
          description: "Arbitrary user-supplied metadata that will be included in the asset details and related webhooks. Can be used to store your own ID for a video along with the asset. **Max: 255 characters**."
          type: string
        per_title_encode:
          deprecated: true
          format: boolean
          type: boolean
          x-mux-doc-decorators:
            - hidden
        playback_policy:
          description: 'An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include: `"public"` (anyone with the playback URL can stream the asset). And `"signed"` (an additional access token is required to play the asset). If no playback_policy is set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy.'
          items:
            $ref: "#/components/schemas/PlaybackPolicy"
          type: array
        test:
          description: Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs.
          format: boolean
          type: boolean
      type: object
    CreateBroadcastRequest:
      properties:
        background:
          description: URL of an image to display as the background of the broadcast. Its dimensions should match the provided resolution.
          type: string
        layout:
          $ref: "#/components/schemas/BroadcastLayout"
        live_stream_id:
          description: The ID of the live stream that you want to broadcast to.
          type: string
        passthrough:
          description: "Arbitrary user-supplied metadata that will be included in the broadcast details and related webhooks. Max: 255 characters."
          type: string
        resolution:
          $ref: "#/components/schemas/BroadcastResolution"
      required:
        - live_stream_id
      type: object
    CreateLiveStreamRequest:
      properties:
        audio_only:
          description: Force the live stream to only process the audio track when the value is set to true. Mux drops the video track if broadcasted.
          type: boolean
        embedded_subtitles:
          description: Describe the embedded closed caption contents of the incoming live stream.
          items:
            $ref: "#/components/schemas/LiveStreamEmbeddedSubtitleSettings"
          type: array
        generated_subtitles:
          description: Configure the incoming live stream to include subtitles created with automatic speech recognition. Each Asset created from a live stream with `generated_subtitles` configured will automatically receive two text tracks. The first of these will have a `text_source` value of `generated_live`, and will be available with `ready` status as soon as the stream is live. The second text track will have a `text_source` value of `generated_live_final` and will contain subtitles with improved accuracy, timing, and formatting. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.
          items:
            $ref: "#/components/schemas/LiveStreamGeneratedSubtitleSettings"
          type: array
        latency_mode:
          description: "Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags. The Low Latency value is a beta feature. Read more here: https://mux.com/blog/introducing-low-latency-live-streaming/"
          enum:
            - low
            - reduced
            - standard
          type: string
          x-mux-doc-decorators:
            - public-beta
        low_latency:
          deprecated: true
          description: This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Setting this option will enable compatibility with the LL-HLS specification for low-latency streaming. This typically has lower latency than Reduced Latency streams, and cannot be combined with Reduced Latency.
          format: boolean
          type: boolean
          x-mux-doc-decorators:
            - public-beta
            - hidden
        max_continuous_duration:
          $ref: "#/components/schemas/MaxContinuousDuration"
        new_asset_settings:
          $ref: "#/components/schemas/CreateAssetRequest"
        passthrough:
          type: string
        playback_policy:
          items:
            $ref: "#/components/schemas/PlaybackPolicy"
          type: array
        reconnect_slate_url:
          description: The URL of the image file that Mux should download and use as slate media during interruptions of the live stream media. This file will be downloaded each time a new recorded asset is created from the live stream. If this is not set, the default slate media will be used.
          type: string
        reconnect_window:
          default: 60
          description: |
            When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset. Defaults to 60 seconds on the API if not specified.

            If not specified directly, Standard Latency streams have a Reconnect Window of 60 seconds; Reduced and Low Latency streams have a default of 0 seconds, or no Reconnect Window. For that reason, we suggest specifying a value other than zero for Reduced and Low Latency streams.

            Reduced and Low Latency streams with a Reconnect Window greater than zero will insert slate media into the recorded asset while waiting for the streaming software to reconnect or when there are brief interruptions in the live stream media. When using a Reconnect Window setting higher than 60 seconds with a Standard Latency stream, we highly recommend enabling slate with the `use_slate_for_standard_latency` option.
          format: float
          maximum: 1800
          minimum: 0
          type: number
        reduced_latency:
          deprecated: true
          description: "This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this if you want lower latency for your live stream. Read more here: https://mux.com/blog/reduced-latency-for-mux-live-streaming-now-available/"
          format: boolean
          type: boolean
        simulcast_targets:
          items:
            $ref: "#/components/schemas/CreateSimulcastTargetRequest"
          type: array
        test:
          description: Marks the live stream as a test live stream when the value is set to true. A test live stream can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test live streams created. Test live streams are watermarked with the Mux logo and limited to 5 minutes. The test live stream is disabled after the stream is active for 5 mins and the recorded asset also deleted after 24 hours.
          format: boolean
          type: boolean
        use_slate_for_standard_latency:
          default: false
          description: By default, Standard Latency live streams do not have slate media inserted while waiting for live streaming software to reconnect to Mux. Setting this to true enables slate insertion on a Standard Latency stream.
          format: boolean
          type: boolean
      type: object
    CreatePlaybackIDRequest:
      properties:
        policy:
          $ref: "#/components/schemas/PlaybackPolicy"
      type: object
    CreatePlaybackIDResponse:
      properties:
        data:
          $ref: "#/components/schemas/PlaybackID"
      type: object
    CreatePlaybackRestrictionRequest:
      properties:
        referrer:
          $ref: "#/components/schemas/ReferrerDomainRestriction"
      type: object
    CreateSimulcastTargetRequest:
      properties:
        passthrough:
          description: Arbitrary user-supplied metadata set by you when creating a simulcast target.
          type: string
        stream_key:
          description: Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to.
          type: string
        url:
          description: "RTMP hostname including application name for the third party live streaming service. Example: `rtmp://live.example.com/app`."
          type: string
      required:
        - url
      type: object
    CreateSpaceRequest:
      properties:
        broadcasts:
          description: An array of broadcast destinations you want to stream the space to. **Note:** By default only a single broadcast destination can be specified. Contact Mux support if you need more.
          items:
            $ref: "#/components/schemas/CreateBroadcastRequest"
          type: array
        passthrough:
          description: "Arbitrary user-supplied metadata that will be included in the space details and related webhooks. Max: 255 characters."
          type: string
        type:
          $ref: "#/components/schemas/SpaceType"
      type: object
      x-mux-no-required-properties: true
    CreateTrackRequest:
      properties:
        closed_captions:
          description: Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH).
          type: boolean
        language_code:
          description: The language code value must be a valid BCP 47 specification compliant value. For example, en for English or en-US for the US version of English.
          type: string
        name:
          description: The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate the `text` or `audio` track with this value. For example, set the value to "English" for subtitles text track with `language_code` as en-US. If this parameter is not included, Mux will auto-populate a value based on the `language_code` value.
          type: string
        passthrough:
          description: Arbitrary user-supplied metadata set for the track either when creating the asset or track.
          type: string
        text_type:
          enum:
            - subtitles
          type: string
        type:
          enum:
            - text
            - audio
          type: string
        url:
          description: |
            The URL of the file that Mux should download and use.
            * For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/video/minimize-processing-time).
            * For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.
          type: string
      required:
        - url
        - type
        - text_type
        - language_code
      type: object
    CreateTrackResponse:
      properties:
        data:
          $ref: "#/components/schemas/Track"
      type: object
    CreateTranscriptionVocabularyRequest:
      properties:
        name:
          description: The user-supplied name of the Transcription Vocabulary.
          type: string
        passthrough:
          description: Arbitrary user-supplied metadata set for the Transcription Vocabulary. Max 255 characters.
          type: string
        phrases:
          description: Phrases, individual words, or proper names to include in the Transcription Vocabulary. When the Transcription Vocabulary is attached to a live stream's `generated_subtitles`, the probability of successful speech recognition for these words or phrases is boosted.
          items:
            $ref: "#/components/schemas/TranscriptionVocabularyPhrase"
          maxItems: 1000
          type: array
      required:
        - phrases
      type: object
    CreateUploadRequest:
      properties:
        cors_origin:
          description: If the upload URL will be used in a browser, you must specify the origin in order for the signed URL to have the correct CORS headers.
          type: string
        new_asset_settings:
          $ref: "#/components/schemas/CreateAssetRequest"
        test:
          format: boolean
          type: boolean
        timeout:
          default: 3600
          description: Max time in seconds for the signed upload URL to be valid. If a successful upload has not occurred before the timeout limit, the direct upload is marked `timed_out`
          format: int32
          maximum: 604800
          minimum: 60
          type: integer
      required:
        - new_asset_settings
      type: object
    DeliveryReport:
      properties:
        asset_duration:
          description: The duration of the asset in seconds.
          format: double
          type: number
        asset_id:
          description: Unique identifier for the asset.
          type: string
        asset_resolution_tier:
          description: The resolution tier that the asset was ingested at, affecting billing for ingest & storage
          enum:
            - audio-only
            - 720p
            - 1080p
            - 1440p
            - 2160p
          type: string
        asset_state:
          description: The state of the asset.
          enum:
            - ready
            - errored
            - deleted
          type: string
        created_at:
          description: Time at which the asset was created. Measured in seconds since the Unix epoch.
          type: string
        deleted_at:
          description: If exists, time at which the asset was deleted. Measured in seconds since the Unix epoch.
          type: string
        delivered_seconds:
          description: Total number of delivered seconds during this time window.
          format: double
          type: number
        delivered_seconds_by_resolution:
          description: Seconds delivered broken into resolution tiers. Each tier will only be displayed if there was content delivered in the tier.
          properties:
            tier_1080p:
              description: Total number of delivered seconds during this time window that had a resolution larger than the 720p tier but less than or equal to the 1440p tier (over 921,600 and <= 2,073,600 pixels total).
              format: double
              type: number
            tier_1440p:
              description: Total number of delivered seconds during this time window that had a resolution larger than the 1080p tier but less than or equal to the 2160p tier (over 2,073,600 and <= 4,194,304 pixels total).
              format: double
              type: number
            tier_2160p:
              description: Total number of delivered seconds during this time window that had a resolution larger than the 1440p tier (over 4,194,304 pixels total).
              format: double
              type: number
            tier_720p:
              description: Total number of delivered seconds during this time window that had a resolution within the 720p tier (up to 921,600 pixels total, based on typical 1280x720).
              format: double
              type: number
            tier_audio_only:
              description: Total number of delivered seconds during this time window that had a resolution of audio only.
              format: double
              type: number
          type: object
        live_stream_id:
          description: Unique identifier for the live stream that created the asset.
          type: string
        passthrough:
          description: The `passthrough` value for the asset.
          type: string
      type: object
    DimensionValue:
      properties:
        total_count:
          format: int64
          type: integer
        value:
          type: string
      type: object
    DisableLiveStreamResponse:
      properties:
        data:
          type: object
      type: object
    EnableLiveStreamResponse:
      properties:
        data:
          type: object
      type: object
    Error:
      properties:
        code:
          description: The error code
          format: int64
          type: integer
        count:
          description: The total number of views that experiend this error.
          format: int64
          type: integer
        description:
          description: Description of the error.
          type: string
        id:
          description: A unique identifier for this error.
          format: int64
          type: integer
        last_seen:
          description: The last time this error was seen (ISO 8601 timestamp).
          type: string
        message:
          description: The error message.
          type: string
        notes:
          description: Notes that are attached to this error.
          type: string
        percentage:
          description: The percentage of views that experienced this error.
          format: double
          type: number
      type: object
    ExportDate:
      properties:
        export_date:
          format: date
          type: string
        files:
          items:
            $ref: "#/components/schemas/ExportFile"
          type: array
      type: object
    ExportFile:
      properties:
        path:
          type: string
        type:
          type: string
        version:
          format: int32
          type: integer
      type: object
    FilterValue:
      properties:
        total_count:
          format: int64
          type: integer
        value:
          type: string
      type: object
    GetAssetInputInfoResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/InputInfo"
          type: array
      type: object
    GetAssetOrLiveStreamIdResponse:
      properties:
        data:
          properties:
            id:
              description: The Playback ID used to retrieve the corresponding asset or the live stream ID
              type: string
            object:
              description: Describes the Asset or LiveStream object associated with the playback ID.
              properties:
                id:
                  description: The identifier of the object.
                  type: string
                type:
                  description: Identifies the object type associated with the playback ID.
                  enum:
                    - asset
                    - live_stream
                  type: string
              type: object
            policy:
              $ref: "#/components/schemas/PlaybackPolicy"
          type: object
      type: object
    GetAssetPlaybackIDResponse:
      properties:
        data:
          $ref: "#/components/schemas/PlaybackID"
      type: object
    GetLiveStreamPlaybackIDResponse:
      properties:
        data:
          $ref: "#/components/schemas/PlaybackID"
      type: object
    GetMetricTimeseriesDataResponse:
      properties:
        data:
          items:
            items:
              type: string
            type: array
          type: array
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    GetMonitoringBreakdownResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/MonitoringBreakdownValue"
          type: array
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    GetMonitoringBreakdownTimeseriesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/MonitoringBreakdownTimeseriesValues"
          type: array
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    GetMonitoringHistogramTimeseriesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/MonitoringHistogramTimeseriesDatapoint"
          type: array
        meta:
          properties:
            buckets:
              items:
                $ref: "#/components/schemas/MonitoringHistogramTimeseriesBucket"
              type: array
          type: object
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    GetMonitoringTimeseriesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/MonitoringTimeseriesDatapoint"
          type: array
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    GetOverallValuesResponse:
      properties:
        data:
          $ref: "#/components/schemas/OverallValues"
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    GetRealTimeBreakdownResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/RealTimeBreakdownValue"
          type: array
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    GetRealTimeHistogramTimeseriesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/RealTimeHistogramTimeseriesDatapoint"
          type: array
        meta:
          properties:
            buckets:
              items:
                $ref: "#/components/schemas/RealTimeHistogramTimeseriesBucket"
              type: array
          type: object
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    GetRealTimeTimeseriesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/RealTimeTimeseriesDatapoint"
          type: array
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    Incident:
      properties:
        affected_views:
          format: int64
          type: integer
        affected_views_per_hour:
          format: int64
          type: integer
        affected_views_per_hour_on_open:
          format: int64
          type: integer
        breakdowns:
          items:
            $ref: "#/components/schemas/IncidentBreakdown"
          type: array
        description:
          type: string
        error_description:
          type: string
        id:
          type: string
        impact:
          type: string
        incident_key:
          type: string
        measured_value:
          format: double
          type: number
        measured_value_on_close:
          format: double
          type: number
        measurement:
          type: string
        notification_rules:
          items:
            $ref: "#/components/schemas/IncidentNotificationRule"
          type: array
        notifications:
          items:
            $ref: "#/components/schemas/IncidentNotification"
          type: array
        resolved_at:
          type: string
        sample_size:
          format: int64
          type: integer
        sample_size_unit:
          type: string
        severity:
          type: string
        started_at:
          type: string
        status:
          type: string
        threshold:
          format: double
          type: number
      type: object
    IncidentBreakdown:
      properties:
        id:
          type: string
        name:
          type: string
        value:
          type: string
      type: object
    IncidentNotification:
      properties:
        attempted_at:
          type: string
        id:
          format: int64
          type: integer
        queued_at:
          type: string
      type: object
    IncidentNotificationRule:
      properties:
        action:
          type: string
        id:
          type: string
        property_id:
          type: string
        rules:
          items:
            $ref: "#/components/schemas/NotificationRule"
          type: array
        status:
          type: string
      type: object
    IncidentResponse:
      properties:
        data:
          $ref: "#/components/schemas/Incident"
        timeframe:
          items:
            format: int64
            type: integer
          type: array
      type: object
    InputFile:
      properties:
        container_format:
          type: string
        tracks:
          items:
            $ref: "#/components/schemas/InputTrack"
          type: array
      type: object
    InputInfo:
      properties:
        file:
          $ref: "#/components/schemas/InputFile"
        settings:
          $ref: "#/components/schemas/InputSettings"
      type: object
    InputSettings:
      description: An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.
      properties:
        closed_captions:
          description: Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`.
          type: boolean
        end_time:
          description: The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format.
          format: double
          type: number
        generated_subtitles:
          description: Generate subtitle tracks using automatic speech recognition using this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`.
          items:
            $ref: "#/components/schemas/AssetGeneratedSubtitleSettings"
          type: array
        language_code:
          description: The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types.
          type: string
        name:
          description: The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be "English" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value.
          type: string
        overlay_settings:
          description: An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.
          properties:
            height:
              description: How tall the overlay should appear. Can be expressed as a percent ("10%") or as a pixel value ("100px"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width.
              type: string
            horizontal_align:
              description: Where the horizontal positioning of the overlay/watermark should begin from.
              enum:
                - left
                - center
                - right
              type: string
            horizontal_margin:
              description: The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent ("10%") or as a pixel value ("100px"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left.
              type: string
            opacity:
              description: How opaque the overlay should appear, expressed as a percent. (Default 100%)
              type: string
            vertical_align:
              description: Where the vertical positioning of the overlay/watermark should begin from. Defaults to `"top"`
              enum:
                - top
                - middle
                - bottom
              type: string
            vertical_margin:
              description: The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent ("10%") or as a pixel value ("100px"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top.
              type: string
            width:
              description: How wide the overlay should appear. Can be expressed as a percent ("10%") or as a pixel value ("100px"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height.
              type: string
          type: object
        passthrough:
          description: This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`.
          type: string
        start_time:
          description: The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format.
          format: double
          type: number
        text_type:
          description: Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks.
          enum:
            - subtitles
          type: string
        type:
          description: This parameter is required for `text` type tracks.
          enum:
            - video
            - audio
            - text
          type: string
        url:
          description: |
            The URL of the file that Mux should download and use.
            * For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/video/minimize-processing-time).
            * For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/video/minimize-processing-time).
            * For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.
            * For Watermarking or Overlay, the URL is the location of the watermark image.
            * When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.
            The url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.
          type: string
      type: object
    InputTrack:
      properties:
        channels:
          format: int64
          type: integer
        duration:
          format: double
          type: number
        encoding:
          type: string
        frame_rate:
          format: double
          type: number
        height:
          format: int64
          type: integer
        sample_rate:
          format: int64
          type: integer
        sample_size:
          format: int64
          type: integer
        type:
          type: string
        width:
          format: int64
          type: integer
      type: object
    Insight:
      properties:
        filter_column:
          type: string
        filter_value:
          type: string
        metric:
          format: double
          type: number
        negative_impact_score:
          format: float
          type: number
        total_views:
          format: int64
          type: integer
        total_watch_time:
          format: int64
          type: integer
      type: object
    ListAllMetricValuesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Score"
          type: array
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    ListAssetsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Asset"
          type: array
      type: object
    ListBreakdownValuesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/BreakdownValue"
          type: array
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    ListDeliveryUsageResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/DeliveryReport"
          type: array
        limit:
          description: Number of assets returned in this response. Default value is 100.
          format: int64
          type: integer
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    ListDimensionValuesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/DimensionValue"
          type: array
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    ListDimensionsResponse:
      properties:
        data:
          properties:
            advanced:
              items:
                type: string
              type: array
            basic:
              items:
                type: string
              type: array
          type: object
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    ListErrorsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Error"
          type: array
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    ListExportsResponse:
      properties:
        data:
          items:
            type: string
          type: array
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    ListFilterValuesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/FilterValue"
          type: array
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    ListFiltersResponse:
      properties:
        data:
          properties:
            advanced:
              items:
                type: string
              type: array
            basic:
              items:
                type: string
              type: array
          type: object
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    ListIncidentsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Incident"
          type: array
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    ListInsightsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Insight"
          type: array
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    ListLiveStreamsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/LiveStream"
          type: array
      type: object
    ListMonitoringDimensionsResponse:
      properties:
        data:
          items:
            properties:
              display_name:
                type: string
              name:
                type: string
            type: object
          type: array
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    ListMonitoringMetricsResponse:
      properties:
        data:
          items:
            properties:
              display_name:
                type: string
              name:
                type: string
            type: object
          type: array
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    ListPlaybackRestrictionsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/PlaybackRestriction"
          type: array
      type: object
    ListRealTimeDimensionsResponse:
      properties:
        data:
          items:
            properties:
              display_name:
                type: string
              name:
                type: string
            type: object
          type: array
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    ListRealTimeMetricsResponse:
      properties:
        data:
          items:
            properties:
              display_name:
                type: string
              name:
                type: string
            type: object
          type: array
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    ListRelatedIncidentsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Incident"
          type: array
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    ListSigningKeysResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/SigningKey"
          type: array
      type: object
    ListSpacesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Space"
          type: array
      required:
        - data
      type: object
    ListTranscriptionVocabulariesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/TranscriptionVocabulary"
          type: array
      type: object
    ListUploadsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Upload"
          type: array
      type: object
    ListVideoViewExportsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/ExportDate"
          type: array
        timeframe:
          items:
            format: int32
            type: integer
          type: array
        total_row_count:
          format: int32
          type: integer
      type: object
    ListVideoViewsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/AbridgedVideoView"
          type: array
        timeframe:
          items:
            format: int64
            type: integer
          type: array
        total_row_count:
          format: int64
          type: integer
      type: object
    LiveStream:
      properties:
        active_asset_id:
          description: The Asset that is currently being created if there is an active broadcast.
          type: string
        audio_only:
          description: The live stream only processes the audio track if the value is set to true. Mux drops the video track if broadcasted.
          type: boolean
        created_at:
          description: Time the Live Stream was created, defined as a Unix timestamp (seconds since epoch).
          format: int64
          type: string
        embedded_subtitles:
          description: Describes the embedded closed caption configuration of the incoming live stream.
          items:
            $ref: "#/components/schemas/LiveStreamEmbeddedSubtitleSettings"
          type: array
        generated_subtitles:
          description: Configure the incoming live stream to include subtitles created with automatic speech recognition. Each Asset created from a live stream with `generated_subtitles` configured will automatically receive two text tracks. The first of these will have a `text_source` value of `generated_live`, and will be available with `ready` status as soon as the stream is live. The second text track will have a `text_source` value of `generated_live_final` and will contain subtitles with improved accuracy, timing, and formatting. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.
          items:
            $ref: "#/components/schemas/LiveStreamGeneratedSubtitleSettings"
          type: array
        id:
          description: Unique identifier for the Live Stream. Max 255 characters.
          type: string
        latency_mode:
          description: "Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags. The Low Latency value is a beta feature. Read more here: https://mux.com/blog/introducing-low-latency-live-streaming/"
          enum:
            - low
            - reduced
            - standard
          type: string
          x-mux-doc-decorators:
            - public-beta
        low_latency:
          deprecated: true
          description: This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Setting this option will enable compatibility with the LL-HLS specification for low-latency streaming. This typically has lower latency than Reduced Latency streams, and cannot be combined with Reduced Latency.
          format: boolean
          type: boolean
          x-mux-doc-decorators:
            - public-beta
            - hidden
        max_continuous_duration:
          $ref: "#/components/schemas/MaxContinuousDuration"
        new_asset_settings:
          $ref: "#/components/schemas/CreateAssetRequest"
        passthrough:
          description: Arbitrary user-supplied metadata set for the asset. Max 255 characters.
          type: string
        playback_ids:
          description: An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/video/play-your-videos) for more details.
          items:
            $ref: "#/components/schemas/PlaybackID"
          type: array
        recent_asset_ids:
          description: An array of strings with the most recent Asset IDs that were created from this Live Stream. The most recently generated Asset ID is the last entry in the list.
          items:
            type: string
          type: array
        reconnect_slate_url:
          description: The URL of the image file that Mux should download and use as slate media during interruptions of the live stream media. This file will be downloaded each time a new recorded asset is created from the live stream. If this is not set, the default slate media will be used.
          type: string
        reconnect_window:
          default: 60
          description: |
            When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset. **Max**: 1800s (30 minutes).

            If not specified directly, Standard Latency streams have a Reconnect Window of 60 seconds; Reduced and Low Latency streams have a default of 0 seconds, or no Reconnect Window. For that reason, we suggest specifying a value other than zero for Reduced and Low Latency streams.

            Reduced and Low Latency streams with a Reconnect Window greater than zero will insert slate media into the recorded asset while waiting for the streaming software to reconnect or when there are brief interruptions in the live stream media. When using a Reconnect Window setting higher than 60 seconds with a Standard Latency stream, we highly recommend enabling slate with the `use_slate_for_standard_latency` option.
          format: float
          maximum: 1800
          minimum: 0
          type: number
        reduced_latency:
          deprecated: true
          description: This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this if you want lower latency for your live stream. See the [Reduce live stream latency guide](https://docs.mux.com/guides/video/reduce-live-stream-latency) to understand the tradeoffs.
          format: boolean
          type: boolean
        simulcast_targets:
          description: Each Simulcast Target contains configuration details to broadcast (or "restream") a live stream to a third-party streaming service. [See the Stream live to 3rd party platforms guide](https://docs.mux.com/guides/video/stream-live-to-3rd-party-platforms).
          items:
            $ref: "#/components/schemas/SimulcastTarget"
          type: array
        status:
          $ref: "#/components/schemas/LiveStreamStatus"
        stream_key:
          description: Unique key used for streaming to a Mux RTMP endpoint. This should be considered as sensitive as credentials, anyone with this stream key can begin streaming.
          type: string
        test:
          description: True means this live stream is a test live stream. Test live streams can be used to help evaluate the Mux Video APIs for free. There is no limit on the number of test live streams, but they are watermarked with the Mux logo, and limited to 5 minutes. The test live stream is disabled after the stream is active for 5 mins and the recorded asset also deleted after 24 hours.
          format: boolean
          type: boolean
        use_slate_for_standard_latency:
          default: false
          description: By default, Standard Latency live streams do not have slate media inserted while waiting for live streaming software to reconnect to Mux. Setting this to true enables slate insertion on a Standard Latency stream.
          format: boolean
          type: boolean
      type: object
    LiveStreamEmbeddedSubtitleSettings:
      properties:
        language_channel:
          default: cc1
          description: CEA-608 caption channel to read data from.
          enum:
            - cc1
            - cc2
            - cc3
            - cc4
          type: string
        language_code:
          default: en
          description: The language of the closed caption stream. Value must be BCP 47 compliant.
          type: string
        name:
          description: A name for this live stream closed caption track.
          type: string
        passthrough:
          description: Arbitrary user-supplied metadata set for the live stream closed caption track. Max 255 characters.
          type: string
      type: object
    LiveStreamGeneratedSubtitleSettings:
      properties:
        language_code:
          default: en
          description: The language to generate subtitles in.
          enum:
            - en
            - en-US
          type: string
        name:
          description: A name for this live stream subtitle track.
          type: string
        passthrough:
          description: Arbitrary metadata set for the live stream subtitle track. Max 255 characters.
          type: string
        transcription_vocabulary_ids:
          description: Unique identifiers for existing Transcription Vocabularies to use while generating subtitles for the live stream. If the Transcription Vocabularies provided collectively have more than 1000 phrases, only the first 1000 phrases will be included.
          items:
            type: string
          type: array
      type: object
    LiveStreamResponse:
      properties:
        data:
          $ref: "#/components/schemas/LiveStream"
      type: object
    LiveStreamStatus:
      description: "`idle` indicates that there is no active broadcast. `active` indicates that there is an active broadcast and `disabled` status indicates that no future RTMP streams can be published."
      enum:
        - active
        - idle
        - disabled
      type: string
    MaxContinuousDuration:
      default: 43200
      description: The time in seconds a live stream may be continuously active before being disconnected. Defaults to 12 hours.
      format: int32
      maximum: 43200
      minimum: 60
      type: integer
    Metric:
      properties:
        measurement:
          type: string
        metric:
          type: string
        name:
          type: string
        type:
          type: string
        value:
          format: double
          type: number
      type: object
    MonitoringBreakdownTimeseriesDatapoint:
      properties:
        concurrent_viewers:
          format: int64
          type: integer
        metric_value:
          format: double
          type: number
        value:
          type: string
      type: object
    MonitoringBreakdownTimeseriesValues:
      properties:
        date:
          type: string
        values:
          items:
            $ref: "#/components/schemas/MonitoringBreakdownTimeseriesDatapoint"
          type: array
      type: object
    MonitoringBreakdownValue:
      properties:
        concurrent_viewers:
          format: int64
          type: integer
        display_value:
          type: string
        metric_value:
          format: double
          type: number
        negative_impact:
          format: int64
          type: integer
        value:
          type: string
      type: object
    MonitoringHistogramTimeseriesBucket:
      properties:
        end:
          format: int64
          type: integer
        start:
          format: int64
          type: integer
      type: object
    MonitoringHistogramTimeseriesBucketValues:
      properties:
        count:
          format: int64
          type: integer
        percentage:
          format: double
          type: number
      type: object
    MonitoringHistogramTimeseriesDatapoint:
      properties:
        average:
          format: double
          type: number
        bucket_values:
          items:
            $ref: "#/components/schemas/MonitoringHistogramTimeseriesBucketValues"
          type: array
        max_percentage:
          format: double
          type: number
        median:
          format: double
          type: number
        p95:
          format: double
          type: number
        sum:
          format: int64
          type: integer
        timestamp:
          type: string
      type: object
    MonitoringTimeseriesDatapoint:
      properties:
        concurrent_viewers:
          format: int64
          type: integer
        date:
          type: string
        value:
          format: double
          type: number
      type: object
    NotificationRule:
      properties:
        id:
          type: string
        name:
          type: string
        value:
          type: string
      type: object
    OverallValues:
      properties:
        global_value:
          format: double
          type: number
        total_views:
          format: int64
          type: integer
        total_watch_time:
          format: int64
          type: integer
        value:
          format: double
          type: number
      type: object
    PlaybackID:
      properties:
        id:
          description: Unique identifier for the PlaybackID
          type: string
        policy:
          $ref: "#/components/schemas/PlaybackPolicy"
      type: object
    PlaybackPolicy:
      description: |
        * `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`

        * `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/video/secure-video-playback) for details about creating tokens.
      enum:
        - public
        - signed
      type: string
    PlaybackRestriction:
      properties:
        created_at:
          description: Time the Playback Restriction was created, defined as a Unix timestamp (seconds since epoch).
          format: int64
          type: string
        id:
          description: Unique identifier for the Playback Restriction. Max 255 characters.
          type: string
        referrer:
          $ref: "#/components/schemas/ReferrerDomainRestriction"
        updated_at:
          description: Time the Playback Restriction was last updated, defined as a Unix timestamp (seconds since epoch).
          format: int64
          type: string
      type: object
    PlaybackRestrictionResponse:
      properties:
        data:
          $ref: "#/components/schemas/PlaybackRestriction"
      type: object
    RealTimeBreakdownValue:
      properties:
        concurrent_viewers:
          format: int64
          type: integer
        display_value:
          type: string
        metric_value:
          format: double
          type: number
        negative_impact:
          format: int64
          type: integer
        value:
          type: string
      type: object
    RealTimeHistogramTimeseriesBucket:
      properties:
        end:
          format: int64
          type: integer
        start:
          format: int64
          type: integer
      type: object
    RealTimeHistogramTimeseriesBucketValues:
      properties:
        count:
          format: int64
          type: integer
        percentage:
          format: double
          type: number
      type: object
    RealTimeHistogramTimeseriesDatapoint:
      properties:
        average:
          format: double
          type: number
        bucket_values:
          items:
            $ref: "#/components/schemas/RealTimeHistogramTimeseriesBucketValues"
          type: array
        max_percentage:
          format: double
          type: number
        median:
          format: double
          type: number
        p95:
          format: double
          type: number
        sum:
          format: int64
          type: integer
        timestamp:
          type: string
      type: object
    RealTimeTimeseriesDatapoint:
      properties:
        concurrent_viewers:
          format: int64
          type: integer
        date:
          type: string
        value:
          format: double
          type: number
      type: object
    ReferrerDomainRestriction:
      description: A list of domains allowed to play your videos.
      properties:
        allow_no_referrer:
          default: false
          description: A boolean to determine whether to allow or deny HTTP requests without `Referer` HTTP request header. Playback requests coming from non-web/native applications like iOS, Android or smart TVs will not have a `Referer` HTTP header. Set this value to `true` to allow these playback requests.
          type: boolean
        allowed_domains:
          description: |
            List of domains allowed to play videos. Possible values are
              * `[]` Empty Array indicates deny video playback requests for all domains
              * `["*"]` A Single Wildcard `*` entry means allow video playback requests from any domain
              *  `["*.example.com", "foo.com"]` A list of up to 10 domains or valid dns-style wildcards
          items:
            type: string
          type: array
      type: object
    Score:
      properties:
        items:
          items:
            $ref: "#/components/schemas/Metric"
          type: array
        metric:
          type: string
        name:
          type: string
        value:
          format: double
          type: number
        view_count:
          format: int64
          type: integer
        watch_time:
          format: int64
          type: integer
      type: object
    SignalLiveStreamCompleteResponse:
      properties:
        data:
          type: object
      type: object
    SigningKey:
      properties:
        created_at:
          description: Time at which the object was created. Measured in seconds since the Unix epoch.
          format: int64
          type: string
        id:
          description: Unique identifier for the Signing Key.
          type: string
        private_key:
          description: A Base64 encoded private key that can be used with the RS256 algorithm when creating a [JWT](https://jwt.io/). **Note that this value is only returned once when creating a URL signing key.**
          format: byte
          type: string
      type: object
    SigningKeyResponse:
      properties:
        data:
          $ref: "#/components/schemas/SigningKey"
      type: object
    SimulcastTarget:
      properties:
        id:
          description: ID of the Simulcast Target
          type: string
        passthrough:
          description: Arbitrary user-supplied metadata set when creating a simulcast target.
          type: string
        status:
          description: |
            The current status of the simulcast target. See Statuses below for detailed description.
              * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.
              * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.
              * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.
              * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. Compared to other errored statuses in the Mux Video API, a simulcast may transition back into the broadcasting state if a connection with the service can be re-established.
          enum:
            - idle
            - starting
            - broadcasting
            - errored
          type: string
        stream_key:
          description: Stream Key represents an stream identifier for the third party live streaming service to simulcast the parent live stream too.
          type: string
        url:
          description: RTMP hostname including the application name for the third party live streaming service.
          type: string
      type: object
    SimulcastTargetResponse:
      properties:
        data:
          $ref: "#/components/schemas/SimulcastTarget"
      type: object
    Space:
      properties:
        active_session_id:
          description: Unique identifier for the current lifecycle of the space. Only set when the space is `active` and is set to a new value each time the space transitions from `idle` to `active`. This value is useful for logging and debugging issues. Max 255 characters.
          type: string
        broadcasts:
          description: An array of broadcast destinations.
          items:
            $ref: "#/components/schemas/Broadcast"
          type: array
        created_at:
          description: Time the space was created, defined as a Unix timestamp (seconds since epoch).
          format: int64
          type: string
        id:
          description: Unique identifier for the space. Max 255 characters.
          type: string
        passthrough:
          description: "Arbitrary user-supplied metadata that will be included in the space details and related webhooks. Max: 255 characters."
          type: string
        status:
          $ref: "#/components/schemas/SpaceStatus"
        type:
          $ref: "#/components/schemas/SpaceType"
      required:
        - id
        - created_at
        - type
        - status
      type: object
    SpaceResponse:
      properties:
        data:
          $ref: "#/components/schemas/Space"
      required:
        - data
      type: object
    SpaceStatus:
      description: The status of the space. Spaces are `idle` when there are no participants connected, and `active` when there are participants connected.
      enum:
        - idle
        - active
      type: string
    SpaceType:
      default: server
      description: Specify the network architecture of the space. In `server` spaces, all video travels through Mux's video infrastructure. Defaults to `server` if not set.
      enum:
        - server
      type: string
    StartSpaceBroadcastResponse:
      properties:
        data:
          type: object
      type: object
    StopSpaceBroadcastResponse:
      properties:
        data:
          type: object
      type: object
    Track:
      properties:
        closed_captions:
          description: Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`.
          type: boolean
        duration:
          description: The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set.
          format: double
          type: number
        id:
          description: Unique identifier for the Track
          type: string
        language_code:
          description: The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types.
          type: string
        max_channel_layout:
          deprecated: true
          description: Only set for the `audio` type track.
          type: string
        max_channels:
          description: The maximum number of audio channels the track supports. Only set for the `audio` type track.
          format: int64
          type: integer
        max_frame_rate:
          description: The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined.
          format: double
          type: number
        max_height:
          description: The maximum height in pixels available for the track. Only set for the `video` type track.
          format: int64
          type: integer
        max_width:
          description: The maximum width in pixels available for the track. Only set for the `video` type track.
          format: int64
          type: integer
        name:
          description: The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be "English" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types.
          type: string
        passthrough:
          description: Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters.
          type: string
        status:
          description: The status of the track. This parameter is only set for `text` type tracks.
          enum:
            - preparing
            - ready
            - errored
            - deleted
          type: string
        text_source:
          description: |
            The source of the text contained in a Track of type `text`. Valid `text_source`
            values are listed below.
            * `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.
            * `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.
            * `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.
            * `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.
            * `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.
          enum:
            - uploaded
            - embedded
            - generated_live
            - generated_live_final
          type: string
        text_type:
          description: This parameter is only set for `text` type tracks.
          enum:
            - subtitles
          type: string
        type:
          description: The type of track
          enum:
            - video
            - audio
            - text
          type: string
      type: object
    TranscriptionVocabulary:
      properties:
        created_at:
          description: Time the Transcription Vocabulary was created, defined as a Unix timestamp (seconds since epoch).
          format: int64
          type: string
        id:
          description: Unique identifier for the Transcription Vocabulary
          type: string
        name:
          description: The user-supplied name of the Transcription Vocabulary.
          type: string
        passthrough:
          description: Arbitrary user-supplied metadata set for the Transcription Vocabulary. Max 255 characters.
          type: string
        phrases:
          description: Phrases, individual words, or proper names to include in the Transcription Vocabulary. When the Transcription Vocabulary is attached to a live stream's `generated_subtitles` configuration, the probability of successful speech recognition for these words or phrases is boosted.
          items:
            $ref: "#/components/schemas/TranscriptionVocabularyPhrase"
          maxItems: 1000
          type: array
        updated_at:
          description: Time the Transcription Vocabulary was updated, defined as a Unix timestamp (seconds since epoch).
          format: int64
          type: string
      type: object
    TranscriptionVocabularyPhrase:
      description: A phrase or word belonging to a Transcription Vocabulary.
      maxLength: 32
      minLength: 1
      type: string
    TranscriptionVocabularyResponse:
      properties:
        data:
          $ref: "#/components/schemas/TranscriptionVocabulary"
      type: object
    UpdateAssetMP4SupportRequest:
      properties:
        mp4_support:
          description: String value for the level of mp4 support
          enum:
            - standard
            - none
          type: string
      type: object
    UpdateAssetMasterAccessRequest:
      properties:
        master_access:
          description: Add or remove access to the master version of the video.
          enum:
            - temporary
            - none
          type: string
      type: object
    UpdateAssetRequest:
      properties:
        passthrough:
          description: Arbitrary metadata set for the Asset. Max 255 characters. In order to clear this value, the field should be included with an empty string value.
          type: string
      type: object
    UpdateLiveStreamEmbeddedSubtitlesRequest:
      properties:
        embedded_subtitles:
          description: Describe the embedded closed caption contents of the incoming live stream.
          items:
            $ref: "#/components/schemas/LiveStreamEmbeddedSubtitleSettings"
          type: array
      type: object
    UpdateLiveStreamGeneratedSubtitlesRequest:
      properties:
        generated_subtitles:
          description: Update automated speech recognition subtitle configuration for a live stream. At most one subtitle track is allowed.
          items:
            $ref: "#/components/schemas/LiveStreamGeneratedSubtitleSettings"
          type: array
      type: object
      x-mux-no-required-properties: true
    UpdateLiveStreamRequest:
      properties:
        latency_mode:
          description: "Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags. The Low Latency value is a beta feature. Read more here: https://mux.com/blog/introducing-low-latency-live-streaming/"
          enum:
            - low
            - reduced
            - standard
          type: string
        max_continuous_duration:
          $ref: "#/components/schemas/MaxContinuousDuration"
        passthrough:
          description: Arbitrary user-supplied metadata set for the live stream. Max 255 characters. In order to clear this value, the field should be included with an empty-string value.
          type: string
        reconnect_slate_url:
          description: The URL of the image file that Mux should download and use as slate media during interruptions of the live stream media. This file will be downloaded each time a new recorded asset is created from the live stream. Set this to a blank string to clear the value so that the default slate media will be used.
          type: string
        reconnect_window:
          default: 60
          description: |
            When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset.

            If not specified directly, Standard Latency streams have a Reconnect Window of 60 seconds; Reduced and Low Latency streams have a default of 0 seconds, or no Reconnect Window. For that reason, we suggest specifying a value other than zero for Reduced and Low Latency streams.

            Reduced and Low Latency streams with a Reconnect Window greater than zero will insert slate media into the recorded asset while waiting for the streaming software to reconnect or when there are brief interruptions in the live stream media. When using a Reconnect Window setting higher than 60 seconds with a Standard Latency stream, we highly recommend enabling slate with the `use_slate_for_standard_latency` option.
          format: float
          maximum: 1800
          minimum: 0
          type: number
        use_slate_for_standard_latency:
          default: false
          description: By default, Standard Latency live streams do not have slate media inserted while waiting for live streaming software to reconnect to Mux. Setting this to true enables slate insertion on a Standard Latency stream.
          format: boolean
          type: boolean
      type: object
    UpdateReferrerDomainRestrictionRequest:
      oneOf:
        - $ref: "#/components/schemas/ReferrerDomainRestriction"
    UpdateTranscriptionVocabularyRequest:
      properties:
        name:
          description: The user-supplied name of the Transcription Vocabulary.
          type: string
        passthrough:
          description: Arbitrary user-supplied metadata set for the Transcription Vocabulary. Max 255 characters.
          type: string
        phrases:
          description: Phrases, individual words, or proper names to include in the Transcription Vocabulary. When the Transcription Vocabulary is attached to a live stream's `generated_subtitles`, the probability of successful speech recognition for these words or phrases is boosted.
          items:
            $ref: "#/components/schemas/TranscriptionVocabularyPhrase"
          maxItems: 1000
          type: array
      required:
        - phrases
      type: object
    Upload:
      properties:
        asset_id:
          description: Only set once the upload is in the `asset_created` state.
          type: string
        cors_origin:
          description: If the upload URL will be used in a browser, you must specify the origin in order for the signed URL to have the correct CORS headers.
          type: string
        error:
          description: Only set if an error occurred during asset creation.
          properties:
            message:
              description: Human readable error message
              type: string
            type:
              description: Label for the specific error
              type: string
          type: object
        id:
          description: Unique identifier for the Direct Upload.
          type: string
        new_asset_settings:
          $ref: "#/components/schemas/Asset"
        status:
          enum:
            - waiting
            - asset_created
            - errored
            - cancelled
            - timed_out
          type: string
        test:
          description: Indicates if this is a test Direct Upload, in which case the Asset that gets created will be a `test` Asset.
          format: boolean
          type: boolean
        timeout:
          default: 3600
          description: Max time in seconds for the signed upload URL to be valid. If a successful upload has not occurred before the timeout limit, the direct upload is marked `timed_out`
          format: int32
          maximum: 604800
          minimum: 60
          type: integer
        url:
          description: The URL to upload the associated source media to.
          type: string
      type: object
    UploadResponse:
      properties:
        data:
          $ref: "#/components/schemas/Upload"
      type: object
    VideoView:
      properties:
        asn:
          format: int64
          nullable: true
          type: integer
        asn_name:
          nullable: true
          type: string
        asset_id:
          nullable: true
          type: string
        buffering_count:
          format: int64
          nullable: true
          type: integer
        buffering_duration:
          format: int64
          nullable: true
          type: integer
        buffering_rate:
          nullable: true
          type: string
        cdn:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        continent_code:
          nullable: true
          type: string
        country_code:
          nullable: true
          type: string
        country_name:
          nullable: true
          type: string
        custom_1:
          nullable: true
          type: string
        custom_10:
          nullable: true
          type: string
        custom_2:
          nullable: true
          type: string
        custom_3:
          nullable: true
          type: string
        custom_4:
          nullable: true
          type: string
        custom_5:
          nullable: true
          type: string
        custom_6:
          nullable: true
          type: string
        custom_7:
          nullable: true
          type: string
        custom_8:
          nullable: true
          type: string
        custom_9:
          nullable: true
          type: string
        environment_id:
          type: string
        error_type_id:
          format: int32
          nullable: true
          type: integer
        events:
          items:
            $ref: "#/components/schemas/VideoViewEvent"
          type: array
        exit_before_video_start:
          type: boolean
        experiment_name:
          nullable: true
          type: string
        id:
          type: string
        inserted_at:
          type: string
        isp:
          nullable: true
          type: string
        latitude:
          nullable: true
          type: string
        live_stream_id:
          nullable: true
          type: string
        live_stream_latency:
          format: int64
          nullable: true
          type: integer
        longitude:
          nullable: true
          type: string
        metro:
          nullable: true
          type: string
        mux_api_version:
          type: string
        mux_embed:
          nullable: true
          type: string
        mux_embed_version:
          nullable: true
          type: string
        mux_viewer_id:
          type: string
        page_load_time:
          format: int64
          nullable: true
          type: integer
        page_type:
          nullable: true
          type: string
        page_url:
          nullable: true
          type: string
        platform_description:
          nullable: true
          type: string
        platform_summary:
          nullable: true
          type: string
        playback_id:
          nullable: true
          type: string
        playback_score:
          nullable: true
          type: string
        player_autoplay:
          type: boolean
        player_error_code:
          nullable: true
          type: string
        player_error_context:
          nullable: true
          type: string
        player_error_message:
          nullable: true
          type: string
        player_height:
          format: int32
          nullable: true
          type: integer
        player_instance_id:
          nullable: true
          type: string
        player_language:
          nullable: true
          type: string
        player_load_time:
          format: int64
          nullable: true
          type: integer
        player_mux_plugin_name:
          nullable: true
          type: string
        player_mux_plugin_version:
          nullable: true
          type: string
        player_name:
          nullable: true
          type: string
        player_poster:
          nullable: true
          type: string
        player_preload:
          type: boolean
        player_remote_played:
          nullable: true
          type: boolean
        player_software:
          nullable: true
          type: string
        player_software_version:
          nullable: true
          type: string
        player_source_domain:
          nullable: true
          type: string
        player_source_duration:
          format: int64
          nullable: true
          type: integer
        player_source_height:
          format: int32
          nullable: true
          type: integer
        player_source_host_name:
          nullable: true
          type: string
        player_source_stream_type:
          nullable: true
          type: string
        player_source_type:
          nullable: true
          type: string
        player_source_url:
          nullable: true
          type: string
        player_source_width:
          format: int32
          nullable: true
          type: integer
        player_startup_time:
          format: int64
          nullable: true
          type: integer
        player_version:
          nullable: true
          type: string
        player_view_count:
          format: int64
          nullable: true
          type: integer
        player_width:
          format: int32
          nullable: true
          type: integer
        preroll_ad_asset_hostname:
          nullable: true
          type: string
        preroll_ad_tag_hostname:
          nullable: true
          type: string
        preroll_played:
          nullable: true
          type: boolean
        preroll_requested:
          nullable: true
          type: boolean
        property_id:
          format: int64
          type: integer
        quality_score:
          nullable: true
          type: string
        rebuffer_percentage:
          nullable: true
          type: string
        rebuffering_score:
          nullable: true
          type: string
        region:
          nullable: true
          type: string
        requests_for_first_preroll:
          format: int64
          nullable: true
          type: integer
        session_id:
          type: string
        short_time:
          type: string
        startup_score:
          nullable: true
          type: string
        sub_property_id:
          nullable: true
          type: string
        time_to_first_frame:
          format: int64
          nullable: true
          type: integer
        updated_at:
          type: string
        used_fullscreen:
          type: boolean
        video_content_type:
          nullable: true
          type: string
        video_duration:
          format: int64
          nullable: true
          type: integer
        video_encoding_variant:
          nullable: true
          type: string
        video_id:
          nullable: true
          type: string
        video_language:
          nullable: true
          type: string
        video_producer:
          nullable: true
          type: string
        video_series:
          nullable: true
          type: string
        video_startup_failure:
          type: boolean
        video_startup_preroll_load_time:
          format: int64
          nullable: true
          type: integer
        video_startup_preroll_request_time:
          format: int64
          nullable: true
          type: integer
        video_stream_type:
          nullable: true
          type: string
        video_title:
          nullable: true
          type: string
        video_variant_id:
          nullable: true
          type: string
        video_variant_name:
          nullable: true
          type: string
        view_average_request_latency:
          format: int64
          nullable: true
          type: integer
        view_average_request_throughput:
          format: int64
          nullable: true
          type: integer
        view_drm_type:
          nullable: true
          type: string
        view_dropped_frame_count:
          format: int64
          nullable: true
          type: integer
        view_end:
          type: string
        view_error_id:
          format: int32
          nullable: true
          type: integer
        view_has_ad:
          type: boolean
        view_id:
          type: string
        view_max_downscale_percentage:
          nullable: true
          type: string
        view_max_playhead_position:
          nullable: true
          type: string
        view_max_request_latency:
          format: int64
          nullable: true
          type: integer
        view_max_upscale_percentage:
          nullable: true
          type: string
        view_playing_time:
          nullable: true
          type: string
        view_seek_count:
          format: int64
          nullable: true
          type: integer
        view_seek_duration:
          format: int64
          nullable: true
          type: integer
        view_session_id:
          nullable: true
          type: string
        view_start:
          type: string
        view_total_content_playback_time:
          format: int64
          nullable: true
          type: integer
        view_total_downscaling:
          nullable: true
          type: string
        view_total_upscaling:
          nullable: true
          type: string
        viewer_application_engine:
          nullable: true
          type: string
        viewer_application_name:
          nullable: true
          type: string
        viewer_application_version:
          nullable: true
          type: string
        viewer_connection_type:
          nullable: true
          type: string
        viewer_device_category:
          nullable: true
          type: string
        viewer_device_manufacturer:
          nullable: true
          type: string
        viewer_device_model:
          nullable: true
          type: string
        viewer_device_name:
          nullable: true
          type: string
        viewer_experience_score:
          nullable: true
          type: string
        viewer_os_architecture:
          nullable: true
          type: string
        viewer_os_family:
          nullable: true
          type: string
        viewer_os_version:
          nullable: true
          type: string
        viewer_user_agent:
          nullable: true
          type: string
        viewer_user_id:
          nullable: true
          type: string
        watch_time:
          format: int64
          nullable: true
          type: integer
        watched:
          type: boolean
        weighted_average_bitrate:
          format: int64
          nullable: true
          type: integer
      type: object
    VideoViewEvent:
      properties:
        event_time:
          format: int64
          type: integer
        name:
          type: string
        playback_time:
          format: int64
          type: integer
        viewer_time:
          format: int64
          type: integer
      type: object
    VideoViewResponse:
      properties:
        data:
          $ref: "#/components/schemas/VideoView"
        timeframe:
          items:
            format: int64
            type: integer
          type: array
      type: object
  securitySchemes:
    accessToken:
      description: |
        The Mux Video API uses an Access Token and Secret Key for authentication. If you haven't already, [generate a new Access Token](https://dashboard.mux.com/settings/access-tokens) in the Access Token settings of your Mux account dashboard.

        Once you have an Access Token ID and Secret, you can then simply include those as the username (id) and password (secret) in the same way you use traditional basic auth.
      scheme: basic
      type: http
x-group-parameters: true
x-tagGroups:
  - name: Video
    tags:
      - Assets
      - Live Streams
      - Spaces
      - Playback ID
      - URL Signing Keys
      - Direct Uploads
      - Delivery Usage
      - Playback Restrictions
      - Transcription Vocabularies
  - name: Data
    tags:
      - Video Views
      - Errors
      - Filters
      - Exports
      - Metrics
      - Monitoring
      - Real-Time
      - Dimensions
      - Incidents
  - name: System
    tags:
      - Signing Keys
