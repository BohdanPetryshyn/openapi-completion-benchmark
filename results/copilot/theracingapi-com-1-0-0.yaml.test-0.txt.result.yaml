openapi: 3.0.2
servers:
  - url: https://api.theracingapi.com/
info:
  description: <h1>Introduction</h1><p>Welcome to <a href='https://www.theracingapi.com' target='_blank'>The Racing API</a>!</p><p>The API is used to access our active database of over 200,000 horse racing results and daily racecards.</p><p>If you dont yet have a  subscription, you can purchase one <a href='https://www.theracingapi.com/#subscribe' target='_blank'>here</a>.</p><p>Requests to the API can be made via any programming language of your choice. Code examples are available in the right column of the documentation.</p><p><b>Any usage is subject to The Racing API <a href='https://www.theracingapi.com/terms-of-service' target='_blank'>terms of service</a>.</b></p><br><br><h1>Base URL</h1><p> The base url for requests is <b>https://api.theracingapi.com</b></p><br><br><h1>Authentication</h1><p>Upon subscribing to The Racing API, you will receive a set of API keys named 'Username' and 'Password' via email.</p><p>In order to authenticate your requests, you should use <b>HTTP Basic Authentication</b>, passing your username and password keys in the <b>Authorization header</b> of your request.</p><p>If your account becomes inactive or you attempt to access endpoints not available to your subscription level, requests will return a <b>401 Unauthorized</b> response.</p><br><br><h1>Rate-Limits</h1><p>Requests are limited to 2 per second for every plan. Exceeding this limit will return a <b>429 Too Many Requests</b> response.</p><br><br><h1>Analysis Endpoints</h1><p>The Racing API analysis endpoints perform data aggregation to return helpful betting & probability insights.</p><p>The statistics returned by these endpoints include:</p><ul><li><b>Win Percentage (win_%):</b> The number of wins divided by total runs/rides for a given query. For example, a win_% figure of 0.18 represents an 18% win percentage.</li><li><b>1 Unit Profit/Loss (1_pl):</b> Profit/loss for total rides/runs for a given query, if a 1 unit stake was placed at SP.</li><li><b>Actual/Expected (a/e):</b> Actual number of wins, divided by expected number of wins for a given query. Expected number of wins is calculated from SP. For a detailed explanation of this statistic, see <a href='https://ratingtheraces.com/blog/information/what-is-the-ae-statistic/#:~:text=A%2FE%20stands%20for%20Actual%20over%20Expected.&text=In%20this%20process%20we%20take,of%201%2F3.0%20%3D%200.33.' target='_blank'>here</a>.</li></ul><p><b>IMPORTANT NOTE:</b> Anaysis endpoints only perform data aggregation on results for which SP odds are available.</p><br><br><p><b>For support or feature requests, please email <a href='mailto:support@theracingapi.com'>support@theracingapi.com</a>.</b></p>
  title: The Racing API
  version: 1.0.0
  x-apisguru-categories:
    - analytics
  x-logo:
    url: https://www.theracingapi.com/static/images/logo.png
  x-origin:
    - format: openapi
      url: https://api.theracingapi.com/openapi.json
      version: "3.0"
  x-providerName: theracingapi.com
paths:
  /v1/courses:
    get:
      description: List courses (FREE PLAN)
      operationId: list_courses_v1_courses_get
      parameters:
        - description: Filter courses by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.
          example:
            - gb
            - ire
          in: query
          name: region_codes
          required: false
          schema:
            description: Filter courses by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.
            items:
              type: string
            title: Regions
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CoursesPage"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: List Courses
      tags:
        - Courses
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/courses'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/courses"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  /v1/courses/regions:
    get:
      description: List regions (FREE PLAN)
      operationId: list_regions_v1_courses_regions_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Region"
                title: Response List Regions V1 Courses Regions Get
                type: array
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: List Regions
      tags:
        - Courses
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/courses/regions'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/courses/regions"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  /v1/dams/search:
    get:
      description: Search dams by name (STANDARD PLAN)
      operationId: search_dams_v1_dams_search_get
      parameters:
        - in: query
          name: name
          required: true
          schema:
            title: Name
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dams"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Search Dams
      tags:
        - Dams
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/dams/search'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/dams/search"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/dams/{dam_id}/analysis/classes":
    get:
      description: <p>Offspring class statistics for dam (STANDARD PLAN).</p><p>For dam results and statistics, use the <a href='https://api.theracingapi.com/documentation#tag/Horses'>horses endpoints</a>, replacing the 'dam_' dam id prefix with 'hrs_'.</p>
      operationId: dam_class_analysis_v1_dams__dam_id__analysis_classes_get
      parameters:
        - in: path
          name: dam_id
          required: true
          schema:
            title: Dam Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DamClassAnalysis"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Dam Class Analysis
      tags:
        - Dams
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/dams/{dam_id}/analysis/classes'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/dams/{dam_id}/analysis/classes"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/dams/{dam_id}/analysis/distances":
    get:
      description: <p>Offspring distance statistics for dam (STANDARD PLAN). .</p><p>For dam results and statistics, use the <a href='https://api.theracingapi.com/documentation#tag/Horses'>horses endpoints</a>, replacing the 'dam_' dam id prefix with 'hrs_'.</p>
      operationId: dam_distance_analysis_v1_dams__dam_id__analysis_distances_get
      parameters:
        - in: path
          name: dam_id
          required: true
          schema:
            title: Dam Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DamDistanceAnalysis"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Dam Distance Analysis
      tags:
        - Dams
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/dams/{dam_id}/analysis/distances'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/dams/{dam_id}/analysis/distances"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/dams/{dam_id}/results":
    get:
      description: <p>Full historic results for dam offspring (PRO PLAN).</p><p>For dam results and statistics, use the <a href='https://api.theracingapi.com/documentation#tag/Horses'>horses endpoints</a>, replacing the 'dam_' dam id prefix with 'hrs_'.</p>
      operationId: dam_results_v1_dams__dam_id__results_get
      parameters:
        - in: path
          name: dam_id
          required: true
          schema:
            title: Dam Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
        - in: query
          name: limit
          required: false
          schema:
            default: 25
            maximum: 50
            minimum: 1
            title: Limit
            type: integer
        - in: query
          name: skip
          required: false
          schema:
            default: 0
            title: Skip
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultsPage"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Dam Results
      tags:
        - Dams
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/dams/{dam_id}/results'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/dams/{dam_id}/results"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  /v1/damsires/search:
    get:
      description: Search damsires by name (STANDARD PLAN)
      operationId: search_damsires_v1_damsires_search_get
      parameters:
        - in: query
          name: name
          required: true
          schema:
            title: Name
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Damsires"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Search Damsires
      tags:
        - Damsires
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/damsires/search'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/damsires/search"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/damsires/{damsire_id}/analysis/classes":
    get:
      description: <p>Grandoffspring class statistics for damsire (STANDARD PLAN).</p><p>For damsire results and statistics, use the <a href='https://api.theracingapi.com/documentation#tag/Horses'>horses endpoints</a>, replacing the 'dsi_' damsire id prefix with 'hrs_'.</p>
      operationId: damsire_class_analysis_v1_damsires__damsire_id__analysis_classes_get
      parameters:
        - in: path
          name: damsire_id
          required: true
          schema:
            title: Damsire Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DamsireClassAnalysis"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Damsire Class Analysis
      tags:
        - Damsires
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/damsires/{damsire_id}/analysis/classes'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/damsires/{damsire_id}/analysis/classes"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/damsires/{damsire_id}/analysis/distances":
    get:
      description: <p>Grandoffspring distance statistics for damsire (STANDARD PLAN).</p><p>For damsire results and statistics, use the <a href='https://api.theracingapi.com/documentation#tag/Horses'>horses endpoints</a>, replacing the 'dsi_' damsire id prefix with 'hrs_'.</p>
      operationId: damsire_distance_analysis_v1_damsires__damsire_id__analysis_distances_get
      parameters:
        - in: path
          name: damsire_id
          required: true
          schema:
            title: Damsire Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DamsireDistanceAnalysis"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Damsire Distance Analysis
      tags:
        - Damsires
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/damsires/{damsire_id}/analysis/distances'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/damsires/{damsire_id}/analysis/distances"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/damsires/{damsire_id}/results":
    get:
      description: <p>Full historic results for damsire grandoffspring (PRO PLAN). .</p><p>For damsire results and statistics, use the <a href='https://api.theracingapi.com/documentation#tag/Horses'>horses endpoints</a>, replacing the 'dsi_' damsire id prefix with 'hrs_'.</p>
      operationId: damsire_results_v1_damsires__damsire_id__results_get
      parameters:
        - in: path
          name: damsire_id
          required: true
          schema:
            title: Damsire Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
        - in: query
          name: limit
          required: false
          schema:
            default: 25
            maximum: 50
            minimum: 1
            title: Limit
            type: integer
        - in: query
          name: skip
          required: false
          schema:
            default: 0
            title: Skip
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultsPage"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Damsire Results
      tags:
        - Damsires
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/damsires/{damsire_id}/results'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/damsires/{damsire_id}/results"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  /v1/horses/search:
    get:
      description: Search horses by name (STANDARD PLAN)
      operationId: search_horses_v1_horses_search_get
      parameters:
        - in: query
          name: name
          required: true
          schema:
            title: Name
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Horses"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Search Horses
      tags:
        - Horses
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/horses/search'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/horses/search"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/horses/{horse_id}/analysis/distance-times":
    get:
      description: Distance statistics for a horse, with times and going (STANDARD PLAN)
      operationId: horse_distance_time_analysis_v1_horses__horse_id__analysis_distance_times_get
      parameters:
        - in: path
          name: horse_id
          required: true
          schema:
            title: Horse Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HorseDistanceTimeAnalysis"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Horse Distance Time Analysis
      tags:
        - Horses
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/horses/{horse_id}/analysis/distance-times'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/horses/{horse_id}/analysis/distance-times"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/horses/{horse_id}/results":
    get:
      description: Full historic results for a horse (PRO PLAN)
      operationId: horse_results_v1_horses__horse_id__results_get
      parameters:
        - in: path
          name: horse_id
          required: true
          schema:
            title: Horse Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
        - in: query
          name: limit
          required: false
          schema:
            default: 25
            maximum: 50
            minimum: 1
            title: Limit
            type: integer
        - in: query
          name: skip
          required: false
          schema:
            default: 0
            title: Skip
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultsPage"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Horse Results
      tags:
        - Horses
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/horses/{horse_id}/results'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/horses/{horse_id}/results"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  /v1/jockeys/search:
    get:
      description: Search jockeys by name (STANDARD PLAN)
      operationId: search_jockeys_v1_jockeys_search_get
      parameters:
        - in: query
          name: name
          required: true
          schema:
            title: Name
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Jockeys"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Search Jockeys
      tags:
        - Jockeys
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/jockeys/search'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/jockeys/search"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/jockeys/{jockey_id}/analysis/courses":
    get:
      description: Course statistics for a jockey (STANDARD PLAN)
      operationId: jockey_course_analysis_v1_jockeys__jockey_id__analysis_courses_get
      parameters:
        - in: path
          name: jockey_id
          required: true
          schema:
            title: Jockey Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JockeyCourseAnalysis"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Jockey Course Analysis
      tags:
        - Jockeys
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/jockeys/{jockey_id}/analysis/courses'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/jockeys/{jockey_id}/analysis/courses"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/jockeys/{jockey_id}/analysis/distances":
    get:
      description: Distance statistics for a jockey (STANDARD PLAN)
      operationId: jockey_distance_analysis_v1_jockeys__jockey_id__analysis_distances_get
      parameters:
        - in: path
          name: jockey_id
          required: true
          schema:
            title: Jockey Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JockeyDistanceAnalysis"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Jockey Distance Analysis
      tags:
        - Jockeys
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/jockeys/{jockey_id}/analysis/distances'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/jockeys/{jockey_id}/analysis/distances"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/jockeys/{jockey_id}/analysis/owners":
    get:
      description: Owner statistics for a jockey (STANDARD PLAN)
      operationId: jockey_owner_analysis_v1_jockeys__jockey_id__analysis_owners_get
      parameters:
        - in: path
          name: jockey_id
          required: true
          schema:
            title: Jockey Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JockeyOwnerAnalysis"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Jockey Owner Analysis
      tags:
        - Jockeys
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/jockeys/{jockey_id}/analysis/owners'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/jockeys/{jockey_id}/analysis/owners"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/jockeys/{jockey_id}/analysis/trainers":
    get:
      description: Trainer statistics for a jockey (STANDARD PLAN)
      operationId: jockey_trainer_analysis_v1_jockeys__jockey_id__analysis_trainers_get
      parameters:
        - in: path
          name: jockey_id
          required: true
          schema:
            title: Jockey Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JockeyTrainerAnalysis"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Jockey Trainer Analysis
      tags:
        - Jockeys
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/jockeys/{jockey_id}/analysis/trainers'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/jockeys/{jockey_id}/analysis/trainers"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/jockeys/{jockey_id}/results":
    get:
      description: Full historic results for a jockey (PRO PLAN)
      operationId: jockey_results_v1_jockeys__jockey_id__results_get
      parameters:
        - in: path
          name: jockey_id
          required: true
          schema:
            title: Jockey Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
        - in: query
          name: limit
          required: false
          schema:
            default: 25
            maximum: 50
            minimum: 1
            title: Limit
            type: integer
        - in: query
          name: skip
          required: false
          schema:
            default: 0
            title: Skip
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultsPage"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Jockey Results
      tags:
        - Jockeys
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/jockeys/{jockey_id}/results'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/jockeys/{jockey_id}/results"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  /v1/north-america/meets:
    get:
      description: <p>Get a list of north american race meets (STANDARD PLAN)</p><p><b>Standard Plan Regional Add-on:</b> £49.99 p/m North American racing add-on subscription required to access this endpoint.</p><p><b>Tracking began 1st July 2023.</b></p><p><a href='mailto:support@theracingapi.com'>Contact support</a> for information.</p>
      operationId: list_meets_v1_north_america_meets_get
      parameters:
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - in: query
          name: limit
          required: false
          schema:
            default: 25
            maximum: 50
            minimum: 1
            title: Limit
            type: integer
        - in: query
          name: skip
          required: false
          schema:
            default: 0
            title: Skip
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MeetsResponse"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: List Meets
      tags:
        - North America
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/north-america/meets'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/north-america/meets"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/north-america/meets/{meet_id}/entries":
    get:
      description: <p>Get entries for a north american meet by meet id (STANDARD PLAN)</p><p><b>Standard Plan Regional Add-on:</b> £49.99 p/m North American racing add-on subscription required to access this endpoint.</p><p><b>Tracking began 1st July 2023.</b></p><p><a href='mailto:support@theracingapi.com'>Contact support</a> for information.</p>
      operationId: meet_entries_v1_north_america_meets__meet_id__entries_get
      parameters:
        - in: path
          name: meet_id
          required: true
          schema:
            title: Meet Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntriesResponse"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Meet Entries
      tags:
        - North America
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/north-america/meets/{meet_id}/entries'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/north-america/meets/{meet_id}/entries"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/north-america/meets/{meet_id}/results":
    get:
      description: <p>Get results for a north american meet by meet id (STANDARD PLAN)</p><p><b>Standard Plan Regional Add-on:</b> £49.99 p/m North American racing add-on subscription required to access this endpoint.</p><p><b>Tracking began 1st July 2023.</b></p><p><a href='mailto:support@theracingapi.com'>Contact support</a> for information.</p>
      operationId: meet_results_v1_north_america_meets__meet_id__results_get
      parameters:
        - in: path
          name: meet_id
          required: true
          schema:
            title: Meet Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultsResponse"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Meet Results
      tags:
        - North America
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/north-america/meets/{meet_id}/results'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/north-america/meets/{meet_id}/results"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  /v1/owners/search:
    get:
      description: Search owners by name (STANDARD PLAN)
      operationId: search_owners_v1_owners_search_get
      parameters:
        - in: query
          name: name
          required: true
          schema:
            title: Name
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Owners"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Search Owners
      tags:
        - Owners
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/owners/search'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/owners/search"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/owners/{owner_id}/analysis/courses":
    get:
      description: Course statistics for an owner (STANDARD PLAN)
      operationId: owner_course_analysis_v1_owners__owner_id__analysis_courses_get
      parameters:
        - in: path
          name: owner_id
          required: true
          schema:
            title: Owner Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OwnerCourseAnalysis"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Owner Course Analysis
      tags:
        - Owners
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/owners/{owner_id}/analysis/courses'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/owners/{owner_id}/analysis/courses"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/owners/{owner_id}/analysis/distances":
    get:
      description: Distance statistics for an owner (STANDARD PLAN)
      operationId: owner_distance_analysis_v1_owners__owner_id__analysis_distances_get
      parameters:
        - in: path
          name: owner_id
          required: true
          schema:
            title: Owner Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OwnerDistanceAnalysis"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Owner Distance Analysis
      tags:
        - Owners
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/owners/{owner_id}/analysis/distances'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/owners/{owner_id}/analysis/distances"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/owners/{owner_id}/analysis/jockeys":
    get:
      description: Jockey statistics for an owner (STANDARD PLAN)
      operationId: owner_jockey_analysis_v1_owners__owner_id__analysis_jockeys_get
      parameters:
        - in: path
          name: owner_id
          required: true
          schema:
            title: Owner Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OwnerJockeyAnalysis"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Owner Jockey Analysis
      tags:
        - Owners
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/owners/{owner_id}/analysis/jockeys'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/owners/{owner_id}/analysis/jockeys"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/owners/{owner_id}/analysis/trainers":
    get:
      description: Trainer statistics for an owner (STANDARD PLAN)
      operationId: owner_trainer_analysis_v1_owners__owner_id__analysis_trainers_get
      parameters:
        - in: path
          name: owner_id
          required: true
          schema:
            title: Owner Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OwnerTrainerAnalysis"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Owner Trainer Analysis
      tags:
        - Owners
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/owners/{owner_id}/analysis/trainers'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/owners/{owner_id}/analysis/trainers"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/owners/{owner_id}/results":
    get:
      description: Full historic results for an owner (PRO PLAN)
      operationId: owner_results_v1_owners__owner_id__results_get
      parameters:
        - in: path
          name: owner_id
          required: true
          schema:
            title: Owner Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
        - in: query
          name: limit
          required: false
          schema:
            default: 25
            maximum: 50
            minimum: 1
            title: Limit
            type: integer
        - in: query
          name: skip
          required: false
          schema:
            default: 0
            title: Skip
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultsPage"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Owner Results
      tags:
        - Owners
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/owners/{owner_id}/results'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/owners/{owner_id}/results"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  /v1/racecards/basic:
    get:
      description: Get today and tomorrows advanced racecards (BASIC PLAN)
      operationId: list_racecards_basic_v1_racecards_basic_get
      parameters:
        - description: Query racecards by day:<br> today, tomorrow
          in: query
          name: day
          required: false
          schema:
            default: today
            description: Query racecards by day:<br> today, tomorrow
            title: Day
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region_codes
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Regions
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course_ids
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Courses
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Racecards"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: List Racecards Basic
      tags:
        - Racecards
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/racecards/basic'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/racecards/basic"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  /v1/racecards/big-races:
    get:
      description: Get future big race's racecards, such as Cheltenham, The Grand National and The Derby (STANDARD PLAN)
      operationId: list_racecards_big_races_v1_racecards_big_races_get
      parameters:
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p><p>Date must be today or greater, defaults to today.</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p><p>Date must be today or greater, defaults to today.</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region_codes
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Regions
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course_ids
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Courses
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RacecardsOdds"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: List Racecards Big Races
      tags:
        - Racecards
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/racecards/big-races'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/racecards/big-races"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  /v1/racecards/free:
    get:
      description: Get today and tomorrows basic racecards (FREE PLAN)
      operationId: list_racecards_free_v1_racecards_free_get
      parameters:
        - description: Query racecards by day:<br> today, tomorrow
          in: query
          name: day
          required: false
          schema:
            default: today
            description: Query racecards by day:<br> today, tomorrow
            title: Day
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region_codes
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Regions
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course_ids
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Courses
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RacecardsBasic"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: List Racecards Free
      tags:
        - Racecards
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/racecards/free'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/racecards/free"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  /v1/racecards/pro:
    get:
      description: Get past and future advanced racecards by date, including runner odds for UK & IRE racing. (PRO PLAN)<br> (Past racecards available from 2023-01-23. Future racecards available up to 1 week in advance.)
      operationId: list_racecards_pro_v1_racecards_pro_get
      parameters:
        - description: Query racecards by date with format YYYY-MM-DD (e.g 2023-04-05)
          in: query
          name: date
          required: false
          schema:
            default: 2023-10-15
            description: Query racecards by date with format YYYY-MM-DD (e.g 2023-04-05)
            title: Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region_codes
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Regions
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course_ids
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Courses
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RacecardsOdds"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: List Racecards Pro
      tags:
        - Racecards
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/racecards/pro'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/racecards/pro"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  /v1/racecards/standard:
    get:
      description: Get today and tomorrows advanced racecards, including runner odds for UK & IRE racing. (STANDARD PLAN)
      operationId: list_racecards_standard_v1_racecards_standard_get
      parameters:
        - description: Query racecards by day:<br> today, tomorrow
          in: query
          name: day
          required: false
          schema:
            default: today
            description: Query racecards by day:<br> today, tomorrow
            title: Day
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region_codes
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Regions
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course_ids
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Courses
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RacecardsOdds"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: List Racecards Standard
      tags:
        - Racecards
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/racecards/standard'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/racecards/standard"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  /v1/racecards/summaries:
    get:
      description: List racecard summaries for a given date (BASIC PLAN)
      operationId: list_racecard_summaries_v1_racecards_summaries_get
      parameters:
        - description: Query racecard summaries by date with format YYYY-MM-DD (e.g 2023-04-05)
          in: query
          name: date
          required: false
          schema:
            default: 2023-10-15
            description: Query racecard summaries by date with format YYYY-MM-DD (e.g 2023-04-05)
            title: Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region_codes
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Regions
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course_ids
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Courses
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RacecardsSummary"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: List Racecard Summaries
      tags:
        - Racecards
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/racecards/summaries'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/racecards/summaries"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/racecards/{horse_id}/results":
    get:
      description: Get full historic results for a horse on today or tomorrow's racecards (BASIC PLAN)
      operationId: list_racecard_horse_results_v1_racecards__horse_id__results_get
      parameters:
        - in: path
          name: horse_id
          required: true
          schema:
            title: Horse Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
        - in: query
          name: limit
          required: false
          schema:
            default: 25
            maximum: 50
            minimum: 1
            title: Limit
            type: integer
        - in: query
          name: skip
          required: false
          schema:
            default: 0
            title: Skip
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultsPage"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: List Racecard Horse Results
      tags:
        - Racecards
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/racecards/{horse_id}/results'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/racecards/{horse_id}/results"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/racecards/{race_id}/pro":
    get:
      description: Get any past or future race by race id, including runner odds for UK & IRE racing. (PRO PLAN)<br> (Past racecards available from 2023-01-23. Future racecards available up to 1 week in advance.)
      operationId: race_pro_v1_racecards__race_id__pro_get
      parameters:
        - in: path
          name: race_id
          required: true
          schema:
            title: Race Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RacecardOdds"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Race Pro
      tags:
        - Racecards
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/racecards/{race_id}/pro'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/racecards/{race_id}/pro"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/racecards/{race_id}/standard":
    get:
      description: Get any race for today or tomorrow (or if classified as a 'big race') by race id, including runner odds for UK & IRE racing. (STANDARD PLAN)
      operationId: race_standard_v1_racecards__race_id__standard_get
      parameters:
        - in: path
          name: race_id
          required: true
          schema:
            title: Race Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RacecardOdds"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Race Standard
      tags:
        - Racecards
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/racecards/{race_id}/standard'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/racecards/{race_id}/standard"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  /v1/results:
    get:
      description: <p>All historic results, up to 12 months in the past (STANDARD PLAN)</p><p><b>Pro Plan Add-on:</b> users on the Pro Plan can pay a one-time fee of £249 to remove the 12 month restriction and access the entire results database from this endpoint. <a href='mailto:support@theracingapi.com'>Contact support</a> for information.</p>
      operationId: list_results_v1_results_get
      parameters:
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
        - in: query
          name: limit
          required: false
          schema:
            default: 25
            maximum: 50
            minimum: 1
            title: Limit
            type: integer
        - in: query
          name: skip
          required: false
          schema:
            default: 0
            title: Skip
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultsPage"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: List Results
      tags:
        - Results
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/results'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/results"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  /v1/results/today:
    get:
      description: Today's results (BASIC PLAN)
      operationId: list_todays_results_v1_results_today_get
      parameters:
        - description: <p>Query results by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p>
          in: query
          name: region
          required: false
          schema:
            description: <p>Query results by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p>
            items:
              type: string
            title: Region
            type: array
        - in: query
          name: limit
          required: false
          schema:
            default: 25
            maximum: 50
            minimum: 1
            title: Limit
            type: integer
        - in: query
          name: skip
          required: false
          schema:
            default: 0
            title: Skip
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultsPage"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: List Todays Results
      tags:
        - Results
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/results/today'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/results/today"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/results/{race_id}":
    get:
      description: <p>Get a result by race id (STANDARD PLAN)</p>
      operationId: result_v1_results__race_id__get
      parameters:
        - in: path
          name: race_id
          required: true
          schema:
            title: Race Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Result"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Result
      tags:
        - Results
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/results/{race_id}'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/results/{race_id}"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  /v1/sires/search:
    get:
      description: Search sires by name (STANDARD PLAN)
      operationId: search_sires_v1_sires_search_get
      parameters:
        - in: query
          name: name
          required: true
          schema:
            title: Name
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sires"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Search Sires
      tags:
        - Sires
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/sires/search'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/sires/search"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/sires/{sire_id}/analysis/classes":
    get:
      description: <p>Offspring class statistics for sire (STANDARD PLAN).</p><p>For sire results and statistics, use the <a href='https://api.theracingapi.com/documentation#tag/Horses'>horses endpoints</a>, replacing the 'sir_' sire id prefix with 'hrs_'.</p>
      operationId: sire_class_analysis_v1_sires__sire_id__analysis_classes_get
      parameters:
        - in: path
          name: sire_id
          required: true
          schema:
            title: Sire Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SireClassAnalysis"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Sire Class Analysis
      tags:
        - Sires
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/sires/{sire_id}/analysis/classes'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/sires/{sire_id}/analysis/classes"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/sires/{sire_id}/analysis/distances":
    get:
      description: <p>Offspring distance statistics for sire (STANDARD PLAN).</p><p>For sire results and statistics, use the <a href='https://api.theracingapi.com/documentation#tag/Horses'>horses endpoints</a>, replacing the 'sir_' sire id prefix with 'hrs_'.</p>
      operationId: sire_distance_analysis_v1_sires__sire_id__analysis_distances_get
      parameters:
        - in: path
          name: sire_id
          required: true
          schema:
            title: Sire Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SireDistanceAnalysis"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Sire Distance Analysis
      tags:
        - Sires
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/sires/{sire_id}/analysis/distances'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/sires/{sire_id}/analysis/distances"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/sires/{sire_id}/results":
    get:
      description: <p>Full historic results for sire offspring (PRO PLAN).</p><p>For sire results and statistics, use the <a href='https://api.theracingapi.com/documentation#tag/Horses'>horses endpoints</a>, replacing the 'sir_' sire id prefix with 'hrs_'.</p>
      operationId: sire_results_v1_sires__sire_id__results_get
      parameters:
        - in: path
          name: sire_id
          required: true
          schema:
            title: Sire Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
        - in: query
          name: limit
          required: false
          schema:
            default: 25
            maximum: 50
            minimum: 1
            title: Limit
            type: integer
        - in: query
          name: skip
          required: false
          schema:
            default: 0
            title: Skip
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultsPage"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Sire Results
      tags:
        - Sires
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/sires/{sire_id}/results'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/sires/{sire_id}/results"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  /v1/trainers/search:
    get:
      description: Search trainers by name (STANDARD PLAN)
      operationId: search_trainers_v1_trainers_search_get
      parameters:
        - in: query
          name: name
          required: true
          schema:
            title: Name
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trainers"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Search Trainers
      tags:
        - Trainers
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/trainers/search'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/trainers/search"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/trainers/{trainer_id}/analysis/courses":
    get:
      description: Course statistics for a trainer (STANDARD PLAN)
      operationId: trainer_course_analysis_v1_trainers__trainer_id__analysis_courses_get
      parameters:
        - in: path
          name: trainer_id
          required: true
          schema:
            title: Trainer Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrainerCourseAnalysis"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Trainer Course Analysis
      tags:
        - Trainers
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/trainers/{trainer_id}/analysis/courses'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/trainers/{trainer_id}/analysis/courses"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/trainers/{trainer_id}/analysis/distances":
    get:
      description: Distance statistics for a trainer (STANDARD PLAN)
      operationId: trainer_distance_analysis_v1_trainers__trainer_id__analysis_distances_get
      parameters:
        - in: path
          name: trainer_id
          required: true
          schema:
            title: Trainer Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrainerDistanceAnalysis"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Trainer Distance Analysis
      tags:
        - Trainers
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/trainers/{trainer_id}/analysis/distances'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/trainers/{trainer_id}/analysis/distances"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/trainers/{trainer_id}/analysis/horse-age":
    get:
      description: Horse age statistics for a trainer (STANDARD PLAN)
      operationId: trainer_horse_age_analysis_v1_trainers__trainer_id__analysis_horse_age_get
      parameters:
        - in: path
          name: trainer_id
          required: true
          schema:
            title: Trainer Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrainerHorseAgeAnalysis"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Trainer Horse Age Analysis
      tags:
        - Trainers
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/trainers/{trainer_id}/analysis/horse-age'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/trainers/{trainer_id}/analysis/horse-age"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/trainers/{trainer_id}/analysis/jockeys":
    get:
      description: Jockey statistics for a trainer (STANDARD PLAN)
      operationId: trainer_jockey_analysis_v1_trainers__trainer_id__analysis_jockeys_get
      parameters:
        - in: path
          name: trainer_id
          required: true
          schema:
            title: Trainer Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrainerJockeyAnalysis"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Trainer Jockey Analysis
      tags:
        - Trainers
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/trainers/{trainer_id}/analysis/jockeys'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/trainers/{trainer_id}/analysis/jockeys"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/trainers/{trainer_id}/analysis/owners":
    get:
      description: Owner statistics for a trainer (STANDARD PLAN)
      operationId: trainer_owner_analysis_v1_trainers__trainer_id__analysis_owners_get
      parameters:
        - in: path
          name: trainer_id
          required: true
          schema:
            title: Trainer Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrainerOwnerAnalysis"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Trainer Owner Analysis
      tags:
        - Trainers
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/trainers/{trainer_id}/analysis/owners'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/trainers/{trainer_id}/analysis/owners"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
  "/v1/trainers/{trainer_id}/results":
    get:
      description: Full historic results for a trainer (PRO PLAN)
      operationId: trainer_results_v1_trainers__trainer_id__results_get
      parameters:
        - in: path
          name: trainer_id
          required: true
          schema:
            title: Trainer Id
            type: string
        - description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: start_date
          required: false
          schema:
            description: <p>Query from date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: Start Date
            type: string
        - description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
          in: query
          name: end_date
          required: false
          schema:
            description: <p>Query to date with format YYYY-MM-DD (e.g. 2020-01-01)</p>
            title: End Date
            type: string
        - description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
          in: query
          name: region
          required: false
          schema:
            description: "<p>Query by region codes. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_regions_v1_courses_regions_get'>here</a>.</p><p>Note: If the course query parameter is specified, this will be ignored.</p>"
            items:
              type: string
            title: Region
            type: array
        - description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
          in: query
          name: course
          required: false
          schema:
            description: Query by course ids. Get the full list <a href='https://api.theracingapi.com/documentation#tag/Courses/operation/list_courses_v1_courses_get'>here</a>.
            items:
              type: string
            title: Course
            type: array
        - description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
          in: query
          name: type
          required: false
          schema:
            description: <p>Query by race type:</p><p>chase, flat, hurdle, nh_flat</p>
            items:
              type: string
            title: Type
            type: array
        - description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
          in: query
          name: going
          required: false
          schema:
            description: <p>Query by going:</p><p>fast, firm, good, good_to_firm, good_to_soft, good_to_yielding, hard, heavy, holding, muddy, sloppy, slow, soft, soft_to_heavy, standard, standard_to_fast, standard_to_slow, very_soft, yielding, yielding_to_soft</p>
            items:
              type: string
            title: Going
            type: array
        - description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
          in: query
          name: race_class
          required: false
          schema:
            description: <p>Query by class:</p><p>class_1, class_2, class_3, class_4, class_5, class_6, class_7</p>
            items:
              type: string
            title: Race Class
            type: array
        - description: <p>Query by minimum race distance (yards)</p>
          in: query
          name: min_distance_y
          required: false
          schema:
            description: <p>Query by minimum race distance (yards)</p>
            title: Min Distance Y
            type: integer
        - description: <p>Query by maximum race distance (yards)</p>
          in: query
          name: max_distance_y
          required: false
          schema:
            description: <p>Query by maximum race distance (yards)</p>
            title: Max Distance Y
            type: integer
        - description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
          in: query
          name: age_band
          required: false
          schema:
            description: <p>Query by age band:</p><p>10yo+, 2-3yo, 2yo, 2yo+, 3-4yo, 3-5yo, 3-6yo, 3yo, 3yo+, 4-5yo, 4-6yo, 4-7yo, 4-8yo, 4yo, 4yo+, 5-6yo, 5-7yo, 5-8yo, 5yo, 5yo+, 6-7yo, 6yo, 6yo+, 7yo+, 8yo+, 9yo+</p>
            items:
              type: string
            title: Age Band
            type: array
        - description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
          in: query
          name: sex_restriction
          required: false
          schema:
            description: <p>Query by sex restriction:</p><p>c&f, c&g, f, f&m, m, m&g</p>
            items:
              type: string
            title: Sex Restriction
            type: array
        - in: query
          name: limit
          required: false
          schema:
            default: 25
            maximum: 50
            minimum: 1
            title: Limit
            type: integer
        - in: query
          name: skip
          required: false
          schema:
            default: 0
            title: Skip
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultsPage"
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBasic: []
      summary: Trainer Results
      tags:
        - Trainers
      x-codeSamples:
        - label: curl
          lang: Shell
          source: |
            curl --location\
             --request GET 'api.theracingapi.com/v1/trainers/{trainer_id}/results'\
             --u 'USERNAME:PASSWORD'\
             --d \
        - label: Python3
          lang: Python
          source: |-
            import requests
            from requests.auth import HTTPBasicAuth

            url = "api.theracingapi.com/v1/trainers/{trainer_id}/results"
            params = {}
            response = requests.request("GET", url, auth=HTTPBasicAuth('USERNAME','PASSWORD'), params=params)
            print(response.json())
components:
  schemas:
    ChangeResponse:
      properties:
        text:
          title: Text
          type: string
        type:
          title: Type
          type: string
      title: ChangeResponse
      type: object
    CoursesPage:
      properties:
        courses:
          items:
            $ref: "#/components/schemas/app__models__courses__Course"
          title: Courses
          type: array
        total:
          title: Total
          type: integer
      required:
        - courses
        - total
      title: CoursesPage
      type: object
    Dam:
      properties:
        dam:
          title: Dam
          type: string
        id:
          title: Id
          type: string
      required:
        - id
      title: Dam
      type: object
    DamClassAnalysis:
      properties:
        classes:
          items:
            $ref: "#/components/schemas/app__models__dams__Class"
          title: Classes
          type: array
        dam:
          title: Dam
          type: string
        id:
          title: Id
          type: string
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        total_runners:
          title: Total Runners
          type: integer
      required:
        - id
        - dam
        - total_runners
        - classes
        - query
      title: DamClassAnalysis
      type: object
    DamDistanceAnalysis:
      properties:
        dam:
          title: Dam
          type: string
        distances:
          items:
            $ref: "#/components/schemas/app__models__dams__Distance"
          title: Distances
          type: array
        id:
          title: Id
          type: string
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        total_runners:
          title: Total Runners
          type: integer
      required:
        - id
        - dam
        - total_runners
        - distances
        - query
      title: DamDistanceAnalysis
      type: object
    Dams:
      properties:
        search_results:
          items:
            $ref: "#/components/schemas/Dam"
          title: Search Results
          type: array
      required:
        - search_results
      title: Dams
      type: object
    Damsire:
      properties:
        damsire:
          title: Damsire
          type: string
        id:
          title: Id
          type: string
      required:
        - id
      title: Damsire
      type: object
    DamsireClassAnalysis:
      properties:
        classes:
          items:
            $ref: "#/components/schemas/app__models__damsires__Class"
          title: Classes
          type: array
        damsire:
          title: Damsire
          type: string
        id:
          title: Id
          type: string
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        total_runners:
          title: Total Runners
          type: integer
      required:
        - id
        - damsire
        - total_runners
        - classes
        - query
      title: DamsireClassAnalysis
      type: object
    DamsireDistanceAnalysis:
      properties:
        damsire:
          title: Damsire
          type: string
        distances:
          items:
            $ref: "#/components/schemas/app__models__damsires__Distance"
          title: Distances
          type: array
        id:
          title: Id
          type: string
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        total_runners:
          title: Total Runners
          type: integer
      required:
        - id
        - damsire
        - total_runners
        - distances
        - query
      title: DamsireDistanceAnalysis
      type: object
    Damsires:
      properties:
        search_results:
          items:
            $ref: "#/components/schemas/Damsire"
          title: Search Results
          type: array
      required:
        - search_results
      title: Damsires
      type: object
    Distances:
      properties:
        1_pl:
          title: One unit p/l at SP
          type: number
        1st:
          title: 1st place finishes
          type: integer
        2nd:
          title: 2nd place finishes
          type: integer
        3rd:
          title: 3rd place finishes
          type: integer
        4th:
          title: 4th place finishes
          type: integer
        a/e:
          title: Actual/expected
          type: number
        dist:
          title: Distance
          type: string
        dist_f:
          title: Distance furlongs
          type: string
        dist_m:
          title: Distance metres
          type: string
        dist_y:
          title: Distance yards
          type: string
        runs:
          title: Runs
          type: integer
        times:
          items:
            $ref: "#/components/schemas/TimesGoing"
          title: Times
          type: array
        win_%:
          title: Win percentage (decimal)
          type: number
      required:
        - dist
        - dist_y
        - dist_m
        - dist_f
        - times
        - runs
        - 1st
        - 2nd
        - 3rd
        - 4th
        - a/e
        - win_%
        - 1_pl
      title: Distances
      type: object
    EntriesResponse:
      properties:
        country:
          title: Country
          type: string
        date:
          title: Date
          type: string
        meet_id:
          title: Meet Id
          type: string
        races:
          items:
            $ref: "#/components/schemas/app__models__na_entries__RaceResponse"
          title: Races
          type: array
        track_id:
          title: Track Id
          type: string
        track_name:
          title: Track Name
          type: string
        weather:
          $ref: "#/components/schemas/app__models__na_entries__WeatherResponse"
      required:
        - meet_id
        - track_id
        - track_name
        - country
        - date
        - races
        - weather
      title: EntriesResponse
      type: object
    FractionResponse:
      properties:
        fraction_1:
          $ref: "#/components/schemas/TimeDataResponse"
        fraction_2:
          $ref: "#/components/schemas/TimeDataResponse"
        fraction_3:
          $ref: "#/components/schemas/TimeDataResponse"
        fraction_4:
          $ref: "#/components/schemas/TimeDataResponse"
        fraction_5:
          $ref: "#/components/schemas/TimeDataResponse"
        winning_time:
          $ref: "#/components/schemas/TimeDataResponse"
      title: FractionResponse
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: "#/components/schemas/ValidationError"
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    Horse:
      properties:
        dam:
          title: Dam
          type: string
        dam_id:
          title: Dam Id
          type: string
        damsire:
          title: Damsire
          type: string
        damsire_id:
          title: Damsire Id
          type: string
        horse:
          title: Horse
          type: string
        id:
          title: Id
          type: string
        sire:
          title: Sire
          type: string
        sire_id:
          title: Sire Id
          type: string
      required:
        - id
      title: Horse
      type: object
    HorseAges:
      properties:
        1_pl:
          title: One unit p/l at SP
          type: number
        1st:
          title: 1st place finishes
          type: integer
        2nd:
          title: 2nd place finishes
          type: integer
        3rd:
          title: 3rd place finishes
          type: integer
        4th:
          title: 4th place finishes
          type: integer
        a/e:
          title: Actual/expected
          type: number
        horse_age:
          title: Horse Age
          type: string
        runners:
          title: Runners
          type: integer
        win_%:
          title: Win percentage (decimal)
          type: number
      required:
        - horse_age
        - runners
        - 1st
        - 2nd
        - 3rd
        - 4th
        - a/e
        - win_%
        - 1_pl
      title: HorseAges
      type: object
    HorseDistanceTimeAnalysis:
      properties:
        dam:
          title: Dam
          type: string
        dam_id:
          title: Dam Id
          type: string
        damsire:
          title: Damsire
          type: string
        damsire_id:
          title: Damsire Id
          type: string
        distances:
          items:
            $ref: "#/components/schemas/Distances"
          title: Distances
          type: array
        horse:
          title: Horse
          type: string
        id:
          title: Id
          type: string
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        sire:
          title: Sire
          type: string
        sire_id:
          title: Sire Id
          type: string
        total_runs:
          title: Total Runs
          type: integer
      required:
        - id
        - horse
        - sire
        - sire_id
        - dam
        - dam_id
        - damsire
        - damsire_id
        - total_runs
        - distances
        - query
      title: HorseDistanceTimeAnalysis
      type: object
    Horses:
      properties:
        search_results:
          items:
            $ref: "#/components/schemas/Horse"
          title: Search Results
          type: array
      required:
        - search_results
      title: Horses
      type: object
    JockeyCourseAnalysis:
      properties:
        courses:
          items:
            $ref: "#/components/schemas/app__models__jockeys__Course"
          title: Courses
          type: array
        id:
          title: Id
          type: string
        jockey:
          title: Jockey
          type: string
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        total_rides:
          title: Total Rides
          type: integer
      required:
        - id
        - jockey
        - total_rides
        - courses
        - query
      title: JockeyCourseAnalysis
      type: object
    JockeyDistanceAnalysis:
      properties:
        distances:
          items:
            $ref: "#/components/schemas/app__models__jockeys__Distance"
          title: Distances
          type: array
        id:
          title: Id
          type: string
        jockey:
          title: Jockey
          type: string
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        total_rides:
          title: Total Rides
          type: integer
      required:
        - id
        - jockey
        - total_rides
        - distances
        - query
      title: JockeyDistanceAnalysis
      type: object
    JockeyOwnerAnalysis:
      properties:
        id:
          title: Id
          type: string
        jockey:
          title: Jockey
          type: string
        owners:
          items:
            $ref: "#/components/schemas/app__models__jockeys__Owner"
          title: Owners
          type: array
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        total_rides:
          title: Total Rides
          type: integer
      required:
        - id
        - jockey
        - total_rides
        - owners
        - query
      title: JockeyOwnerAnalysis
      type: object
    JockeyResponse:
      properties:
        alias:
          title: Alias
          type: string
        first_name:
          title: First Name
          type: string
        first_name_initial:
          title: First Name Initial
          type: string
        last_name:
          title: Last Name
          type: string
        middle_name:
          title: Middle Name
          type: string
        type:
          title: Type
          type: string
      title: JockeyResponse
      type: object
    JockeyTrainerAnalysis:
      properties:
        id:
          title: Id
          type: string
        jockey:
          title: Jockey
          type: string
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        total_rides:
          title: Total Rides
          type: integer
        trainers:
          items:
            $ref: "#/components/schemas/app__models__jockeys__Trainer"
          title: Trainers
          type: array
      required:
        - id
        - jockey
        - total_rides
        - trainers
        - query
      title: JockeyTrainerAnalysis
      type: object
    Jockeys:
      properties:
        search_results:
          items:
            $ref: "#/components/schemas/app__models__jockeys__Jockey"
          title: Search Results
          type: array
      required:
        - search_results
      title: Jockeys
      type: object
    MeetResponse:
      properties:
        country:
          title: Country
          type: string
        date:
          title: Date
          type: string
        meet_id:
          title: Meet Id
          type: string
        track_id:
          title: Track Id
          type: string
        track_name:
          title: Track Name
          type: string
      required:
        - country
        - date
        - meet_id
        - track_id
        - track_name
      title: MeetResponse
      type: object
    MeetsResponse:
      properties:
        limit:
          title: Limit
          type: integer
        meets:
          items:
            $ref: "#/components/schemas/MeetResponse"
          title: Meets
          type: array
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        skip:
          title: Skip
          type: integer
      required:
        - limit
        - skip
        - query
      title: MeetsResponse
      type: object
    OwnerCourseAnalysis:
      properties:
        courses:
          items:
            $ref: "#/components/schemas/app__models__owners__Course"
          title: Courses
          type: array
        id:
          title: Id
          type: string
        owner:
          title: Owner
          type: string
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        total_runners:
          title: Total Runners
          type: integer
      required:
        - id
        - owner
        - total_runners
        - courses
        - query
      title: OwnerCourseAnalysis
      type: object
    OwnerDistanceAnalysis:
      properties:
        distances:
          items:
            $ref: "#/components/schemas/app__models__owners__Distance"
          title: Distances
          type: array
        id:
          title: Id
          type: string
        owner:
          title: Owner
          type: string
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        total_runners:
          title: Total Runners
          type: integer
      required:
        - id
        - owner
        - total_runners
        - distances
        - query
      title: OwnerDistanceAnalysis
      type: object
    OwnerJockeyAnalysis:
      properties:
        id:
          title: Id
          type: string
        jockeys:
          items:
            $ref: "#/components/schemas/app__models__owners__Jockey"
          title: Jockeys
          type: array
        owner:
          title: Owner
          type: string
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        total_runners:
          title: Total Runners
          type: integer
      required:
        - id
        - owner
        - total_runners
        - jockeys
        - query
      title: OwnerJockeyAnalysis
      type: object
    OwnerTrainerAnalysis:
      properties:
        id:
          title: Id
          type: string
        owner:
          title: Owner
          type: string
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        total_runners:
          title: Total Runners
          type: integer
        trainers:
          items:
            $ref: "#/components/schemas/app__models__owners__Trainer"
          title: Trainers
          type: array
      required:
        - id
        - owner
        - total_runners
        - trainers
        - query
      title: OwnerTrainerAnalysis
      type: object
    Owners:
      properties:
        search_results:
          items:
            $ref: "#/components/schemas/app__models__owners__Owner"
          title: Search Results
          type: array
      required:
        - search_results
      title: Owners
      type: object
    PayoffResponse:
      properties:
        base_amount:
          title: Base Amount
          type: number
        carryover:
          title: Carryover
          type: number
        number_of_rights:
          title: Number Of Rights
          type: integer
        number_of_tickets_bet:
          title: Number Of Tickets Bet
          type: integer
        payoff_amount:
          title: Payoff Amount
          type: number
        total_pool:
          title: Total Pool
          type: integer
        wager_name:
          title: Wager Name
          type: string
        wager_type:
          title: Wager Type
          type: string
        winning_numbers:
          title: Winning Numbers
          type: string
      title: PayoffResponse
      type: object
    RacePoolResponse:
      properties:
        maximum_wager_amount:
          title: Maximum Wager Amount
          type: integer
        minimum_box_amount:
          title: Minimum Box Amount
          type: integer
        minimum_wager_amount:
          title: Minimum Wager Amount
          type: integer
        minimum_wheel_amount:
          title: Minimum Wheel Amount
          type: integer
        pool_code:
          title: Pool Code
          type: string
        pool_name:
          title: Pool Name
          type: string
        race_list:
          title: Race List
          type: string
      title: RacePoolResponse
      type: object
    Racecard:
      properties:
        age_band:
          title: Age Band
          type: string
        big_race:
          default: false
          title: Big Race
          type: boolean
        course:
          title: Course
          type: string
        course_id:
          title: Course Id
          type: string
        date:
          title: Date
          type: string
        distance:
          title: Distance
          type: string
        distance_f:
          title: Distance F
          type: string
        distance_round:
          title: Distance Round
          type: string
        field_size:
          title: Field Size
          type: string
        going:
          title: Going
          type: string
        going_detailed:
          title: Going Detailed
          type: string
        is_abandoned:
          default: false
          title: Is Abandoned
          type: boolean
        off_dt:
          title: Off Dt
          type: string
        off_time:
          title: Off Time
          type: string
        pattern:
          title: Pattern
          type: string
        prize:
          title: Prize
          type: string
        race_class:
          title: Race Class
          type: string
        race_id:
          title: Race Id
          type: string
        race_name:
          title: Race Name
          type: string
        rail_movements:
          title: Rail Movements
          type: string
        rating_band:
          title: Rating Band
          type: string
        region:
          title: Region
          type: string
        runners:
          items:
            $ref: "#/components/schemas/app__models__racecards__Runner"
          title: Runners
          type: array
        stalls:
          title: Stalls
          type: string
        surface:
          title: Surface
          type: string
        type:
          title: Type
          type: string
        weather:
          title: Weather
          type: string
      required:
        - race_id
        - course
        - course_id
        - date
        - off_time
        - race_name
        - distance_round
        - distance
        - distance_f
        - region
        - pattern
        - race_class
        - type
        - age_band
        - rating_band
        - prize
        - field_size
        - going
        - runners
      title: Racecard
      type: object
    RacecardBasic:
      properties:
        age_band:
          title: Age Band
          type: string
        course:
          title: Course
          type: string
        date:
          title: Date
          type: string
        distance_f:
          title: Distance F
          type: string
        field_size:
          title: Field Size
          type: string
        going:
          title: Going
          type: string
        off_dt:
          title: Off Dt
          type: string
        off_time:
          title: Off Time
          type: string
        pattern:
          title: Pattern
          type: string
        prize:
          title: Prize
          type: string
        race_class:
          title: Race Class
          type: string
        race_name:
          title: Race Name
          type: string
        rating_band:
          title: Rating Band
          type: string
        region:
          title: Region
          type: string
        runners:
          items:
            $ref: "#/components/schemas/RunnerBasic"
          title: Runners
          type: array
        surface:
          title: Surface
          type: string
        type:
          title: Type
          type: string
      required:
        - course
        - date
        - off_time
        - race_name
        - distance_f
        - region
        - pattern
        - race_class
        - type
        - age_band
        - rating_band
        - prize
        - field_size
        - going
        - runners
      title: RacecardBasic
      type: object
    RacecardOdds:
      properties:
        age_band:
          title: Age Band
          type: string
        big_race:
          default: false
          title: Big Race
          type: boolean
        course:
          title: Course
          type: string
        course_id:
          title: Course Id
          type: string
        date:
          title: Date
          type: string
        distance:
          title: Distance
          type: string
        distance_f:
          title: Distance F
          type: string
        distance_round:
          title: Distance Round
          type: string
        field_size:
          title: Field Size
          type: string
        going:
          title: Going
          type: string
        going_detailed:
          title: Going Detailed
          type: string
        is_abandoned:
          default: false
          title: Is Abandoned
          type: boolean
        jumps:
          default: ""
          title: Jumps
          type: string
        off_dt:
          title: Off Dt
          type: string
        off_time:
          title: Off Time
          type: string
        pattern:
          title: Pattern
          type: string
        prize:
          title: Prize
          type: string
        race_class:
          title: Race Class
          type: string
        race_id:
          title: Race Id
          type: string
        race_name:
          title: Race Name
          type: string
        rail_movements:
          title: Rail Movements
          type: string
        rating_band:
          title: Rating Band
          type: string
        region:
          title: Region
          type: string
        runners:
          items:
            $ref: "#/components/schemas/RunnerOdds"
          title: Runners
          type: array
        stalls:
          title: Stalls
          type: string
        surface:
          title: Surface
          type: string
        type:
          title: Type
          type: string
        weather:
          title: Weather
          type: string
      required:
        - race_id
        - course
        - course_id
        - date
        - off_time
        - race_name
        - distance_round
        - distance
        - distance_f
        - region
        - pattern
        - race_class
        - type
        - age_band
        - rating_band
        - prize
        - field_size
        - going
        - runners
      title: RacecardOdds
      type: object
    RacecardSummary:
      properties:
        big_race:
          default: false
          title: Big Race
          type: boolean
        course:
          title: Course
          type: string
        course_id:
          title: Course Id
          type: string
        date:
          title: Date
          type: string
        off_time:
          title: Off Time
          type: string
        race_class:
          title: Race Class
          type: string
        race_id:
          title: Race Id
          type: string
        race_name:
          title: Race Name
          type: string
        region:
          title: Region
          type: string
      required:
        - date
        - region
        - course_id
        - course
        - race_id
        - race_name
        - race_class
        - off_time
      title: RacecardSummary
      type: object
    Racecards:
      properties:
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        racecards:
          items:
            $ref: "#/components/schemas/Racecard"
          title: Racecards
          type: array
      required:
        - racecards
        - query
      title: Racecards
      type: object
    RacecardsBasic:
      properties:
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        racecards:
          items:
            $ref: "#/components/schemas/RacecardBasic"
          title: Racecards
          type: array
      required:
        - racecards
        - query
      title: RacecardsBasic
      type: object
    RacecardsOdds:
      properties:
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        racecards:
          items:
            $ref: "#/components/schemas/RacecardOdds"
          title: Racecards
          type: array
      required:
        - racecards
        - query
      title: RacecardsOdds
      type: object
    RacecardsSummary:
      properties:
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        racecard_summaries:
          items:
            $ref: "#/components/schemas/RacecardSummary"
          title: Racecard Summaries
          type: array
      required:
        - racecard_summaries
        - query
      title: RacecardsSummary
      type: object
    Region:
      properties:
        region:
          title: Region
          type: string
        region_code:
          title: Region Code
          type: string
      required:
        - region
        - region_code
      title: Region
      type: object
    Result:
      properties:
        age_band:
          title: Age Band
          type: string
        class:
          title: Class
          type: string
        course:
          title: Course
          type: string
        course_id:
          title: Course Id
          type: string
        date:
          title: Date
          type: string
        dist:
          title: Dist
          type: string
        dist_f:
          title: Dist F
          type: string
        dist_m:
          title: Dist M
          type: string
        dist_y:
          title: Dist Y
          type: string
        going:
          title: Going
          type: string
        jumps:
          default: ""
          title: Jumps
          type: string
        off:
          title: Off
          type: string
        off_dt:
          title: Off Dt
          type: string
        pattern:
          title: Pattern
          type: string
        race_id:
          title: Race Id
          type: string
        race_name:
          title: Race Name
          type: string
        rating_band:
          title: Rating Band
          type: string
        region:
          title: Region
          type: string
        runners:
          items:
            $ref: "#/components/schemas/app__models__result__Runner"
          title: Runners
          type: array
        sex_rest:
          title: Sex Rest
          type: string
        type:
          title: Type
          type: string
      required:
        - race_id
        - date
        - region
        - course
        - course_id
        - off
        - race_name
        - type
        - class
        - pattern
        - rating_band
        - age_band
        - sex_rest
        - dist
        - dist_y
        - dist_m
        - dist_f
        - going
        - runners
      title: Result
      type: object
    ResultsPage:
      properties:
        limit:
          title: Limit
          type: integer
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        results:
          items:
            $ref: "#/components/schemas/Result"
          title: Results
          type: array
        skip:
          title: Skip
          type: integer
        total:
          title: Total
          type: integer
      required:
        - total
        - limit
        - skip
        - query
      title: ResultsPage
      type: object
    ResultsResponse:
      properties:
        country:
          title: Country
          type: string
        date:
          title: Date
          type: string
        meet_id:
          title: Meet Id
          type: string
        races:
          items:
            $ref: "#/components/schemas/app__models__na_results__RaceResponse"
          title: Races
          type: array
        track_id:
          title: Track Id
          type: string
        track_name:
          title: Track Name
          type: string
        weather:
          $ref: "#/components/schemas/app__models__na_results__WeatherResponse"
      required:
        - meet_id
        - track_id
        - track_name
        - country
        - date
      title: ResultsResponse
      type: object
    RunnerBasic:
      properties:
        age:
          title: Age
          type: string
        colour:
          title: Colour
          type: string
        dam:
          title: Dam
          type: string
        damsire:
          title: Damsire
          type: string
        draw:
          title: Draw
          type: string
        form:
          title: Form
          type: string
        headgear:
          title: Headgear
          type: string
        horse:
          title: Horse
          type: string
        jockey:
          title: Jockey
          type: string
        last_run:
          title: Last Run
          type: string
        lbs:
          title: Lbs
          type: string
        number:
          title: Number
          type: string
        ofr:
          title: Ofr
          type: string
        owner:
          title: Owner
          type: string
        region:
          title: Region
          type: string
        sex:
          title: Sex
          type: string
        sex_code:
          title: Sex Code
          type: string
        sire:
          title: Sire
          type: string
        trainer:
          title: Trainer
          type: string
      required:
        - horse
        - age
        - colour
        - region
        - dam
        - sire
        - damsire
        - trainer
        - owner
        - number
        - draw
        - lbs
        - ofr
        - jockey
        - last_run
      title: RunnerBasic
      type: object
    RunnerMedical:
      properties:
        date:
          default: ""
          title: Date
          type: string
        type:
          default: ""
          title: Type
          type: string
      title: RunnerMedical
      type: object
    RunnerOdds:
      properties:
        age:
          title: Age
          type: string
        breeder:
          title: Breeder
          type: string
        colour:
          title: Colour
          type: string
        comment:
          default: ""
          title: Comment
          type: string
        dam:
          title: Dam
          type: string
        dam_id:
          title: Dam Id
          type: string
        dam_region:
          default: ""
          title: Dam Region
          type: string
        damsire:
          title: Damsire
          type: string
        damsire_id:
          title: Damsire Id
          type: string
        damsire_region:
          default: ""
          title: Damsire Region
          type: string
        dob:
          title: Dob
          type: string
        draw:
          title: Draw
          type: string
        form:
          title: Form
          type: string
        headgear:
          default: ""
          title: Headgear
          type: string
        headgear_run:
          default: ""
          title: Headgear Run
          type: string
        horse:
          title: Horse
          type: string
        horse_id:
          title: Horse Id
          type: string
        jockey:
          title: Jockey
          type: string
        jockey_id:
          title: Jockey Id
          type: string
        last_run:
          title: Last Run
          type: string
        lbs:
          title: Lbs
          type: string
        medical:
          default: []
          items:
            $ref: "#/components/schemas/RunnerMedical"
          title: Medical
          type: array
        number:
          title: Number
          type: string
        odds:
          default: []
          items: {}
          title: Odds
          type: array
        ofr:
          title: Ofr
          type: string
        owner:
          title: Owner
          type: string
        owner_id:
          title: Owner Id
          type: string
        past_results_flags:
          default: []
          items:
            type: string
          title: Past Results Flags
          type: array
        prev_owners:
          default: []
          items:
            $ref: "#/components/schemas/RunnerPrevOwner"
          title: Prev Owners
          type: array
        prev_trainers:
          default: []
          items:
            $ref: "#/components/schemas/RunnerPrevTrainer"
          title: Prev Trainers
          type: array
        quotes:
          default: []
          items:
            $ref: "#/components/schemas/RunnerQuote"
          title: Quotes
          type: array
        region:
          title: Region
          type: string
        rpr:
          title: Rpr
          type: string
        sex:
          title: Sex
          type: string
        sex_code:
          title: Sex Code
          type: string
        silk_url:
          default: ""
          title: Silk Url
          type: string
        sire:
          title: Sire
          type: string
        sire_id:
          title: Sire Id
          type: string
        sire_region:
          default: ""
          title: Sire Region
          type: string
        spotlight:
          default: ""
          title: Spotlight
          type: string
        stable_tour:
          default: []
          items:
            $ref: "#/components/schemas/RunnerStableTour"
          title: Stable Tour
          type: array
        trainer:
          title: Trainer
          type: string
        trainer_14_days:
          allOf:
            - $ref: "#/components/schemas/RunnerTrainer14Days"
          default: {}
          title: Trainer 14 Days
        trainer_id:
          title: Trainer Id
          type: string
        trainer_location:
          default: ""
          title: Trainer Location
          type: string
        trainer_rtf:
          title: Trainer Rtf
          type: string
        ts:
          title: Ts
          type: string
        wind_surgery:
          default: ""
          title: Wind Surgery
          type: string
        wind_surgery_run:
          default: ""
          title: Wind Surgery Run
          type: string
      required:
        - horse_id
        - horse
        - dam
        - dam_id
        - sire
        - sire_id
        - damsire
        - damsire_id
        - trainer
        - trainer_id
        - owner
        - owner_id
        - number
        - draw
        - lbs
        - ofr
        - rpr
        - ts
        - jockey
        - jockey_id
        - last_run
      title: RunnerOdds
      type: object
    RunnerPrevOwner:
      properties:
        change_date:
          default: ""
          title: Change Date
          type: string
        owner:
          default: ""
          title: Owner
          type: string
        owner_id:
          default: ""
          title: Owner Id
          type: string
      title: RunnerPrevOwner
      type: object
    RunnerPrevTrainer:
      properties:
        change_date:
          default: ""
          title: Change Date
          type: string
        trainer:
          default: ""
          title: Trainer
          type: string
        trainer_id:
          default: ""
          title: Trainer Id
          type: string
      title: RunnerPrevTrainer
      type: object
    RunnerQuote:
      properties:
        course:
          default: ""
          title: Course
          type: string
        course_id:
          default: ""
          title: Course Id
          type: string
        date:
          default: ""
          title: Date
          type: string
        distance_f:
          default: ""
          title: Distance F
          type: string
        distance_y:
          default: ""
          title: Distance Y
          type: string
        quote:
          default: ""
          title: Quote
          type: string
        race:
          default: ""
          title: Race
          type: string
      title: RunnerQuote
      type: object
    RunnerStableTour:
      properties:
        quote:
          default: ""
          title: Quote
          type: string
      title: RunnerStableTour
      type: object
    RunnerTrainer14Days:
      properties:
        percent:
          default: ""
          title: Percent
          type: string
        runs:
          default: ""
          title: Runs
          type: string
        wins:
          default: ""
          title: Wins
          type: string
      title: RunnerTrainer14Days
      type: object
    Sire:
      properties:
        id:
          title: Id
          type: string
        sire:
          title: Sire
          type: string
      required:
        - id
      title: Sire
      type: object
    SireClassAnalysis:
      properties:
        classes:
          items:
            $ref: "#/components/schemas/app__models__sires__Class"
          title: Classes
          type: array
        id:
          title: Id
          type: string
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        sire:
          title: Sire
          type: string
        total_runners:
          title: Total Runners
          type: integer
      required:
        - id
        - sire
        - total_runners
        - classes
        - query
      title: SireClassAnalysis
      type: object
    SireDistanceAnalysis:
      properties:
        distances:
          items:
            $ref: "#/components/schemas/app__models__sires__Distance"
          title: Distances
          type: array
        id:
          title: Id
          type: string
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        sire:
          title: Sire
          type: string
        total_runners:
          title: Total Runners
          type: integer
      required:
        - id
        - sire
        - total_runners
        - distances
        - query
      title: SireDistanceAnalysis
      type: object
    Sires:
      properties:
        search_results:
          items:
            $ref: "#/components/schemas/Sire"
          title: Search Results
          type: array
      required:
        - search_results
      title: Sires
      type: object
    TimeDataResponse:
      properties:
        fifths:
          title: Fifths
          type: integer
        hundredths:
          title: Hundredths
          type: integer
        milliseconds:
          title: Milliseconds
          type: integer
        minutes:
          title: Minutes
          type: integer
        seconds:
          title: Seconds
          type: integer
        str_fifths:
          title: Str Fifths
          type: string
        time_in_fifths:
          title: Time In Fifths
          type: string
        time_in_hundredths:
          title: Time In Hundredths
          type: string
      title: TimeDataResponse
      type: object
    TimesGoing:
      properties:
        course:
          title: Course
          type: string
        date:
          title: Date
          type: string
        going:
          title: Going
          type: string
        position:
          title: Position
          type: string
        region:
          title: Region
          type: string
        time:
          title: Time
          type: string
      required:
        - date
        - region
        - course
        - time
        - going
        - position
      title: TimesGoing
      type: object
    TrainerCourseAnalysis:
      properties:
        courses:
          items:
            $ref: "#/components/schemas/app__models__trainers__Course"
          title: Courses
          type: array
        id:
          title: Id
          type: string
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        total_runners:
          title: Total Runners
          type: integer
        trainer:
          title: Trainer
          type: string
      required:
        - id
        - trainer
        - total_runners
        - courses
        - query
      title: TrainerCourseAnalysis
      type: object
    TrainerDistanceAnalysis:
      properties:
        distances:
          items:
            $ref: "#/components/schemas/app__models__trainers__Distance"
          title: Distances
          type: array
        id:
          title: Id
          type: string
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        total_runners:
          title: Total Runners
          type: integer
        trainer:
          title: Trainer
          type: string
      required:
        - id
        - trainer
        - total_runners
        - distances
        - query
      title: TrainerDistanceAnalysis
      type: object
    TrainerHorseAgeAnalysis:
      properties:
        horse_ages:
          items:
            $ref: "#/components/schemas/HorseAges"
          title: Horse Ages
          type: array
        id:
          title: Id
          type: string
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        total_runners:
          title: Total Runners
          type: integer
        trainer:
          title: Trainer
          type: string
      required:
        - id
        - trainer
        - total_runners
        - horse_ages
        - query
      title: TrainerHorseAgeAnalysis
      type: object
    TrainerJockeyAnalysis:
      properties:
        id:
          title: Id
          type: string
        jockeys:
          items:
            $ref: "#/components/schemas/app__models__trainers__Jockey"
          title: Jockeys
          type: array
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        total_runners:
          title: Total Runners
          type: integer
        trainer:
          title: Trainer
          type: string
      required:
        - id
        - trainer
        - total_runners
        - jockeys
        - query
      title: TrainerJockeyAnalysis
      type: object
    TrainerOwnerAnalysis:
      properties:
        id:
          title: Id
          type: string
        owners:
          items:
            $ref: "#/components/schemas/app__models__trainers__Owner"
          title: Owners
          type: array
        query:
          items:
            items: {}
            type: array
          title: Query
          type: array
        total_runners:
          title: Total Runners
          type: integer
        trainer:
          title: Trainer
          type: string
      required:
        - id
        - trainer
        - total_runners
        - owners
        - query
      title: TrainerOwnerAnalysis
      type: object
    TrainerResponse:
      properties:
        alias:
          title: Alias
          type: string
        first_name:
          title: First Name
          type: string
        first_name_initial:
          title: First Name Initial
          type: string
        last_name:
          title: Last Name
          type: string
        middle_name:
          title: Middle Name
          type: string
        type:
          title: Type
          type: string
      title: TrainerResponse
      type: object
    Trainers:
      properties:
        search_results:
          items:
            $ref: "#/components/schemas/app__models__trainers__Trainer"
          title: Search Results
          type: array
      required:
        - search_results
      title: Trainers
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
        - loc
        - msg
        - type
      title: ValidationError
      type: object
    WagerTypeResponse:
      properties:
        base_amount:
          title: Base Amount
          type: string
        wager_description:
          title: Wager Description
          type: string
        wager_type:
          title: Wager Type
          type: string
      title: WagerTypeResponse
      type: object
    app__models__courses__Course:
      properties:
        course:
          title: Course
          type: string
        id:
          title: Id
          type: string
        region:
          title: Region
          type: string
        region_code:
          title: Region Code
          type: string
      required:
        - id
        - course
        - region_code
        - region
      title: Course
      type: object
    app__models__dams__Class:
      properties:
        1_pl:
          title: One unit p/l at SP
          type: number
        1st:
          title: 1st place finishes
          type: integer
        2nd:
          title: 2nd place finishes
          type: integer
        3rd:
          title: 3rd place finishes
          type: integer
        4th:
          title: 4th place finishes
          type: integer
        a/e:
          title: Actual/expected
          type: number
        class:
          title: Class
          type: string
        runners:
          title: Runners
          type: integer
        win_%:
          title: Win percentage (decimal)
          type: number
      required:
        - class
        - runners
        - 1st
        - 2nd
        - 3rd
        - 4th
        - a/e
        - win_%
        - 1_pl
      title: Class
      type: object
    app__models__dams__Distance:
      properties:
        1_pl:
          title: One unit p/l at SP
          type: number
        1st:
          title: 1st place finishes
          type: integer
        2nd:
          title: 2nd place finishes
          type: integer
        3rd:
          title: 3rd place finishes
          type: integer
        4th:
          title: 4th place finishes
          type: integer
        a/e:
          title: Actual/expected
          type: number
        dist:
          title: Dist
          type: string
        dist_f:
          title: Dist F
          type: string
        dist_m:
          title: Dist M
          type: string
        dist_y:
          title: Dist Y
          type: string
        runners:
          title: Runners
          type: integer
        win_%:
          title: Win percentage (decimal)
          type: number
      required:
        - dist
        - dist_y
        - dist_m
        - dist_f
        - runners
        - 1st
        - 2nd
        - 3rd
        - 4th
        - a/e
        - win_%
        - 1_pl
      title: Distance
      type: object
    app__models__damsires__Class:
      properties:
        1_pl:
          title: One unit p/l at SP
          type: number
        1st:
          title: 1st place finishes
          type: integer
        2nd:
          title: 2nd place finishes
          type: integer
        3rd:
          title: 3rd place finishes
          type: integer
        4th:
          title: 4th place finishes
          type: integer
        a/e:
          title: Actual/expected
          type: number
        class:
          title: Class
          type: string
        runners:
          title: Runners
          type: integer
        win_%:
          title: Win percentage (decimal)
          type: number
      required:
        - class
        - runners
        - 1st
        - 2nd
        - 3rd
        - 4th
        - a/e
        - win_%
        - 1_pl
      title: Class
      type: object
    app__models__damsires__Distance:
      properties:
        1_pl:
          title: One unit p/l at SP
          type: number
        1st:
          title: 1st place finishes
          type: integer
        2nd:
          title: 2nd place finishes
          type: integer
        3rd:
          title: 3rd place finishes
          type: integer
        4th:
          title: 4th place finishes
          type: integer
        a/e:
          title: Actual/expected
          type: number
        dist:
          title: Dist
          type: string
        dist_f:
          title: Dist F
          type: string
        dist_m:
          title: Dist M
          type: string
        dist_y:
          title: Dist Y
          type: string
        runners:
          title: Runners
          type: integer
        win_%:
          title: Win percentage (decimal)
          type: number
      required:
        - dist
        - dist_y
        - dist_m
        - dist_f
        - runners
        - 1st
        - 2nd
        - 3rd
        - 4th
        - a/e
        - win_%
        - 1_pl
      title: Distance
      type: object
    app__models__jockeys__Course:
      properties:
        1_pl:
          title: One unit p/l at SP
          type: number
        1st:
          title: 1st place finishes
          type: integer
        2nd:
          title: 2nd place finishes
          type: integer
        3rd:
          title: 3rd place finishes
          type: integer
        4th:
          title: 4th place finishes
          type: integer
        a/e:
          title: Actual/expected
          type: number
        course:
          title: Course
          type: string
        region:
          title: Region
          type: string
        rides:
          title: Rides
          type: integer
        win_%:
          title: Win percentage (decimal)
          type: number
      required:
        - course
        - region
        - rides
        - 1st
        - 2nd
        - 3rd
        - 4th
        - a/e
        - win_%
        - 1_pl
      title: Course
      type: object
    app__models__jockeys__Distance:
      properties:
        1_pl:
          title: One unit p/l at SP
          type: number
        1st:
          title: 1st place finishes
          type: integer
        2nd:
          title: 2nd place finishes
          type: integer
        3rd:
          title: 3rd place finishes
          type: integer
        4th:
          title: 4th place finishes
          type: integer
        a/e:
          title: Actual/expected
          type: number
        dist:
          title: Dist
          type: string
        dist_f:
          title: Dist F
          type: string
        dist_m:
          title: Dist M
          type: string
        dist_y:
          title: Dist Y
          type: string
        rides:
          title: Rides
          type: integer
        win_%:
          title: Win percentage (decimal)
          type: number
      required:
        - dist
        - dist_y
        - dist_m
        - dist_f
        - rides
        - 1st
        - 2nd
        - 3rd
        - 4th
        - a/e
        - win_%
        - 1_pl
      title: Distance
      type: object
    app__models__jockeys__Jockey:
      properties:
        id:
          title: Id
          type: string
        jockey:
          title: Jockey
          type: string
      required:
        - id
      title: Jockey
      type: object
    app__models__jockeys__Owner:
      properties:
        1_pl:
          title: One unit p/l at SP
          type: number
        1st:
          title: 1st place finishes
          type: integer
        2nd:
          title: 2nd place finishes
          type: integer
        3rd:
          title: 3rd place finishes
          type: integer
        4th:
          title: 4th place finishes
          type: integer
        a/e:
          title: Actual/expected
          type: number
        owner:
          title: Owner
          type: string
        owner_id:
          title: Owner Id
          type: string
        rides:
          title: Rides
          type: integer
        win_%:
          title: Win percentage (decimal)
          type: number
      required:
        - owner_id
        - owner
        - rides
        - 1st
        - 2nd
        - 3rd
        - 4th
        - a/e
        - win_%
        - 1_pl
      title: Owner
      type: object
    app__models__jockeys__Trainer:
      properties:
        1_pl:
          title: One unit p/l at SP
          type: number
        1st:
          title: 1st place finishes
          type: integer
        2nd:
          title: 2nd place finishes
          type: integer
        3rd:
          title: 3rd place finishes
          type: integer
        4th:
          title: 4th place finishes
          type: integer
        a/e:
          title: Actual/expected
          type: number
        rides:
          title: Rides
          type: integer
        trainer:
          title: Trainer
          type: string
        trainer_id:
          title: Trainer Id
          type: string
        win_%:
          title: Win percentage (decimal)
          type: number
      required:
        - trainer_id
        - trainer
        - rides
        - 1st
        - 2nd
        - 3rd
        - 4th
        - a/e
        - win_%
        - 1_pl
      title: Trainer
      type: object
    app__models__na_entries__RaceKeyResponse:
      properties:
        day_evening:
          title: Day Evening
          type: string
        race_number:
          title: Race Number
          type: string
      title: RaceKeyResponse
      type: object
    app__models__na_entries__RaceResponse:
      properties:
        age_restriction:
          title: Age Restriction
          type: string
        age_restriction_description:
          title: Age Restriction Description
          type: string
        breed:
          title: Breed
          type: string
        changes:
          items:
            $ref: "#/components/schemas/ChangeResponse"
          title: Changes
          type: array
        course_type:
          title: Course Type
          type: string
        course_type_class:
          title: Course Type Class
          type: string
        distance_description:
          title: Distance Description
          type: string
        distance_unit:
          title: Distance Unit
          type: string
        distance_value:
          anyOf:
            - type: integer
            - type: string
          title: Distance Value
        grade:
          title: Grade
          type: string
        handicapper_name:
          title: Handicapper Name
          type: string
        has_finished:
          title: Has Finished
          type: boolean
        has_results:
          title: Has Results
          type: boolean
        is_cancelled:
          title: Is Cancelled
          type: boolean
        max_claim_price:
          anyOf:
            - type: integer
            - type: string
          title: Max Claim Price
        min_claim_price:
          anyOf:
            - type: integer
            - type: string
          title: Min Claim Price
        mtp:
          title: Mtp
          type: integer
        post_time:
          title: Post Time
          type: string
        post_time_long:
          title: Post Time Long
          type: string
        purse:
          anyOf:
            - type: integer
            - type: string
          title: Purse
        race_class:
          title: Race Class
          type: string
        race_key:
          $ref: "#/components/schemas/app__models__na_entries__RaceKeyResponse"
        race_name:
          title: Race Name
          type: string
        race_pools:
          items:
            $ref: "#/components/schemas/RacePoolResponse"
          title: Race Pools
          type: array
        race_restriction:
          title: Race Restriction
          type: string
        race_restriction_description:
          title: Race Restriction Description
          type: string
        race_type:
          title: Race Type
          type: string
        race_type_description:
          title: Race Type Description
          type: string
        runners:
          items:
            $ref: "#/components/schemas/app__models__na_entries__RunnerResponse"
          title: Runners
          type: array
        sex_restriction:
          title: Sex Restriction
          type: string
        sex_restriction_description:
          title: Sex Restriction Description
          type: string
        surface_description:
          title: Surface Description
          type: string
        time_zone:
          title: Time Zone
          type: string
        tote_track_id:
          title: Tote Track Id
          type: string
        track_condition:
          title: Track Condition
          type: string
        track_name:
          title: Track Name
          type: string
      required:
        - race_key
        - runners
      title: RaceResponse
      type: object
    app__models__na_entries__RunnerResponse:
      properties:
        claiming:
          anyOf:
            - type: integer
            - type: string
          title: Claiming
        coupled_type:
          title: Coupled Type
          type: string
        dam_name:
          title: Dam Name
          type: string
        dam_sire_name:
          title: Dam Sire Name
          type: string
        description:
          title: Description
          type: string
        equipment:
          title: Equipment
          type: string
        handicapper_name:
          title: Handicapper Name
          type: string
        horse_name:
          title: Horse Name
          type: string
        jockey:
          $ref: "#/components/schemas/JockeyResponse"
        live_odds:
          title: Live Odds
          type: string
        medication:
          title: Medication
          type: string
        morning_line_odds:
          title: Morning Line Odds
          type: string
        post_pos:
          title: Post Pos
          type: string
        program_number:
          title: Program Number
          type: string
        program_number_stripped:
          title: Program Number Stripped
          type: integer
        scratch_indicator:
          title: Scratch Indicator
          type: string
        sire_name:
          title: Sire Name
          type: string
        trainer:
          $ref: "#/components/schemas/TrainerResponse"
        weight:
          title: Weight
          type: string
      title: RunnerResponse
      type: object
    app__models__na_entries__WeatherResponse:
      properties:
        current_weather_description:
          title: Current Weather Description
          type: string
        forecast_high:
          anyOf:
            - type: integer
            - type: string
          title: Forecast High
        forecast_low:
          anyOf:
            - type: integer
            - type: string
          title: Forecast Low
        forecast_precipitation:
          anyOf:
            - type: integer
            - type: string
          title: Forecast Precipitation
        forecast_weather_description:
          title: Forecast Weather Description
          type: string
      title: WeatherResponse
      type: object
    app__models__na_results__RaceKeyResponse:
      properties:
        day_evening:
          title: Day Evening
          type: string
        race_number:
          title: Race Number
          type: string
      title: RaceKeyResponse
      type: object
    app__models__na_results__RaceResponse:
      properties:
        age_restriction:
          title: Age Restriction
          type: string
        age_restriction_description:
          title: Age Restriction Description
          type: string
        also_ran:
          anyOf:
            - type: string
            - items: {}
              type: array
          title: Also Ran
        breed:
          title: Breed
          type: string
        distance_description:
          title: Distance Description
          type: string
        distance_unit:
          title: Distance Unit
          type: string
        distance_value:
          anyOf:
            - type: integer
            - type: string
          title: Distance Value
        fraction:
          $ref: "#/components/schemas/FractionResponse"
        grade:
          title: Grade
          type: string
        maximum_claim_price:
          title: Maximum Claim Price
          type: string
        minimum_claim_price:
          title: Minimum Claim Price
          type: string
        off_time:
          title: Off Time
          type: integer
        payoffs:
          items:
            $ref: "#/components/schemas/PayoffResponse"
          title: Payoffs
          type: array
        post_time:
          title: Post Time
          type: string
        post_time_long:
          title: Post Time Long
          type: integer
        race_class:
          title: Race Class
          type: string
        race_key:
          $ref: "#/components/schemas/app__models__na_results__RaceKeyResponse"
        race_name:
          title: Race Name
          type: string
        race_restriction:
          title: Race Restriction
          type: string
        race_restriction_description:
          title: Race Restriction Description
          type: string
        race_type:
          title: Race Type
          type: string
        race_type_description:
          title: Race Type Description
          type: string
        runners:
          items:
            $ref: "#/components/schemas/app__models__na_results__RunnerResponse"
          title: Runners
          type: array
        scratches:
          items:
            type: string
          title: Scratches
          type: array
        sex_restriction:
          title: Sex Restriction
          type: string
        sex_restriction_description:
          title: Sex Restriction Description
          type: string
        surface:
          title: Surface
          type: string
        surface_description:
          title: Surface Description
          type: string
        time_zone:
          title: Time Zone
          type: string
        total_purse:
          title: Total Purse
          type: string
        track_condition_description:
          title: Track Condition Description
          type: string
        track_name:
          title: Track Name
          type: string
        wager_types:
          items:
            $ref: "#/components/schemas/WagerTypeResponse"
          title: Wager Types
          type: array
      title: RaceResponse
      type: object
    app__models__na_results__RunnerResponse:
      properties:
        breeder_name:
          title: Breeder Name
          type: string
        horse_name:
          title: Horse Name
          type: string
        jockey_first_name:
          title: Jockey First Name
          type: string
        jockey_first_name_initial:
          title: Jockey First Name Initial
          type: string
        jockey_last_name:
          title: Jockey Last Name
          type: string
        owner_first_name:
          title: Owner First Name
          type: string
        owner_last_name:
          title: Owner Last Name
          type: string
        place_payoff:
          title: Place Payoff
          type: number
        program_number:
          title: Program Number
          type: string
        program_number_stripped:
          title: Program Number Stripped
          type: integer
        show_payoff:
          title: Show Payoff
          type: number
        sire_name:
          title: Sire Name
          type: string
        trainer_first_name:
          title: Trainer First Name
          type: string
        trainer_last_name:
          title: Trainer Last Name
          type: string
        weight_carried:
          title: Weight Carried
          type: string
        win_payoff:
          title: Win Payoff
          type: number
      title: RunnerResponse
      type: object
    app__models__na_results__WeatherResponse:
      properties:
        current_temperature:
          title: Current Temperature
          type: string
        current_weather_description:
          title: Current Weather Description
          type: string
        date:
          title: Date
          type: string
        forecast_high:
          anyOf:
            - type: integer
            - type: string
          title: Forecast High
        forecast_low:
          anyOf:
            - type: integer
            - type: string
          title: Forecast Low
        forecast_precipitation:
          anyOf:
            - type: integer
            - type: string
          title: Forecast Precipitation
        forecast_weather_description:
          title: Forecast Weather Description
          type: string
      title: WeatherResponse
      type: object
    app__models__owners__Course:
      properties:
        1_pl:
          title: One unit p/l at SP
          type: number
        1st:
          title: 1st place finishes
          type: integer
        2nd:
          title: 2nd place finishes
          type: integer
        3rd:
          title: 3rd place finishes
          type: integer
        4th:
          title: 4th place finishes
          type: integer
        a/e:
          title: Actual/expected
          type: number
        course:
          title: Course
          type: string
        region:
          title: Region
          type: string
        runners:
          title: Runners
          type: integer
        win_%:
          title: Win percentage (decimal)
          type: number
      required:
        - course
        - region
        - runners
        - 1st
        - 2nd
        - 3rd
        - 4th
        - a/e
        - win_%
        - 1_pl
      title: Course
      type: object
    app__models__owners__Distance:
      properties:
        1_pl:
          title: One unit p/l at SP
          type: number
        1st:
          title: 1st place finishes
          type: integer
        2nd:
          title: 2nd place finishes
          type: integer
        3rd:
          title: 3rd place finishes
          type: integer
        4th:
          title: 4th place finishes
          type: integer
        a/e:
          title: Actual/expected
          type: number
        dist:
          title: Dist
          type: string
        dist_f:
          title: Dist F
          type: string
        dist_m:
          title: Dist M
          type: string
        dist_y:
          title: Dist Y
          type: string
        runners:
          title: Runners
          type: integer
        win_%:
          title: Win percentage (decimal)
          type: number
      required:
        - dist
        - dist_y
        - dist_m
        - dist_f
        - runners
        - 1st
        - 2nd
        - 3rd
        - 4th
        - a/e
        - win_%
        - 1_pl
      title: Distance
      type: object
    app__models__owners__Jockey:
      properties:
        1_pl:
          title: One unit p/l at SP
          type: number
        1st:
          title: 1st place finishes
          type: integer
        2nd:
          title: 2nd place finishes
          type: integer
        3rd:
          title: 3rd place finishes
          type: integer
        4th:
          title: 4th place finishes
          type: integer
        a/e:
          title: Actual/expected
          type: number
        jockey:
          title: Jockey
          type: string
        jockey_id:
          title: Jockey Id
          type: string
        runners:
          title: Runners
          type: integer
        win_%:
          title: Win percentage (decimal)
          type: number
      required:
        - jockey_id
        - jockey
        - runners
        - 1st
        - 2nd
        - 3rd
        - 4th
        - a/e
        - win_%
        - 1_pl
      title: Jockey
      type: object
    app__models__owners__Owner:
      properties:
        id:
          title: Id
          type: string
        owner:
          title: Owner
          type: string
      required:
        - id
      title: Owner
      type: object
    app__models__owners__Trainer:
      properties:
        1_pl:
          title: One unit p/l at SP
          type: number
        1st:
          title: 1st place finishes
          type: integer
        2nd:
          title: 2nd place finishes
          type: integer
        3rd:
          title: 3rd place finishes
          type: integer
        4th:
          title: 4th place finishes
          type: integer
        a/e:
          title: Actual/expected
          type: number
        runners:
          title: Runners
          type: integer
        trainer:
          title: Trainer
          type: string
        trainer_id:
          title: Trainer Id
          type: string
        win_%:
          title: Win percentage (decimal)
          type: number
      required:
        - trainer_id
        - trainer
        - runners
        - 1st
        - 2nd
        - 3rd
        - 4th
        - a/e
        - win_%
        - 1_pl
      title: Trainer
      type: object
    app__models__racecards__Runner:
      properties:
        age:
          title: Age
          type: string
        breeder:
          title: Breeder
          type: string
        colour:
          title: Colour
          type: string
        comment:
          default: ""
          title: Comment
          type: string
        dam:
          title: Dam
          type: string
        dam_id:
          title: Dam Id
          type: string
        dam_region:
          default: ""
          title: Dam Region
          type: string
        damsire:
          title: Damsire
          type: string
        damsire_id:
          title: Damsire Id
          type: string
        damsire_region:
          default: ""
          title: Damsire Region
          type: string
        dob:
          title: Dob
          type: string
        draw:
          title: Draw
          type: string
        form:
          title: Form
          type: string
        headgear:
          default: ""
          title: Headgear
          type: string
        headgear_run:
          default: ""
          title: Headgear Run
          type: string
        horse:
          title: Horse
          type: string
        horse_id:
          title: Horse Id
          type: string
        jockey:
          title: Jockey
          type: string
        jockey_id:
          title: Jockey Id
          type: string
        last_run:
          title: Last Run
          type: string
        lbs:
          title: Lbs
          type: string
        medical:
          default: []
          items:
            $ref: "#/components/schemas/RunnerMedical"
          title: Medical
          type: array
        number:
          title: Number
          type: string
        ofr:
          title: Ofr
          type: string
        owner:
          title: Owner
          type: string
        owner_id:
          title: Owner Id
          type: string
        past_results_flags:
          default: []
          items:
            type: string
          title: Past Results Flags
          type: array
        prev_owners:
          default: []
          items:
            $ref: "#/components/schemas/RunnerPrevOwner"
          title: Prev Owners
          type: array
        prev_trainers:
          default: []
          items:
            $ref: "#/components/schemas/RunnerPrevTrainer"
          title: Prev Trainers
          type: array
        quotes:
          default: []
          items:
            $ref: "#/components/schemas/RunnerQuote"
          title: Quotes
          type: array
        region:
          title: Region
          type: string
        rpr:
          title: Rpr
          type: string
        sex:
          title: Sex
          type: string
        sex_code:
          title: Sex Code
          type: string
        silk_url:
          default: ""
          title: Silk Url
          type: string
        sire:
          title: Sire
          type: string
        sire_id:
          title: Sire Id
          type: string
        sire_region:
          default: ""
          title: Sire Region
          type: string
        spotlight:
          default: ""
          title: Spotlight
          type: string
        stable_tour:
          default: []
          items:
            $ref: "#/components/schemas/RunnerStableTour"
          title: Stable Tour
          type: array
        trainer:
          title: Trainer
          type: string
        trainer_14_days:
          allOf:
            - $ref: "#/components/schemas/RunnerTrainer14Days"
          default: {}
          title: Trainer 14 Days
        trainer_id:
          title: Trainer Id
          type: string
        trainer_location:
          default: ""
          title: Trainer Location
          type: string
        trainer_rtf:
          title: Trainer Rtf
          type: string
        ts:
          title: Ts
          type: string
        wind_surgery:
          default: ""
          title: Wind Surgery
          type: string
        wind_surgery_run:
          default: ""
          title: Wind Surgery Run
          type: string
      required:
        - horse_id
        - horse
        - dam
        - dam_id
        - sire
        - sire_id
        - damsire
        - damsire_id
        - trainer
        - trainer_id
        - owner
        - owner_id
        - number
        - draw
        - lbs
        - ofr
        - rpr
        - ts
        - jockey
        - jockey_id
        - last_run
      title: Runner
      type: object
    app__models__result__Runner:
      properties:
        age:
          title: Age
          type: string
        btn:
          title: Btn
          type: string
        comment:
          title: Comment
          type: string
        dam:
          title: Dam
          type: string
        dam_id:
          title: Dam Id
          type: string
        damsire:
          title: Damsire
          type: string
        damsire_id:
          title: Damsire Id
          type: string
        draw:
          title: Draw
          type: string
        headgear:
          title: Headgear
          type: string
        horse:
          title: Horse
          type: string
        horse_id:
          title: Horse Id
          type: string
        jockey:
          title: Jockey
          type: string
        jockey_id:
          title: Jockey Id
          type: string
        number:
          title: Number
          type: string
        or:
          title: Or
          type: string
        ovr_btn:
          title: Ovr Btn
          type: string
        owner:
          title: Owner
          type: string
        owner_id:
          title: Owner Id
          type: string
        position:
          title: Position
          type: string
        prize:
          title: Prize
          type: string
        rpr:
          title: Rpr
          type: string
        sex:
          title: Sex
          type: string
        silk_url:
          default: ""
          title: Silk Url
          type: string
        sire:
          title: Sire
          type: string
        sire_id:
          title: Sire Id
          type: string
        sp:
          title: Sp
          type: string
        sp_dec:
          title: Sp Dec
          type: string
        time:
          title: Time
          type: string
        trainer:
          title: Trainer
          type: string
        trainer_id:
          title: Trainer Id
          type: string
        tsr:
          title: Tsr
          type: string
        weight:
          title: Weight
          type: string
        weight_lbs:
          title: Weight Lbs
          type: string
      required:
        - horse_id
        - horse
        - sp
        - sp_dec
        - number
        - position
        - draw
        - btn
        - ovr_btn
        - age
        - sex
        - weight
        - weight_lbs
        - headgear
        - time
        - or
        - rpr
        - tsr
        - prize
        - jockey
        - jockey_id
        - trainer
        - trainer_id
        - owner
        - owner_id
        - sire
        - sire_id
        - dam
        - dam_id
        - damsire
        - damsire_id
        - comment
      title: Runner
      type: object
    app__models__sires__Class:
      properties:
        1_pl:
          title: One unit p/l at SP
          type: number
        1st:
          title: 1st place finishes
          type: integer
        2nd:
          title: 2nd place finishes
          type: integer
        3rd:
          title: 3rd place finishes
          type: integer
        4th:
          title: 4th place finishes
          type: integer
        a/e:
          title: Actual/expected
          type: number
        class:
          title: Class
          type: string
        runners:
          title: Runners
          type: integer
        win_%:
          title: Win percentage (decimal)
          type: number
      required:
        - class
        - runners
        - 1st
        - 2nd
        - 3rd
        - 4th
        - a/e
        - win_%
        - 1_pl
      title: Class
      type: object
    app__models__sires__Distance:
      properties:
        1_pl:
          title: One unit p/l at SP
          type: number
        1st:
          title: 1st place finishes
          type: integer
        2nd:
          title: 2nd place finishes
          type: integer
        3rd:
          title: 3rd place finishes
          type: integer
        4th:
          title: 4th place finishes
          type: integer
        a/e:
          title: Actual/expected
          type: number
        dist:
          title: Dist
          type: string
        dist_f:
          title: Dist F
          type: string
        dist_m:
          title: Dist M
          type: string
        dist_y:
          title: Dist Y
          type: string
        runners:
          title: Runners
          type: integer
        win_%:
          title: Win percentage (decimal)
          type: number
      required:
        - dist
        - dist_y
        - dist_m
        - dist_f
        - runners
        - 1st
        - 2nd
        - 3rd
        - 4th
        - a/e
        - win_%
        - 1_pl
      title: Distance
      type: object
    app__models__trainers__Course:
      properties:
        1_pl:
          title: One unit p/l at SP
          type: number
        1st:
          title: 1st place finishes
          type: integer
        2nd:
          title: 2nd place finishes
          type: integer
        3rd:
          title: 3rd place finishes
          type: integer
        4th:
          title: 4th place finishes
          type: integer
        a/e:
          title: Actual/expected
          type: number
        course:
          title: Course
          type: string
        region:
          title: Region
          type: string
        runners:
          title: Runners
          type: integer
        win_%:
          title: Win percentage (decimal)
          type: number
      required:
        - course
        - region
        - runners
        - 1st
        - 2nd
        - 3rd
        - 4th
        - a/e
        - win_%
        - 1_pl
      title: Course
      type: object
    app__models__trainers__Distance:
      properties:
        1_pl:
          title: One unit p/l at SP
          type: number
        1st:
          title: 1st place finishes
          type: integer
        2nd:
          title: 2nd place finishes
          type: integer
        3rd:
          title: 3rd place finishes
          type: integer
        4th:
          title: 4th place finishes
          type: integer
        a/e:
          title: Actual/expected
          type: number
        dist:
          title: Dist
          type: string
        dist_f:
          title: Dist F
          type: string
        dist_m:
          title: Dist M
          type: string
        dist_y:
          title: Dist Y
          type: string
        runners:
          title: Runners
          type: integer
        win_%:
          title: Win percentage (decimal)
          type: number
      required:
        - dist
        - dist_y
        - dist_m
        - dist_f
        - runners
        - 1st
        - 2nd
        - 3rd
        - 4th
        - a/e
        - win_%
        - 1_pl
      title: Distance
      type: object
    app__models__trainers__Jockey:
      properties:
        1_pl:
          title: One unit p/l at SP
          type: number
        1st:
          title: 1st place finishes
          type: integer
        2nd:
          title: 2nd place finishes
          type: integer
        3rd:
          title: 3rd place finishes
          type: integer
        4th:
          title: 4th place finishes
          type: integer
        a/e:
          title: Actual/expected
          type: number
        jockey:
          title: Jockey
          type: string
        jockey_id:
          title: Jockey Id
          type: string
        runners:
          title: Runners
          type: integer
        win_%:
          title: Win percentage (decimal)
          type: number
      required:
        - jockey_id
        - jockey
        - runners
        - 1st
        - 2nd
        - 3rd
        - 4th
        - a/e
        - win_%
        - 1_pl
      title: Jockey
      type: object
    app__models__trainers__Owner:
      properties:
        1_pl:
          title: One unit p/l at SP
          type: number
        1st:
          title: 1st place finishes
          type: integer
        2nd:
          title: 2nd place finishes
          type: integer
        3rd:
          title: 3rd place finishes
          type: integer
        4th:
          title: 4th place finishes
          type: integer
        a/e:
          title: Actual/expected
          type: number
        owner:
          title: Owner
          type: string
        owner_id:
          title: Owner Id
          type: string
        runners:
          title: Runners
          type: integer
        win_%:
          title: Win percentage (decimal)
          type: number
      required:
        - owner_id
        - owner
        - runners
        - 1st
        - 2nd
        - 3rd
        - 4th
        - a/e
        - win_%
        - 1_pl
      title: Owner
      type: object
    app__models__trainers__Trainer:
      properties:
        id:
          title: Id
          type: string
        trainer:
          title: Trainer
          type: string
      required:
        - id
      title: Trainer
      type: object
  securitySchemes:
    HTTPBasic:
      scheme: basic
      type: http
x-meta:
  title: The Racing API - Documentation
x-tagGroups:
  - name: Core API Endpoints
    tags:
      - Courses
      - Dams
      - Damsires
      - Horses
      - Jockeys
      - Owners
      - Racecards
      - Results
      - Sires
      - Trainers
  - name: Regional API Endpoints
    tags:
      - North America
